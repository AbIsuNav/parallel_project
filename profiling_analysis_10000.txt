Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 58.48     10.60    10.60     7501     0.00     0.00  Individual::draw_CV(unsigned char*, int, int)
 36.96     17.30     6.70     7500     0.00     0.00  utils::diff(unsigned char const*, unsigned char const*, int, int)
  1.21     17.52     0.22    28639     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
  0.66     17.64     0.12    28639     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
  0.22     17.68     0.04 17842097     0.00     0.00  std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.22     17.72     0.04   234949     0.00     0.00  void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag)
  0.17     17.75     0.03  1395372     0.00     0.00  cv::Mat::release()
  0.17     17.78     0.03   839581     0.00     0.00  std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&)
  0.14     17.81     0.03   354465     0.00     0.00  cv::Mat::~Mat()
  0.11     17.83     0.02 17870736     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long)
  0.11     17.85     0.02 17842097     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long)
  0.11     17.87     0.02  5692312     0.00     0.00  std::_List_iterator<Polygon*>::operator++()
  0.11     17.89     0.02  1989847     0.00     0.00  std::_List_iterator<Point*>::operator*() const
  0.11     17.91     0.02  1095046     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::end()
  0.06     17.92     0.01 17870736     0.00     0.00  std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.06     17.93     0.01  3358324     0.00     0.00  Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&)
  0.06     17.94     0.01  2250625     0.00     0.00  std::_List_iterator<Point*>::operator++()
  0.06     17.95     0.01  1404968     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::begin()
  0.06     17.96     0.01  1150266     0.00     0.00  Polygon::get_point(int)
  0.06     17.97     0.01  1149478     0.00     0.00  Point::get_y()
  0.06     17.98     0.01  1144216     0.00     0.00  cv::Point_<int>::Point_(int, int)
  0.06     17.99     0.01  1144216     0.00     0.00  cv::Point_<int>::operator=(cv::Point_<int>&&)
  0.06     18.00     0.01   839581     0.00     0.00  std::remove_reference<Point*&>::type&& std::move<Point*&>(Point*&)
  0.06     18.01     0.01   348701     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_size() const
  0.06     18.02     0.01   346963     0.00     0.00  cv::MatStep::MatStep(unsigned long)
  0.06     18.03     0.01   346962     0.00     0.00  cv::_InputOutputArray::_InputOutputArray(cv::Mat&)
  0.06     18.04     0.01   346962     0.00     0.00  cv::Mat::Mat()
  0.06     18.05     0.01   346962     0.00     0.00  cv::Matx<double, 4, 1>::Matx()
  0.06     18.06     0.01   346962     0.00     0.00  Colour::get_r()
  0.06     18.07     0.01   254601     0.00     0.00  Polygon::Polygon(Polygon*)
  0.06     18.08     0.01   231467     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&)
  0.06     18.09     0.01     2500     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual*> >, std::is_move_constructible<Individual*>, std::is_move_assignable<Individual*> >::value, void>::type std::swap<Individual*>(Individual*&, Individual*&)
  0.06     18.10     0.01     2500     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.06     18.11     0.01     1775     0.00     0.00  GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*)
  0.06     18.12     0.01        1     0.01    18.10  GeneticAlgorithm::evolve(int)
  0.03     18.12     0.01  2500216     0.00     0.00  std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*)
  0.03     18.13     0.01   254820     0.00     0.00  std::allocator<std::_List_node<Point*> >::allocator()
  0.03     18.13     0.01        1     0.01     0.01  std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, int)
  0.00     18.13     0.00  3122662     0.00     0.00  cv::_InputArray::init(int, void const*)
  0.00     18.13     0.00  2830393     0.00     0.00  __gnu_cxx::__aligned_membuf<Point*>::_M_ptr()
  0.00     18.13     0.00  2830393     0.00     0.00  __gnu_cxx::__aligned_membuf<Point*>::_M_addr()
  0.00     18.13     0.00  2830393     0.00     0.00  std::_List_node<Point*>::_M_valptr()
  0.00     18.13     0.00  2288432     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00     18.13     0.00  1734813     0.00     0.00  cv::_InputArray::~_InputArray()
  0.00     18.13     0.00  1734813     0.00     0.00  cv::Size_<int>::Size_()
  0.00     18.13     0.00  1491178     0.00     0.00  cv::Point_<int>::Point_()
  0.00     18.13     0.00  1150367     0.00     0.00  std::iterator_traits<std::_List_iterator<Point*> >::iterator_category std::__iterator_category<std::_List_iterator<Point*> >(std::_List_iterator<Point*> const&)
  0.00     18.13     0.00  1150367     0.00     0.00  void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag)
  0.00     18.13     0.00  1150279     0.00     0.00  std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type)
  0.00     18.13     0.00  1150279     0.00     0.00  void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long)
  0.00     18.13     0.00  1149478     0.00     0.00  Point::get_x()
  0.00     18.13     0.00  1107856     0.00     0.00  operator new(unsigned long, void*)
  0.00     18.13     0.00  1094182     0.00     0.00  std::_List_iterator<Point*>::operator!=(std::_List_iterator<Point*> const&) const
  0.00     18.13     0.00  1040887     0.00     0.00  cv::_InputArray::_InputArray()
  0.00     18.13     0.00  1040887     0.00     0.00  cv::_OutputArray::~_OutputArray()
  0.00     18.13     0.00  1002886     0.00     0.00  Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&)
  0.00     18.13     0.00   840546     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator()
  0.00     18.13     0.00   840533     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Point*> >::allocate(unsigned long, void const*)
  0.00     18.13     0.00   840533     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Point*> >::max_size() const
  0.00     18.13     0.00   840533     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*)
  0.00     18.13     0.00   840533     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::~__allocated_ptr()
  0.00     18.13     0.00   840533     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::operator=(decltype(nullptr))
  0.00     18.13     0.00   840533     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<Point*> > >::allocate(std::allocator<std::_List_node<Point*> >&, unsigned long)
  0.00     18.13     0.00   840533     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node()
  0.00     18.13     0.00   840533     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long)
  0.00     18.13     0.00   840533     0.00     0.00  std::allocator<std::_List_node<Point*> >* std::__addressof<std::allocator<std::_List_node<Point*> > >(std::allocator<std::_List_node<Point*> >&)
  0.00     18.13     0.00   839581     0.00     0.00  Point::Point(Point*)
  0.00     18.13     0.00   839581     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&)
  0.00     18.13     0.00   839581     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&)
  0.00     18.13     0.00   839581     0.00     0.00  void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&)
  0.00     18.13     0.00   839581     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&)
  0.00     18.13     0.00   813569     0.00     0.00  __gnu_cxx::__aligned_membuf<Polygon*>::_M_ptr()
  0.00     18.13     0.00   813569     0.00     0.00  __gnu_cxx::__aligned_membuf<Polygon*>::_M_addr()
  0.00     18.13     0.00   813569     0.00     0.00  std::_List_node<Polygon*>::_M_valptr()
  0.00     18.13     0.00   693926     0.00     0.00  cv::_InputArray::_InputArray(cv::Mat const&)
  0.00     18.13     0.00   693925     0.00     0.00  cv::_OutputArray::_OutputArray(cv::Mat&)
  0.00     18.13     0.00   693924     0.00     0.00  Colour::get_a()
  0.00     18.13     0.00   581959     0.00     0.00  std::_List_iterator<Polygon*>::operator*() const
  0.00     18.13     0.00   481710     0.00     0.00  std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*)
  0.00     18.13     0.00   354583     0.00     0.00  std::_List_iterator<Polygon*>::operator!=(std::_List_iterator<Polygon*> const&) const
  0.00     18.13     0.00   354485     0.00     0.00  cv::MatSize::MatSize(int*)
  0.00     18.13     0.00   348701     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::_M_node_count() const
  0.00     18.13     0.00   348701     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::size() const
  0.00     18.13     0.00   348633     0.00     0.00  Polygon::get_points_length()
  0.00     18.13     0.00   346962     0.00     0.00  cv::_OutputArray::_OutputArray()
  0.00     18.13     0.00   346962     0.00     0.00  cv::_InputOutputArray::~_InputOutputArray()
  0.00     18.13     0.00   346962     0.00     0.00  cv::Vec<double, 4>::Vec()
  0.00     18.13     0.00   346962     0.00     0.00  cv::Scalar_<double>::Scalar_(double, double, double, double)
  0.00     18.13     0.00   346962     0.00     0.00  Colour::get_b()
  0.00     18.13     0.00   346962     0.00     0.00  Colour::get_g()
  0.00     18.13     0.00   346962     0.00     0.00  cv::Mat::clone() const
  0.00     18.13     0.00   259824     0.00     0.00  std::__detail::_List_node_header::_M_init()
  0.00     18.13     0.00   259824     0.00     0.00  std::__detail::_List_node_header::_List_node_header()
  0.00     18.13     0.00   254820     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Point*> >::new_allocator()
  0.00     18.13     0.00   254820     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl()
  0.00     18.13     0.00   254820     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_base()
  0.00     18.13     0.00   254820     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::list()
  0.00     18.13     0.00   254751     0.00     0.00  std::remove_reference<Polygon*&>::type&& std::move<Polygon*&>(Polygon*&)
  0.00     18.13     0.00   254601     0.00     0.00  Colour::Colour(Colour*)
  0.00     18.13     0.00   242453     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin()
  0.00     18.13     0.00   238971     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end()
  0.00     18.13     0.00   234949     0.00     0.00  std::iterator_traits<std::_List_iterator<Polygon*> >::iterator_category std::__iterator_category<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*> const&)
  0.00     18.13     0.00   234806     0.00     0.00  Individual::get_dna(int)
  0.00     18.13     0.00   234806     0.00     0.00  std::_List_iterator<Polygon*> std::next<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*>, std::iterator_traits<std::_List_iterator<Polygon*> >::difference_type)
  0.00     18.13     0.00   234806     0.00     0.00  void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long)
  0.00     18.13     0.00   231610     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator()
  0.00     18.13     0.00   231536     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::allocate(unsigned long, void const*)
  0.00     18.13     0.00   231536     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::max_size() const
  0.00     18.13     0.00   231536     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*)
  0.00     18.13     0.00   231536     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::~__allocated_ptr()
  0.00     18.13     0.00   231536     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::operator=(decltype(nullptr))
  0.00     18.13     0.00   231536     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::allocate(std::allocator<std::_List_node<Polygon*> >&, unsigned long)
  0.00     18.13     0.00   231536     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node()
  0.00     18.13     0.00   231536     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_inc_size(unsigned long)
  0.00     18.13     0.00   231536     0.00     0.00  std::allocator<std::_List_node<Polygon*> >* std::__addressof<std::allocator<std::_List_node<Polygon*> > >(std::allocator<std::_List_node<Polygon*> >&)
  0.00     18.13     0.00   231467     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&)
  0.00     18.13     0.00   231467     0.00     0.00  std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&)
  0.00     18.13     0.00   231467     0.00     0.00  void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&)
  0.00     18.13     0.00   231467     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&)
  0.00     18.13     0.00   105038     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const
  0.00     18.13     0.00    92519     0.00     0.00  Individual** std::__niter_base<Individual**>(Individual**)
  0.00     18.13     0.00    90013     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::size() const
  0.00     18.13     0.00    82511     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator()
  0.00     18.13     0.00    78132     0.00     0.00  __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const
  0.00     18.13     0.00    55010     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::max_size() const
  0.00     18.13     0.00    50012     0.00     0.00  std::move_iterator<Individual**>::base() const
  0.00     18.13     0.00    50012     0.00     0.00  std::move_iterator<Individual**>::move_iterator(Individual**)
  0.00     18.13     0.00    50012     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>)
  0.00     18.13     0.00    50012     0.00     0.00  Individual** std::__miter_base<Individual**>(Individual**)
  0.00     18.13     0.00    50012     0.00     0.00  std::move_iterator<Individual**> std::__make_move_if_noexcept_iterator<Individual*, std::move_iterator<Individual**> >(Individual**)
  0.00     18.13     0.00    45238     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  0.00     18.13     0.00    45007     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const
  0.00     18.13     0.00    45000     0.00     0.00  std::remove_reference<Individual**&>::type&& std::move<Individual**&>(Individual**&)
  0.00     18.13     0.00    42996     0.00     0.00  Polygon** std::__niter_base<Polygon**>(Polygon**)
  0.00     18.13     0.00    42502     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::~new_allocator()
  0.00     18.13     0.00    42502     0.00     0.00  std::allocator<Individual*>::~allocator()
  0.00     18.13     0.00    40002     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::new_allocator(__gnu_cxx::new_allocator<Individual*> const&)
  0.00     18.13     0.00    40002     0.00     0.00  std::allocator<Individual*>::allocator(std::allocator<Individual*> const&)
  0.00     18.13     0.00    37520     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&)
  0.00     18.13     0.00    37509     0.00     0.00  Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&)
  0.00     18.13     0.00    35004     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Individual**>(Individual**, Individual**)
  0.00     18.13     0.00    35004     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long)
  0.00     18.13     0.00    35004     0.00     0.00  void std::_Destroy<Individual**>(Individual**, Individual**)
  0.00     18.13     0.00    35004     0.00     0.00  void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&)
  0.00     18.13     0.00    35002     0.00     0.00  __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual* const* const&)
  0.00     18.13     0.00    35002     0.00     0.00  __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::base() const
  0.00     18.13     0.00    35002     0.00     0.00  __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00     18.13     0.00    35002     0.00     0.00  Individual* const* std::__niter_base<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00     18.13     0.00    33198     0.00     0.00  std::uniform_real_distribution<double>::param_type::a() const
  0.00     18.13     0.00    33198     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min()
  0.00     18.13     0.00    31815     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const
  0.00     18.13     0.00    30004     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::allocate(unsigned long, void const*)
  0.00     18.13     0.00    30004     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long)
  0.00     18.13     0.00    30004     0.00     0.00  std::allocator_traits<std::allocator<Individual*> >::allocate(std::allocator<Individual*>&, unsigned long)
  0.00     18.13     0.00    29389     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::size() const
  0.00     18.13     0.00    28664     0.00     0.00  std::move_iterator<Polygon**>::base() const
  0.00     18.13     0.00    28664     0.00     0.00  std::move_iterator<Polygon**>::move_iterator(Polygon**)
  0.00     18.13     0.00    28664     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>)
  0.00     18.13     0.00    28664     0.00     0.00  Polygon** std::__miter_base<Polygon**>(Polygon**)
  0.00     18.13     0.00    28664     0.00     0.00  std::move_iterator<Polygon**> std::__make_move_if_noexcept_iterator<Polygon*, std::move_iterator<Polygon**> >(Polygon**)
  0.00     18.13     0.00    28639     0.00     0.00  std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00     18.13     0.00    28639     0.00     0.00  std::random_device::~random_device()
  0.00     18.13     0.00    28639     0.00     0.00  std::random_device::operator()()
  0.00     18.13     0.00    28639     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long)
  0.00     18.13     0.00    27503     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::deallocate(Individual**, unsigned long)
  0.00     18.13     0.00    27503     0.00     0.00  std::allocator_traits<std::allocator<Individual*> >::deallocate(std::allocator<Individual*>&, Individual**, unsigned long)
  0.00     18.13     0.00    25006     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::max_size() const
  0.00     18.13     0.00    25006     0.00     0.00  Individual** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**)
  0.00     18.13     0.00    25006     0.00     0.00  std::allocator_traits<std::allocator<Individual*> >::max_size(std::allocator<Individual*> const&)
  0.00     18.13     0.00    25006     0.00     0.00  Individual** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**)
  0.00     18.13     0.00    25006     0.00     0.00  Individual** std::__copy_move_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
  0.00     18.13     0.00    25006     0.00     0.00  Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
  0.00     18.13     0.00    25006     0.00     0.00  Individual** std::uninitialized_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**)
  0.00     18.13     0.00    25006     0.00     0.00  Individual** std::__uninitialized_copy_a<std::move_iterator<Individual**>, Individual**, Individual*>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**, std::allocator<Individual*>&)
  0.00     18.13     0.00    25006     0.00     0.00  Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&)
  0.00     18.13     0.00    25006     0.00     0.00  Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**)
  0.00     18.13     0.00    24734     0.00     0.00  bool __gnu_cxx::operator!=<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&)
  0.00     18.13     0.00    24080     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00     18.13     0.00    23284     0.00     0.00  void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&)
  0.00     18.13     0.00    23284     0.00     0.00  __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator++()
  0.00     18.13     0.00    23284     0.00     0.00  __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator*() const
  0.00     18.13     0.00    23284     0.00     0.00  void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&)
  0.00     18.13     0.00    23284     0.00     0.00  void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&)
  0.00     18.13     0.00    23284     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&)
  0.00     18.13     0.00    23284     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::operator[](unsigned long)
  0.00     18.13     0.00    23182     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_size() const
  0.00     18.13     0.00    23182     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_node_count() const
  0.00     18.13     0.00    23182     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const
  0.00     18.13     0.00    22948     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator()
  0.00     18.13     0.00    22501     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::~_Vector_impl()
  0.00     18.13     0.00    22501     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base()
  0.00     18.13     0.00    22501     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::~vector()
  0.00     18.13     0.00    21498     0.00     0.00  __gnu_cxx::new_allocator<Polygon*>::max_size() const
  0.00     18.13     0.00    20003     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
  0.00     18.13     0.00    20001     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&)
  0.00     18.13     0.00    19693     0.00     0.00  Individual::get_len_dna()
  0.00     18.13     0.00    19669     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00     18.13     0.00    18106     0.00     0.00  std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&)
  0.00     18.13     0.00    17504     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::end()
  0.00     18.13     0.00    17504     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::begin()
  0.00     18.13     0.00    17501     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Individual*>, Individual*>::_S_select_on_copy(std::allocator<Individual*> const&)
  0.00     18.13     0.00    17501     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::end() const
  0.00     18.13     0.00    17501     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::begin() const
  0.00     18.13     0.00    17501     0.00     0.00  Individual** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**)
  0.00     18.13     0.00    17501     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_create_storage(unsigned long)
  0.00     18.13     0.00    17501     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&)
  0.00     18.13     0.00    17501     0.00     0.00  std::allocator_traits<std::allocator<Individual*> >::select_on_container_copy_construction(std::allocator<Individual*> const&)
  0.00     18.13     0.00    17501     0.00     0.00  Individual** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
  0.00     18.13     0.00    17501     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&)
  0.00     18.13     0.00    17501     0.00     0.00  Individual** std::__copy_move_a<false, Individual* const*, Individual**>(Individual* const*, Individual* const*, Individual**)
  0.00     18.13     0.00    17501     0.00     0.00  Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
  0.00     18.13     0.00    17501     0.00     0.00  Individual** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
  0.00     18.13     0.00    17501     0.00     0.00  Individual** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, Individual*>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, std::allocator<Individual*>&)
  0.00     18.13     0.00    17501     0.00     0.00  Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
  0.00     18.13     0.00    17500     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::_M_range_check(unsigned long) const
  0.00     18.13     0.00    17500     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long)
  0.00     18.13     0.00    17500     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::operator[](unsigned long)
  0.00     18.13     0.00    17232     0.00     0.00  __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::__normal_iterator(Polygon** const&)
  0.00     18.13     0.00    16599     0.00     0.00  std::uniform_real_distribution<double>::param_type::b() const
  0.00     18.13     0.00    16599     0.00     0.00  std::uniform_real_distribution<double>::param_type::param_type(double, double)
  0.00     18.13     0.00    16599     0.00     0.00  std::uniform_real_distribution<double>::uniform_real_distribution(double, double)
  0.00     18.13     0.00    16599     0.00     0.00  double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00     18.13     0.00    16599     0.00     0.00  double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&)
  0.00     18.13     0.00    16599     0.00     0.00  std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00     18.13     0.00    16599     0.00     0.00  std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()()
  0.00     18.13     0.00    16599     0.00     0.00  double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00     18.13     0.00    16380     0.00     0.00  utils::random()
  0.00     18.13     0.00    15044     0.00     0.00  cv::MatStep::operator[](int)
  0.00     18.13     0.00    15001     0.00     0.00  Population::get_individuals()
  0.00     18.13     0.00    15000     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual**> >, std::is_move_constructible<Individual**>, std::is_move_assignable<Individual**> >::value, void>::type std::swap<Individual**>(Individual**&, Individual**&)
  0.00     18.13     0.00    14332     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() const
  0.00     18.13     0.00    14332     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const
  0.00     18.13     0.00    14332     0.00     0.00  Polygon** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Polygon*>(Polygon* const*, Polygon* const*, Polygon**)
  0.00     18.13     0.00    14332     0.00     0.00  std::allocator_traits<std::allocator<Polygon*> >::max_size(std::allocator<Polygon*> const&)
  0.00     18.13     0.00    14332     0.00     0.00  Polygon** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**)
  0.00     18.13     0.00    14332     0.00     0.00  Polygon** std::__copy_move_a<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**)
  0.00     18.13     0.00    14332     0.00     0.00  Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**)
  0.00     18.13     0.00    14332     0.00     0.00  Polygon** std::uninitialized_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**)
  0.00     18.13     0.00    14332     0.00     0.00  Polygon** std::__uninitialized_copy_a<std::move_iterator<Polygon**>, Polygon**, Polygon*>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**, std::allocator<Polygon*>&)
  0.00     18.13     0.00    14332     0.00     0.00  Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&)
  0.00     18.13     0.00    14332     0.00     0.00  Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**)
  0.00     18.13     0.00    12503     0.00     0.00  void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&)
  0.00     18.13     0.00    12503     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const
  0.00     18.13     0.00    12503     0.00     0.00  void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&)
  0.00     18.13     0.00    12503     0.00     0.00  void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&)
  0.00     18.13     0.00    12503     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&)
  0.00     18.13     0.00    12040     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00     18.13     0.00    12040     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00     18.13     0.00    12040     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00     18.13     0.00    12040     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00     18.13     0.00    12040     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00     18.13     0.00    10600     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator--()
  0.00     18.13     0.00    10167     0.00     0.00  utils::next_int(int)
  0.00     18.13     0.00    10004     0.00     0.00  bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
  0.00     18.13     0.00     8616     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Polygon**>(Polygon**, Polygon**)
  0.00     18.13     0.00     8616     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long)
  0.00     18.13     0.00     8616     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::end()
  0.00     18.13     0.00     8616     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::begin()
  0.00     18.13     0.00     8616     0.00     0.00  void std::_Destroy<Polygon**>(Polygon**, Polygon**)
  0.00     18.13     0.00     8616     0.00     0.00  void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&)
  0.00     18.13     0.00     7522     0.00     0.00  cv::MatStep::MatStep()
  0.00     18.13     0.00     7522     0.00     0.00  cv::Mat::total() const
  0.00     18.13     0.00     7503     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++()
  0.00     18.13     0.00     7501     0.00     0.00  cv::Mat::Mat(int, int, int, void*, unsigned long)
  0.00     18.13     0.00     7166     0.00     0.00  __gnu_cxx::new_allocator<Polygon*>::deallocate(Polygon**, unsigned long)
  0.00     18.13     0.00     7166     0.00     0.00  __gnu_cxx::new_allocator<Polygon*>::allocate(unsigned long, void const*)
  0.00     18.13     0.00     7166     0.00     0.00  __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::difference_type __gnu_cxx::operator-<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&)
  0.00     18.13     0.00     7166     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const
  0.00     18.13     0.00     7166     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_allocate(unsigned long)
  0.00     18.13     0.00     7166     0.00     0.00  std::allocator_traits<std::allocator<Polygon*> >::deallocate(std::allocator<Polygon*>&, Polygon**, unsigned long)
  0.00     18.13     0.00     7166     0.00     0.00  std::allocator_traits<std::allocator<Polygon*> >::allocate(std::allocator<Polygon*>&, unsigned long)
  0.00     18.13     0.00     7166     0.00     0.00  void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&)
  0.00     18.13     0.00     5600     0.00     0.00  bool __gnu_cxx::__ops::_Val_less_iter::operator()<Individual*, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(Individual*&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const
  0.00     18.13     0.00     5004     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::new_allocator()
  0.00     18.13     0.00     5004     0.00     0.00  std::allocator<std::_List_node<Polygon*> >::allocator()
  0.00     18.13     0.00     5004     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl()
  0.00     18.13     0.00     5004     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_base()
  0.00     18.13     0.00     5004     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list()
  0.00     18.13     0.00     5001     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::new_allocator()
  0.00     18.13     0.00     5001     0.00     0.00  std::allocator<Individual*>::allocator()
  0.00     18.13     0.00     5001     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl()
  0.00     18.13     0.00     5001     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base()
  0.00     18.13     0.00     5001     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::vector()
  0.00     18.13     0.00     5000     0.00     0.00  Individual::Individual(int, int, int, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*)
  0.00     18.13     0.00     5000     0.00     0.00  GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double)
  0.00     18.13     0.00     5000     0.00     0.00  bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
  0.00     18.13     0.00     5000     0.00     0.00  bool __gnu_cxx::operator< <Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
  0.00     18.13     0.00     5000     0.00     0.00  bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const
  0.00     18.13     0.00     5000     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl&)
  0.00     18.13     0.00     5000     0.00     0.00  std::remove_reference<std::vector<Individual*, std::allocator<Individual*> >&>::type&& std::move<std::vector<Individual*, std::allocator<Individual*> >&>(std::vector<Individual*, std::allocator<Individual*> >&)
  0.00     18.13     0.00     4994     0.00     0.00  __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)
  0.00     18.13     0.00     4994     0.00     0.00  void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter)
  0.00     18.13     0.00     3720     0.00     0.00  Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&)
  0.00     18.13     0.00     3489     0.00     0.00  Individual::mutate()
  0.00     18.13     0.00     3037     0.00     0.00  Point::set_x(int)
  0.00     18.13     0.00     3013     0.00     0.00  Point::set_y(int)
  0.00     18.13     0.00     2506     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator+(long) const
  0.00     18.13     0.00     2500     0.00     0.00  sortByFitness(std::vector<Individual*, std::allocator<Individual*> >)
  0.00     18.13     0.00     2500     0.00     0.00  Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >)
  0.00     18.13     0.00     2500     0.00     0.00  GeneticAlgorithm::mate(Individual*, Individual*, int, int, int)
  0.00     18.13     0.00     2500     0.00     0.00  __gnu_cxx::__ops::__iter_less_iter()
  0.00     18.13     0.00     2500     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const
  0.00     18.13     0.00     2500     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(std::allocator<Individual*> const&)
  0.00     18.13     0.00     2500     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>)
  0.00     18.13     0.00     2500     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::vector(std::allocator<Individual*> const&)
  0.00     18.13     0.00     2500     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&)
  0.00     18.13     0.00     2500     0.00     0.00  void std::__alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&)
  0.00     18.13     0.00     2500     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00     18.13     0.00     2500     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
  0.00     18.13     0.00     2500     0.00     0.00  void std::__do_alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&, std::integral_constant<bool, true>)
  0.00     18.13     0.00     2500     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
  0.00     18.13     0.00     2500     0.00     0.00  void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00     18.13     0.00     2500     0.00     0.00  std::__lg(long)
  0.00     18.13     0.00     2500     0.00     0.00  std::remove_reference<std::allocator<Individual*>&>::type&& std::move<std::allocator<Individual*>&>(std::allocator<Individual*>&)
  0.00     18.13     0.00     2500     0.00     0.00  void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00     18.13     0.00     2500     0.00     0.00  void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00     18.13     0.00     2500     0.00     0.00  void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00     18.13     0.00     2500     0.00     0.00  void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag)
  0.00     18.13     0.00     1873     0.00     0.00  Colour::random_colour()
  0.00     18.13     0.00     1450     0.00     0.00  __gnu_cxx::new_allocator<Polygon*>::new_allocator()
  0.00     18.13     0.00     1450     0.00     0.00  __gnu_cxx::new_allocator<Polygon*>::~new_allocator()
  0.00     18.13     0.00     1450     0.00     0.00  std::allocator<Polygon*>::allocator()
  0.00     18.13     0.00     1450     0.00     0.00  std::allocator<Polygon*>::~allocator()
  0.00     18.13     0.00     1450     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::_Vector_impl()
  0.00     18.13     0.00     1450     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::~_Vector_impl()
  0.00     18.13     0.00     1450     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_base()
  0.00     18.13     0.00     1450     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base()
  0.00     18.13     0.00     1450     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::vector()
  0.00     18.13     0.00     1450     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::~vector()
  0.00     18.13     0.00      952     0.00     0.00  Point::Point(int, int)
  0.00     18.13     0.00      952     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&)
  0.00     18.13     0.00      952     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&)
  0.00     18.13     0.00      952     0.00     0.00  std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&)
  0.00     18.13     0.00      864     0.00     0.00  Polygon::add_point(Point*)
  0.00     18.13     0.00      864     0.00     0.00  void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&)
  0.00     18.13     0.00      864     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&)
  0.00     18.13     0.00      789     0.00     0.00  Polygon::move(int, int)
  0.00     18.13     0.00      725     0.00     0.00  GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*)
  0.00     18.13     0.00      725     0.00     0.00  int const& std::max<int>(int const&, int const&)
  0.00     18.13     0.00      725     0.00     0.00  int const& std::min<int>(int const&, int const&)
  0.00     18.13     0.00      416     0.00     0.00  Colour::set_b(int)
  0.00     18.13     0.00      412     0.00     0.00  Colour::set_r(int)
  0.00     18.13     0.00      391     0.00     0.00  Colour::set_a(double)
  0.00     18.13     0.00      388     0.00     0.00  Colour::set_g(int)
  0.00     18.13     0.00      219     0.00     0.00  Colour::random_alpha()
  0.00     18.13     0.00      219     0.00     0.00  Colour::Colour(unsigned char, unsigned char, unsigned char, double)
  0.00     18.13     0.00      219     0.00     0.00  Polygon::random_polygon(int, int, int)
  0.00     18.13     0.00      219     0.00     0.00  Polygon::Polygon(Colour*)
  0.00     18.13     0.00      207     0.00     0.00  Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&)
  0.00     18.13     0.00      143     0.00     0.00  std::_List_const_iterator<Polygon*>::_M_const_cast() const
  0.00     18.13     0.00      143     0.00     0.00  std::_List_const_iterator<Polygon*>::_List_const_iterator(std::_List_iterator<Polygon*> const&)
  0.00     18.13     0.00      143     0.00     0.00  void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int)
  0.00     18.13     0.00      101     0.00     0.00  std::_List_const_iterator<Point*>::_M_const_cast() const
  0.00     18.13     0.00      101     0.00     0.00  std::_List_const_iterator<Point*>::_List_const_iterator(std::_List_iterator<Point*> const&)
  0.00     18.13     0.00       88     0.00     0.00  Polygon::insert_point(int, Point*)
  0.00     18.13     0.00       88     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&)
  0.00     18.13     0.00       88     0.00     0.00  void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int)
  0.00     18.13     0.00       74     0.00     0.00  Individual::remove_dna(int)
  0.00     18.13     0.00       74     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::deallocate(std::_List_node<Polygon*>*, unsigned long)
  0.00     18.13     0.00       74     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::destroy<Polygon*>(Polygon**)
  0.00     18.13     0.00       74     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::deallocate(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*, unsigned long)
  0.00     18.13     0.00       74     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::destroy<Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**)
  0.00     18.13     0.00       74     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_dec_size(unsigned long)
  0.00     18.13     0.00       74     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_put_node(std::_List_node<Polygon*>*)
  0.00     18.13     0.00       74     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>)
  0.00     18.13     0.00       74     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>)
  0.00     18.13     0.00       69     0.00     0.00  Individual::insert_dna(int, Polygon*)
  0.00     18.13     0.00       69     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&)
  0.00     18.13     0.00       69     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&)
  0.00     18.13     0.00       69     0.00     0.00  std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&)
  0.00     18.13     0.00       69     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&)
  0.00     18.13     0.00       68     0.00     0.00  Polygon::remove_point()
  0.00     18.13     0.00       30     0.00     0.00  std::_List_iterator<Point*>::operator--()
  0.00     18.13     0.00       18     0.00     0.00  Individual** std::__niter_base<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00     18.13     0.00       13     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Point*> >::deallocate(std::_List_node<Point*>*, unsigned long)
  0.00     18.13     0.00       13     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Point*> >::destroy<Point*>(Point**)
  0.00     18.13     0.00       13     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<Point*> > >::deallocate(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*, unsigned long)
  0.00     18.13     0.00       13     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::destroy<Point*>(std::allocator<std::_List_node<Point*> >&, Point**)
  0.00     18.13     0.00       13     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_dec_size(unsigned long)
  0.00     18.13     0.00       13     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_put_node(std::_List_node<Point*>*)
  0.00     18.13     0.00       13     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::erase(std::_List_const_iterator<Point*>)
  0.00     18.13     0.00       13     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::_M_erase(std::_List_iterator<Point*>)
  0.00     18.13     0.00       12     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00     18.13     0.00        9     0.00     0.00  cvflann::anyimpl::base_any_policy::~base_any_policy()
  0.00     18.13     0.00        6     0.00     0.00  Individual** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Individual*>(Individual* const*, Individual* const*, Individual**)
  0.00     18.13     0.00        6     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00     18.13     0.00        6     0.00     0.00  Individual** std::__copy_move_backward_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
  0.00     18.13     0.00        6     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00     18.13     0.00        3     0.00     0.01  Individual::Individual(int, int, int, int)
  0.00     18.13     0.00        3     0.00     0.00  Individual::~Individual()
  0.00     18.13     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN10IndividualC2EiiiPNSt7__cxx114listIP7PolygonSaIS3_EEE
  0.00     18.13     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN16GeneticAlgorithmC2EPhii
  0.00     18.13     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7Polygon14random_polygonEiii
  0.00     18.13     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7Problem3runEPN2cv3MatEi
  0.00     18.13     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00     18.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     18.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     18.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     18.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     18.13     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     18.13     0.00        1     0.00     0.00  Individual::Individual(Individual*)
  0.00     18.13     0.00        1     0.00     0.02  Population::Population(int, int, int, int, int)
  0.00     18.13     0.00        1     0.00     0.00  GeneticAlgorithm::clean_population()
  0.00     18.13     0.00        1     0.00     0.02  GeneticAlgorithm::GeneticAlgorithm(unsigned char*, int, int)
  0.00     18.13     0.00        1     0.00     0.00  cv::Mat::create(int, int, int)
  0.00     18.13     0.00        1     0.00     0.00  cv::Mat::Mat(int, int, int)
  0.00     18.13     0.00        1     0.00     0.00  cv::Size_<int>::Size_(int, int)
  0.00     18.13     0.00        1     0.00    18.13  Problem::run(cv::Mat*, int)
  0.00     18.13     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<cvflann::anyimpl::empty_any>::~typed_base_any_policy()
  0.00     18.13     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<cvflann::flann_algorithm_t>::~typed_base_any_policy()
  0.00     18.13     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<cvflann::flann_centers_init_t>::~typed_base_any_policy()
  0.00     18.13     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~typed_base_any_policy()
  0.00     18.13     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<char const*>::~typed_base_any_policy()
  0.00     18.13     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<bool>::~typed_base_any_policy()
  0.00     18.13     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<float>::~typed_base_any_policy()
  0.00     18.13     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<int>::~typed_base_any_policy()
  0.00     18.13     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<unsigned int>::~typed_base_any_policy()
  0.00     18.13     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00     18.13     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00     18.13     0.00        1     0.00     0.00  int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)
  0.00     18.13     0.00        1     0.00     0.00  cv::MatSize::operator()() const
  0.00     18.13     0.00        1     0.00     0.00  std::allocator<int>::allocator()
  0.00     18.13     0.00        1     0.00     0.00  std::allocator<int>::~allocator()
  0.00     18.13     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00     18.13     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00     18.13     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00     18.13     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00     18.13     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00     18.13     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00     18.13     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00     18.13     0.00        1     0.00     0.00  std::_List_iterator<Polygon*>::operator--()
  0.00     18.13     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00     18.13     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00     18.13     0.00        1     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00     18.13     0.00        1     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00     18.13     0.00        1     0.00     0.00  __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Range_chk::_S_chk(long, std::integral_constant<bool, true>)
  0.00     18.13     0.00        1     0.00     0.00  __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::_Save_errno()
  0.00     18.13     0.00        1     0.00     0.00  __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::~_Save_errno()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.06% of 18.13 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00   18.13                 main [1]
                0.00   18.13       1/1           Problem::run(cv::Mat*, int) [2]
                0.01    0.00       1/1           std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, int) [85]
                0.00    0.00       1/354465      cv::Mat::~Mat() [28]
-----------------------------------------------
                0.00   18.13       1/1           main [1]
[2]    100.0    0.00   18.13       1         Problem::run(cv::Mat*, int) [2]
                0.01   18.09       1/1           GeneticAlgorithm::evolve(int) [3]
                0.00    0.02       1/1           GeneticAlgorithm::GeneticAlgorithm(unsigned char*, int, int) [41]
                0.00    0.00       1/7501        Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00       1/354465      cv::Mat::~Mat() [28]
                0.00    0.00       1/1           cv::Mat::Mat(int, int, int) [103]
                0.00    0.00       2/693926      cv::_InputArray::_InputArray(cv::Mat const&) [139]
                0.00    0.00       2/1734813     cv::_InputArray::~_InputArray() [115]
                0.00    0.00       1/1           cv::MatSize::operator()() const [428]
                0.00    0.00       1/693925      cv::_OutputArray::_OutputArray(cv::Mat&) [140]
                0.00    0.00       1/1040887     cv::_OutputArray::~_OutputArray() [123]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [439]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [440]
-----------------------------------------------
                0.01   18.09       1/1           Problem::run(cv::Mat*, int) [2]
[3]     99.8    0.01   18.09       1         GeneticAlgorithm::evolve(int) [3]
               10.60    0.18    7500/7501        Individual::draw_CV(unsigned char*, int, int) [4]
                6.70    0.00    7500/7500        utils::diff(unsigned char const*, unsigned char const*, int, int) [5]
                0.00    0.51    2500/2500        GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [6]
                0.00    0.08    5000/5000        GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [20]
                0.00    0.02    2500/2500        sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [46]
                0.00    0.00       1/1           Individual::Individual(Individual*) [90]
                0.00    0.00       1/1           GeneticAlgorithm::clean_population() [99]
                0.00    0.00   20000/22501       std::vector<Individual*, std::allocator<Individual*> >::~vector() [238]
                0.00    0.00   15000/15001       Population::get_individuals() [270]
                0.00    0.00   12500/17500       std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [262]
                0.00    0.00    7500/12503       std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [287]
                0.00    0.00    2500/19693       Individual::get_len_dna() [242]
                0.00    0.00    2500/5001        std::vector<Individual*, std::allocator<Individual*> >::vector() [321]
                0.00    0.00    2500/17501       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
                0.00    0.00    2500/2500        Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >) [334]
-----------------------------------------------
                0.00    0.00       1/7501        Problem::run(cv::Mat*, int) [2]
               10.60    0.18    7500/7501        GeneticAlgorithm::evolve(int) [3]
[4]     59.5   10.60    0.18    7501         Individual::draw_CV(unsigned char*, int, int) [4]
                0.03    0.03  354463/354465      cv::Mat::~Mat() [28]
                0.01    0.03 1144216/1150266     Polygon::get_point(int) [31]
                0.00    0.02  346962/346962      cv::Mat::clone() const [51]
                0.01    0.00 1144216/1144216     cv::Point_<int>::Point_(int, int) [57]
                0.01    0.00 1144216/1144216     cv::Point_<int>::operator=(cv::Point_<int>&&) [58]
                0.01    0.00  346962/346962      Colour::get_r() [68]
                0.00    0.01  346962/346962      cv::Scalar_<double>::Scalar_(double, double, double, double) [67]
                0.01    0.00  346962/346962      cv::_InputOutputArray::_InputOutputArray(cv::Mat&) [64]
                0.01    0.00 1144216/1149478     Point::get_y() [56]
                0.00    0.01  346962/348633      Polygon::get_points_length() [75]
                0.00    0.00  346962/5692312     std::_List_iterator<Polygon*>::operator++() [44]
                0.00    0.00 1491178/1491178     cv::Point_<int>::Point_() [117]
                0.00    0.00 1144216/1149478     Point::get_x() [119]
                0.00    0.00  693924/693924      Colour::get_a() [141]
                0.00    0.00  693924/693926      cv::_InputArray::_InputArray(cv::Mat const&) [139]
                0.00    0.00  693924/1734813     cv::_InputArray::~_InputArray() [115]
                0.00    0.00  354463/354583      std::_List_iterator<Polygon*>::operator!=(std::_List_iterator<Polygon*> const&) const [144]
                0.00    0.00  346962/581959      std::_List_iterator<Polygon*>::operator*() const [142]
                0.00    0.00  346962/346962      Colour::get_g() [149]
                0.00    0.00  346962/346962      Colour::get_b() [148]
                0.00    0.00  346962/346962      cv::_InputOutputArray::~_InputOutputArray() [147]
                0.00    0.00  346962/693925      cv::_OutputArray::_OutputArray(cv::Mat&) [140]
                0.00    0.00  346962/1040887     cv::_OutputArray::~_OutputArray() [123]
                0.00    0.00    7501/7501        cv::Mat::Mat(int, int, int, void*, unsigned long) [302]
                0.00    0.00    7501/242453      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [155]
                0.00    0.00    7501/238971      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end() [156]
-----------------------------------------------
                6.70    0.00    7500/7500        GeneticAlgorithm::evolve(int) [3]
[5]     37.0    6.70    0.00    7500         utils::diff(unsigned char const*, unsigned char const*, int, int) [5]
-----------------------------------------------
                0.00    0.51    2500/2500        GeneticAlgorithm::evolve(int) [3]
[6]      2.8    0.00    0.51    2500         GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [6]
                0.00    0.19    3489/3489        Individual::mutate() [10]
                0.01    0.11    1775/1775        GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [12]
                0.00    0.12    7500/16380       utils::random() [9]
                0.00    0.08     725/725         GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
                0.00    0.00    5000/5004        std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list() [316]
                0.00    0.00    5000/5000        Individual::Individual(int, int, int, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [322]
                0.00    0.00    5000/12503       std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [287]
                0.00    0.00    2500/5001        std::vector<Individual*, std::allocator<Individual*> >::vector() [321]
-----------------------------------------------
                0.22    0.09   28639/28639       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [8]
[7]      1.7    0.22    0.09   28639         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [7]
                0.02    0.04 17842097/17842097     unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [23]
                0.02    0.01 17870736/17870736     unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [36]
-----------------------------------------------
                0.00    0.00     219/28639       Colour::random_alpha() [86]
                0.00    0.02    1873/28639       Colour::random_colour() [38]
                0.00    0.11   10167/28639       utils::next_int(int) [11]
                0.00    0.18   16380/28639       utils::random() [9]
[8]      1.7    0.00    0.31   28639         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [8]
                0.22    0.09   28639/28639       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [7]
-----------------------------------------------
                0.00    0.06    3880/16380       Individual::mutate() [10]
                0.00    0.08    5000/16380       GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [20]
                0.00    0.12    7500/16380       GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [6]
[9]      1.5    0.00    0.26   16380         utils::random() [9]
                0.00    0.18   16380/28639       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [8]
                0.00    0.09   16380/16599       double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [16]
                0.00    0.00   16380/28639       std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [208]
                0.00    0.00   16380/28639       std::random_device::operator()() [210]
                0.00    0.00   16380/16599       std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [267]
                0.00    0.00   16380/28639       std::random_device::~random_device() [209]
-----------------------------------------------
                0.00    0.19    3489/3489        GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [6]
[10]     1.0    0.00    0.19    3489         Individual::mutate() [10]
                0.00    0.07    5398/10167       utils::next_int(int) [11]
                0.00    0.06    3880/16380       utils::random() [9]
                0.00    0.02     789/789         Polygon::move(int, int) [43]
                0.00    0.02    1216/1873        Colour::random_colour() [38]
                0.00    0.01      69/219         Polygon::random_polygon(int, int, int) [33]
                0.00    0.00    3489/234806      Individual::get_dna(int) [25]
                0.00    0.00      68/68          Polygon::remove_point() [88]
                0.00    0.00     788/1150266     Polygon::get_point(int) [31]
                0.00    0.00     882/348633      Polygon::get_points_length() [75]
                0.00    0.00      74/74          Individual::remove_dna(int) [91]
                0.00    0.00      69/69          Individual::insert_dna(int, Polygon*) [94]
                0.00    0.00      88/88          Polygon::insert_point(int, Point*) [96]
                0.00    0.00    3489/23182       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const [234]
                0.00    0.00     416/416         Colour::set_b(int) [368]
                0.00    0.00     412/412         Colour::set_r(int) [369]
                0.00    0.00     406/3037        Point::set_x(int) [331]
                0.00    0.00     391/391         Colour::set_a(double) [370]
                0.00    0.00     388/388         Colour::set_g(int) [371]
                0.00    0.00     382/3013        Point::set_y(int) [332]
                0.00    0.00      88/952         Point::Point(int, int) [361]
-----------------------------------------------
                0.00    0.00      13/10167       Polygon::remove_point() [88]
                0.00    0.02    1450/10167       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
                0.00    0.02    1578/10167       Polygon::move(int, int) [43]
                0.00    0.02    1728/10167       Polygon::random_polygon(int, int, int) [33]
                0.00    0.07    5398/10167       Individual::mutate() [10]
[11]     0.8    0.00    0.14   10167         utils::next_int(int) [11]
                0.00    0.11   10167/28639       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [8]
                0.00    0.03   10167/12040       int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [34]
                0.00    0.00   10167/28639       std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [208]
                0.00    0.00   10167/28639       std::random_device::operator()() [210]
                0.00    0.00   10167/12040       std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [290]
                0.00    0.00   10167/28639       std::random_device::~random_device() [209]
-----------------------------------------------
                0.01    0.11    1775/1775        GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [6]
[12]     0.7    0.01    0.11    1775         GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [12]
                0.01    0.06  164104/254601      Polygon::Polygon(Polygon*) [15]
                0.00    0.04  164104/234806      Individual::get_dna(int) [25]
                0.00    0.01  164104/231467      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [73]
                0.00    0.00    3550/19693       Individual::get_len_dna() [242]
-----------------------------------------------
                0.00    0.03   12040/45238       int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [35]
                0.00    0.09   33198/45238       double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [19]
[13]     0.7    0.00    0.12   45238         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [13]
                0.12    0.00   28639/28639       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [14]
-----------------------------------------------
                0.12    0.00   28639/28639       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [13]
[14]     0.7    0.12    0.00   28639         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [14]
-----------------------------------------------
                0.00    0.00      39/254601      Individual::Individual(Individual*) [90]
                0.00    0.03   90458/254601      GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
                0.01    0.06  164104/254601      GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [12]
[15]     0.6    0.01    0.09  254601         Polygon::Polygon(Polygon*) [15]
                0.00    0.07  839581/839581      std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&) [22]
                0.01    0.00  839581/1989847     std::_List_iterator<Point*>::operator*() const [45]
                0.00    0.00  254601/1095046     std::__cxx11::list<Point*, std::allocator<Point*> >::end() [42]
                0.00    0.00  254601/254820      std::__cxx11::list<Point*, std::allocator<Point*> >::list() [84]
                0.00    0.00  839581/2250625     std::_List_iterator<Point*>::operator++() [55]
                0.00    0.00  254601/1404968     std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [52]
                0.00    0.00 1094182/1094182     std::_List_iterator<Point*>::operator!=(std::_List_iterator<Point*> const&) const [121]
                0.00    0.00  839581/839581      Point::Point(Point*) [135]
                0.00    0.00  254601/254601      Colour::Colour(Colour*) [154]
-----------------------------------------------
                0.00    0.00     219/16599       Colour::random_alpha() [86]
                0.00    0.09   16380/16599       utils::random() [9]
[16]     0.5    0.00    0.09   16599         double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [16]
                0.00    0.09   16599/16599       double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
-----------------------------------------------
                0.00    0.09   16599/16599       double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [16]
[17]     0.5    0.00    0.09   16599         double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
                0.00    0.09   16599/16599       std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()() [18]
                0.00    0.00   33198/33198       std::uniform_real_distribution<double>::param_type::a() const [196]
                0.00    0.00   16599/16599       std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [268]
                0.00    0.00   16599/16599       std::uniform_real_distribution<double>::param_type::b() const [265]
-----------------------------------------------
                0.00    0.09   16599/16599       double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
[18]     0.5    0.00    0.09   16599         std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()() [18]
                0.00    0.09   16599/16599       double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [19]
-----------------------------------------------
                0.00    0.09   16599/16599       std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()() [18]
[19]     0.5    0.00    0.09   16599         double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [19]
                0.00    0.09   33198/45238       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [13]
                0.00    0.00   33198/33198       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min() [197]
-----------------------------------------------
                0.00    0.08    5000/5000        GeneticAlgorithm::evolve(int) [3]
[20]     0.4    0.00    0.08    5000         GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [20]
                0.00    0.08    5000/16380       utils::random() [9]
                0.00    0.00    5000/90013       std::vector<Individual*, std::allocator<Individual*> >::size() const [170]
                0.00    0.00    5000/17500       std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [262]
-----------------------------------------------
                0.00    0.08     725/725         GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [6]
[21]     0.4    0.00    0.08     725         GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
                0.00    0.03   90458/254601      Polygon::Polygon(Polygon*) [15]
                0.00    0.02    1450/10167       utils::next_int(int) [11]
                0.00    0.02   67174/234806      Individual::get_dna(int) [25]
                0.00    0.00   67174/231467      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [73]
                0.00    0.00   24734/24734       bool __gnu_cxx::operator!=<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [223]
                0.00    0.00   23284/23284       std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [230]
                0.00    0.00   23284/23284       std::vector<Polygon*, std::allocator<Polygon*> >::operator[](unsigned long) [231]
                0.00    0.00   23284/23284       __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator*() const [227]
                0.00    0.00   23284/23284       __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator++() [226]
                0.00    0.00   13603/19693       Individual::get_len_dna() [242]
                0.00    0.00    1450/1450        std::vector<Polygon*, std::allocator<Polygon*> >::vector() [359]
                0.00    0.00    1450/8616        std::vector<Polygon*, std::allocator<Polygon*> >::begin() [296]
                0.00    0.00    1450/8616        std::vector<Polygon*, std::allocator<Polygon*> >::end() [295]
                0.00    0.00    1450/1450        std::vector<Polygon*, std::allocator<Polygon*> >::~vector() [360]
                0.00    0.00     725/725         int const& std::min<int>(int const&, int const&) [367]
                0.00    0.00     725/725         int const& std::max<int>(int const&, int const&) [366]
                0.00    0.00     725/29389       std::vector<Polygon*, std::allocator<Polygon*> >::size() const [202]
-----------------------------------------------
                0.00    0.07  839581/839581      Polygon::Polygon(Polygon*) [15]
[22]     0.4    0.00    0.07  839581         std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&) [22]
                0.00    0.04  839581/839581      void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&) [30]
                0.02    0.00  839581/1095046     std::__cxx11::list<Point*, std::allocator<Point*> >::end() [42]
                0.01    0.00  839581/839581      std::remove_reference<Point*&>::type&& std::move<Point*&>(Point*&) [59]
-----------------------------------------------
                0.02    0.04 17842097/17842097     std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [7]
[23]     0.3    0.02    0.04 17842097         unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [23]
                0.04    0.00 17842097/17842097     std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long) [29]
-----------------------------------------------
                0.00    0.00     143/234949      void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int) [89]
                0.04    0.02  234806/234949      void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long) [27]
[24]     0.3    0.04    0.02  234949         void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag) [24]
                0.02    0.00 5345233/5692312     std::_List_iterator<Polygon*>::operator++() [44]
                0.00    0.00       1/1           std::_List_iterator<Polygon*>::operator--() [438]
-----------------------------------------------
                0.00    0.00      39/234806      Individual::Individual(Individual*) [90]
                0.00    0.00    3489/234806      Individual::mutate() [10]
                0.00    0.02   67174/234806      GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
                0.00    0.04  164104/234806      GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [12]
[25]     0.3    0.00    0.06  234806         Individual::get_dna(int) [25]
                0.00    0.06  234806/234806      std::_List_iterator<Polygon*> std::next<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*>, std::iterator_traits<std::_List_iterator<Polygon*> >::difference_type) [26]
                0.00    0.00  234806/242453      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [155]
                0.00    0.00  234806/581959      std::_List_iterator<Polygon*>::operator*() const [142]
-----------------------------------------------
                0.00    0.06  234806/234806      Individual::get_dna(int) [25]
[26]     0.3    0.00    0.06  234806         std::_List_iterator<Polygon*> std::next<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*>, std::iterator_traits<std::_List_iterator<Polygon*> >::difference_type) [26]
                0.00    0.06  234806/234806      void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long) [27]
-----------------------------------------------
                0.00    0.06  234806/234806      std::_List_iterator<Polygon*> std::next<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*>, std::iterator_traits<std::_List_iterator<Polygon*> >::difference_type) [26]
[27]     0.3    0.00    0.06  234806         void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long) [27]
                0.04    0.02  234806/234949      void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag) [24]
                0.00    0.00  234806/234949      std::iterator_traits<std::_List_iterator<Polygon*> >::iterator_category std::__iterator_category<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*> const&) [157]
-----------------------------------------------
                0.00    0.00       1/354465      main [1]
                0.00    0.00       1/354465      Problem::run(cv::Mat*, int) [2]
                0.03    0.03  354463/354465      Individual::draw_CV(unsigned char*, int, int) [4]
[28]     0.3    0.03    0.03  354465         cv::Mat::~Mat() [28]
                0.03    0.00 1395372/1395372     cv::Mat::release() [37]
-----------------------------------------------
                0.04    0.00 17842097/17842097     unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [23]
[29]     0.2    0.04    0.00 17842097         std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long) [29]
-----------------------------------------------
                0.00    0.04  839581/839581      std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&) [22]
[30]     0.2    0.00    0.04  839581         void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&) [30]
                0.03    0.01  839581/839581      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [32]
                0.00    0.00  839581/3358324     Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&) [54]
                0.00    0.00  839581/840533      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long) [133]
-----------------------------------------------
                0.00    0.00     788/1150266     Individual::mutate() [10]
                0.00    0.00    5262/1150266     Polygon::move(int, int) [43]
                0.01    0.03 1144216/1150266     Individual::draw_CV(unsigned char*, int, int) [4]
[31]     0.2    0.01    0.03 1150266         Polygon::get_point(int) [31]
                0.01    0.00 1150266/1989847     std::_List_iterator<Point*>::operator*() const [45]
                0.01    0.00 1150266/1404968     std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [52]
                0.00    0.01 1150266/1150279     std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type) [77]
-----------------------------------------------
                0.03    0.01  839581/839581      void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&) [30]
[32]     0.2    0.03    0.01  839581         std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [32]
                0.00    0.01  839581/839581      void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&) [80]
                0.00    0.00  839581/3358324     Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&) [54]
                0.00    0.00  839581/840533      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node() [132]
                0.00    0.00  839581/840546      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator() [125]
                0.00    0.00  839581/840533      std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*) [128]
                0.00    0.00  839581/2830393     std::_List_node<Point*>::_M_valptr() [113]
                0.00    0.00  839581/840533      std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::operator=(decltype(nullptr)) [130]
                0.00    0.00  839581/840533      std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::~__allocated_ptr() [129]
-----------------------------------------------
                0.00    0.01      69/219         Individual::mutate() [10]
                0.00    0.02     150/219         Individual::Individual(int, int, int, int) [39]
[33]     0.2    0.00    0.04     219         Polygon::random_polygon(int, int, int) [33]
                0.00    0.02    1728/10167       utils::next_int(int) [11]
                0.00    0.01     657/1873        Colour::random_colour() [38]
                0.00    0.00     219/219         Colour::random_alpha() [86]
                0.00    0.00     864/864         Polygon::add_point(Point*) [92]
                0.00    0.00     219/219         Polygon::Polygon(Colour*) [95]
                0.00    0.00     864/952         Point::Point(int, int) [361]
                0.00    0.00     219/219         Colour::Colour(unsigned char, unsigned char, unsigned char, double) [372]
-----------------------------------------------
                0.00    0.00    1873/12040       Colour::random_colour() [38]
                0.00    0.03   10167/12040       utils::next_int(int) [11]
[34]     0.2    0.00    0.03   12040         int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [34]
                0.00    0.03   12040/12040       int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [35]
-----------------------------------------------
                0.00    0.03   12040/12040       int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [34]
[35]     0.2    0.00    0.03   12040         int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [35]
                0.00    0.03   12040/45238       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [13]
                0.00    0.00   24080/24080       std::uniform_int_distribution<int>::param_type::a() const [224]
                0.00    0.00   12040/12040       std::uniform_int_distribution<int>::param_type::b() const [288]
-----------------------------------------------
                0.02    0.01 17870736/17870736     std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [7]
[36]     0.2    0.02    0.01 17870736         unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [36]
                0.01    0.00 17870736/17870736     std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long) [53]
-----------------------------------------------
                0.03    0.00 1395372/1395372     cv::Mat::~Mat() [28]
[37]     0.2    0.03    0.00 1395372         cv::Mat::release() [37]
-----------------------------------------------
                0.00    0.01     657/1873        Polygon::random_polygon(int, int, int) [33]
                0.00    0.02    1216/1873        Individual::mutate() [10]
[38]     0.1    0.00    0.03    1873         Colour::random_colour() [38]
                0.00    0.02    1873/28639       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [8]
                0.00    0.00    1873/12040       int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [34]
                0.00    0.00    1873/28639       std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [208]
                0.00    0.00    1873/28639       std::random_device::operator()() [210]
                0.00    0.00    1873/12040       std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [290]
                0.00    0.00    1873/28639       std::random_device::~random_device() [209]
-----------------------------------------------
                0.00    0.02       3/3           Population::Population(int, int, int, int, int) [40]
[39]     0.1    0.00    0.02       3         Individual::Individual(int, int, int, int) [39]
                0.00    0.02     150/219         Polygon::random_polygon(int, int, int) [33]
                0.00    0.00     150/231467      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [73]
                0.00    0.00       3/5004        std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list() [316]
-----------------------------------------------
                0.00    0.02       1/1           GeneticAlgorithm::GeneticAlgorithm(unsigned char*, int, int) [41]
[40]     0.1    0.00    0.02       1         Population::Population(int, int, int, int, int) [40]
                0.00    0.02       3/3           Individual::Individual(int, int, int, int) [39]
                0.00    0.00       3/12503       std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [287]
                0.00    0.00       1/5001        std::vector<Individual*, std::allocator<Individual*> >::vector() [321]
-----------------------------------------------
                0.00    0.02       1/1           Problem::run(cv::Mat*, int) [2]
[41]     0.1    0.00    0.02       1         GeneticAlgorithm::GeneticAlgorithm(unsigned char*, int, int) [41]
                0.00    0.02       1/1           Population::Population(int, int, int, int, int) [40]
-----------------------------------------------
                0.00    0.00     864/1095046     std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&) [93]
                0.00    0.00  254601/1095046     Polygon::Polygon(Polygon*) [15]
                0.02    0.00  839581/1095046     std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&) [22]
[42]     0.1    0.02    0.00 1095046         std::__cxx11::list<Point*, std::allocator<Point*> >::end() [42]
                0.00    0.00 1095046/2500216     std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [79]
-----------------------------------------------
                0.00    0.02     789/789         Individual::mutate() [10]
[43]     0.1    0.00    0.02     789         Polygon::move(int, int) [43]
                0.00    0.02    1578/10167       utils::next_int(int) [11]
                0.00    0.00    5262/1150266     Polygon::get_point(int) [31]
                0.00    0.00    5262/1149478     Point::get_y() [56]
                0.00    0.00     789/348633      Polygon::get_points_length() [75]
                0.00    0.00    5262/1149478     Point::get_x() [119]
                0.00    0.00    2631/3037        Point::set_x(int) [331]
                0.00    0.00    2631/3013        Point::set_y(int) [332]
-----------------------------------------------
                0.00    0.00     117/5692312     Individual::~Individual() [98]
                0.00    0.00  346962/5692312     Individual::draw_CV(unsigned char*, int, int) [4]
                0.02    0.00 5345233/5692312     void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag) [24]
[44]     0.1    0.02    0.00 5692312         std::_List_iterator<Polygon*>::operator++() [44]
-----------------------------------------------
                0.01    0.00  839581/1989847     Polygon::Polygon(Polygon*) [15]
                0.01    0.00 1150266/1989847     Polygon::get_point(int) [31]
[45]     0.1    0.02    0.00 1989847         std::_List_iterator<Point*>::operator*() const [45]
                0.00    0.00 1989847/2830393     std::_List_node<Point*>::_M_valptr() [113]
-----------------------------------------------
                0.00    0.02    2500/2500        GeneticAlgorithm::evolve(int) [3]
[46]     0.1    0.00    0.02    2500         sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [46]
                0.00    0.02    2500/2500        void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [47]
                0.00    0.00    5000/17504       std::vector<Individual*, std::allocator<Individual*> >::end() [245]
                0.00    0.00    5000/17504       std::vector<Individual*, std::allocator<Individual*> >::begin() [246]
                0.00    0.00    2500/2500        void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [349]
-----------------------------------------------
                0.00    0.02    2500/2500        sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [46]
[47]     0.1    0.00    0.02    2500         void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [47]
                0.00    0.02    2500/2500        void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [48]
                0.00    0.00    2500/2500        std::iterator_traits<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [345]
-----------------------------------------------
                0.00    0.02    2500/2500        void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [47]
[48]     0.1    0.00    0.02    2500         void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [48]
                0.01    0.01    2500/2500        void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [49]
                0.00    0.00    5000/10600       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator--() [291]
                0.00    0.00    5000/5000        bool __gnu_cxx::operator< <Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [324]
                0.00    0.00    2500/5000        bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [323]
                0.00    0.00    2500/7503        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++() [301]
-----------------------------------------------
                0.01    0.01    2500/2500        void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [48]
[49]     0.1    0.01    0.01    2500         void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [49]
                0.01    0.00    2500/2500        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual*> >, std::is_move_constructible<Individual*>, std::is_move_assignable<Individual*> >::value, void>::type std::swap<Individual*>(Individual*&, Individual*&) [74]
                0.00    0.00    5000/31815       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [198]
-----------------------------------------------
                0.01    0.01  346962/346962      cv::Mat::clone() const [51]
[50]     0.1    0.01    0.01  346962         cv::Mat::Mat() [50]
                0.01    0.00  346962/346963      cv::MatStep::MatStep(unsigned long) [63]
                0.00    0.00  346962/354485      cv::MatSize::MatSize(int*) [145]
-----------------------------------------------
                0.00    0.02  346962/346962      Individual::draw_CV(unsigned char*, int, int) [4]
[51]     0.1    0.00    0.02  346962         cv::Mat::clone() const [51]
                0.01    0.01  346962/346962      cv::Mat::Mat() [50]
                0.00    0.00  346962/693925      cv::_OutputArray::_OutputArray(cv::Mat&) [140]
                0.00    0.00  346962/1040887     cv::_OutputArray::~_OutputArray() [123]
-----------------------------------------------
                0.00    0.00      13/1404968     Polygon::remove_point() [88]
                0.00    0.00      88/1404968     Polygon::insert_point(int, Point*) [96]
                0.00    0.00  254601/1404968     Polygon::Polygon(Polygon*) [15]
                0.01    0.00 1150266/1404968     Polygon::get_point(int) [31]
[52]     0.1    0.01    0.00 1404968         std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [52]
                0.00    0.00 1404968/2500216     std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [79]
-----------------------------------------------
                0.01    0.00 17870736/17870736     unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [36]
[53]     0.1    0.01    0.00 17870736         std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long) [53]
-----------------------------------------------
                0.00    0.00  839581/3358324     void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&) [30]
                0.00    0.00  839581/3358324     std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [32]
                0.00    0.00  839581/3358324     void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&) [80]
                0.00    0.00  839581/3358324     void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&) [87]
[54]     0.1    0.01    0.00 3358324         Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&) [54]
-----------------------------------------------
                0.00    0.00  839581/2250625     Polygon::Polygon(Polygon*) [15]
                0.01    0.00 1411044/2250625     void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag) [76]
[55]     0.1    0.01    0.00 2250625         std::_List_iterator<Point*>::operator++() [55]
-----------------------------------------------
                0.00    0.00    5262/1149478     Polygon::move(int, int) [43]
                0.01    0.00 1144216/1149478     Individual::draw_CV(unsigned char*, int, int) [4]
[56]     0.1    0.01    0.00 1149478         Point::get_y() [56]
-----------------------------------------------
                0.01    0.00 1144216/1144216     Individual::draw_CV(unsigned char*, int, int) [4]
[57]     0.1    0.01    0.00 1144216         cv::Point_<int>::Point_(int, int) [57]
-----------------------------------------------
                0.01    0.00 1144216/1144216     Individual::draw_CV(unsigned char*, int, int) [4]
[58]     0.1    0.01    0.00 1144216         cv::Point_<int>::operator=(cv::Point_<int>&&) [58]
                0.00    0.00 2288432/2288432     std::remove_reference<int&>::type&& std::move<int&>(int&) [114]
-----------------------------------------------
                0.01    0.00  839581/839581      std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&) [22]
[59]     0.1    0.01    0.00  839581         std::remove_reference<Point*&>::type&& std::move<Point*&>(Point*&) [59]
-----------------------------------------------
                0.01    0.00  348701/348701      std::__cxx11::list<Point*, std::allocator<Point*> >::_M_node_count() const [61]
[60]     0.1    0.01    0.00  348701         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_size() const [60]
-----------------------------------------------
                0.00    0.01  348701/348701      std::__cxx11::list<Point*, std::allocator<Point*> >::size() const [62]
[61]     0.1    0.00    0.01  348701         std::__cxx11::list<Point*, std::allocator<Point*> >::_M_node_count() const [61]
                0.01    0.00  348701/348701      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_size() const [60]
-----------------------------------------------
                0.00    0.00      68/348701      Polygon::remove_point() [88]
                0.00    0.01  348633/348701      Polygon::get_points_length() [75]
[62]     0.1    0.00    0.01  348701         std::__cxx11::list<Point*, std::allocator<Point*> >::size() const [62]
                0.00    0.01  348701/348701      std::__cxx11::list<Point*, std::allocator<Point*> >::_M_node_count() const [61]
-----------------------------------------------
                0.00    0.00       1/346963      cv::Mat::Mat(int, int, int) [103]
                0.01    0.00  346962/346963      cv::Mat::Mat() [50]
[63]     0.1    0.01    0.00  346963         cv::MatStep::MatStep(unsigned long) [63]
-----------------------------------------------
                0.01    0.00  346962/346962      Individual::draw_CV(unsigned char*, int, int) [4]
[64]     0.1    0.01    0.00  346962         cv::_InputOutputArray::_InputOutputArray(cv::Mat&) [64]
                0.00    0.00  346962/346962      cv::_OutputArray::_OutputArray() [146]
                0.00    0.00  346962/3122662     cv::_InputArray::init(int, void const*) [110]
-----------------------------------------------
                0.00    0.01  346962/346962      cv::Scalar_<double>::Scalar_(double, double, double, double) [67]
[65]     0.1    0.00    0.01  346962         cv::Vec<double, 4>::Vec() [65]
                0.01    0.00  346962/346962      cv::Matx<double, 4, 1>::Matx() [66]
-----------------------------------------------
                0.01    0.00  346962/346962      cv::Vec<double, 4>::Vec() [65]
[66]     0.1    0.01    0.00  346962         cv::Matx<double, 4, 1>::Matx() [66]
-----------------------------------------------
                0.00    0.01  346962/346962      Individual::draw_CV(unsigned char*, int, int) [4]
[67]     0.1    0.00    0.01  346962         cv::Scalar_<double>::Scalar_(double, double, double, double) [67]
                0.00    0.01  346962/346962      cv::Vec<double, 4>::Vec() [65]
-----------------------------------------------
                0.01    0.00  346962/346962      Individual::draw_CV(unsigned char*, int, int) [4]
[68]     0.1    0.01    0.00  346962         Colour::get_r() [68]
-----------------------------------------------
                0.01    0.00  231467/231467      void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&) [70]
[69]     0.1    0.01    0.00  231467         void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [69]
                0.00    0.00  231467/1002886     Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [124]
                0.00    0.00  231467/1107856     operator new(unsigned long, void*) [120]
-----------------------------------------------
                0.00    0.01  231467/231467      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [71]
[70]     0.1    0.00    0.01  231467         void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&) [70]
                0.01    0.00  231467/231467      void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [69]
                0.00    0.00  231467/1002886     Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [124]
-----------------------------------------------
                0.00    0.01  231467/231467      void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&) [72]
[71]     0.1    0.00    0.01  231467         std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [71]
                0.00    0.01  231467/231467      void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&) [70]
                0.00    0.00  231467/231536      std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node() [165]
                0.00    0.00  231467/231610      std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator() [158]
                0.00    0.00  231467/231536      std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*) [161]
                0.00    0.00  231467/1002886     Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [124]
                0.00    0.00  231467/813569      std::_List_node<Polygon*>::_M_valptr() [138]
                0.00    0.00  231467/231536      std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::operator=(decltype(nullptr)) [163]
                0.00    0.00  231467/231536      std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::~__allocated_ptr() [162]
-----------------------------------------------
                0.00    0.01  231467/231467      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [73]
[72]     0.1    0.00    0.01  231467         void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&) [72]
                0.00    0.01  231467/231467      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [71]
                0.00    0.00  231467/1002886     Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [124]
                0.00    0.00  231467/231536      std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_inc_size(unsigned long) [166]
-----------------------------------------------
                0.00    0.00      39/231467      Individual::Individual(Individual*) [90]
                0.00    0.00     150/231467      Individual::Individual(int, int, int, int) [39]
                0.00    0.00   67174/231467      GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
                0.00    0.01  164104/231467      GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [12]
[73]     0.1    0.00    0.01  231467         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [73]
                0.00    0.01  231467/231467      void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&) [72]
                0.00    0.00  231467/254751      std::remove_reference<Polygon*&>::type&& std::move<Polygon*&>(Polygon*&) [153]
                0.00    0.00  231467/238971      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end() [156]
-----------------------------------------------
                0.01    0.00    2500/2500        void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [49]
[74]     0.1    0.01    0.00    2500         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual*> >, std::is_move_constructible<Individual*>, std::is_move_assignable<Individual*> >::value, void>::type std::swap<Individual*>(Individual*&, Individual*&) [74]
                0.00    0.00    7500/18106       std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&) [244]
-----------------------------------------------
                0.00    0.00     789/348633      Polygon::move(int, int) [43]
                0.00    0.00     882/348633      Individual::mutate() [10]
                0.00    0.01  346962/348633      Individual::draw_CV(unsigned char*, int, int) [4]
[75]     0.1    0.00    0.01  348633         Polygon::get_points_length() [75]
                0.00    0.01  348633/348701      std::__cxx11::list<Point*, std::allocator<Point*> >::size() const [62]
-----------------------------------------------
                0.00    0.00      88/1150367     void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int) [97]
                0.00    0.01 1150279/1150367     void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long) [78]
[76]     0.0    0.00    0.01 1150367         void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag) [76]
                0.01    0.00 1411044/2250625     std::_List_iterator<Point*>::operator++() [55]
                0.00    0.00      30/30          std::_List_iterator<Point*>::operator--() [389]
-----------------------------------------------
                0.00    0.00      13/1150279     Polygon::remove_point() [88]
                0.00    0.01 1150266/1150279     Polygon::get_point(int) [31]
[77]     0.0    0.00    0.01 1150279         std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type) [77]
                0.00    0.01 1150279/1150279     void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long) [78]
-----------------------------------------------
                0.00    0.01 1150279/1150279     std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type) [77]
[78]     0.0    0.00    0.01 1150279         void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long) [78]
                0.00    0.01 1150279/1150367     void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag) [76]
                0.00    0.00 1150279/1150367     std::iterator_traits<std::_List_iterator<Point*> >::iterator_category std::__iterator_category<std::_List_iterator<Point*> >(std::_List_iterator<Point*> const&) [118]
-----------------------------------------------
                0.00    0.00      13/2500216     std::__cxx11::list<Point*, std::allocator<Point*> >::erase(std::_List_const_iterator<Point*>) [102]
                0.00    0.00      88/2500216     std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [100]
                0.00    0.00     101/2500216     std::_List_const_iterator<Point*>::_M_const_cast() const [101]
                0.00    0.00 1095046/2500216     std::__cxx11::list<Point*, std::allocator<Point*> >::end() [42]
                0.00    0.00 1404968/2500216     std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [52]
[79]     0.0    0.01    0.00 2500216         std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [79]
-----------------------------------------------
                0.00    0.01  839581/839581      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [32]
[80]     0.0    0.00    0.01  839581         void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&) [80]
                0.00    0.00  839581/3358324     Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&) [54]
                0.00    0.00  839581/839581      void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&) [87]
-----------------------------------------------
                0.01    0.00  254820/254820      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl() [82]
[81]     0.0    0.01    0.00  254820         std::allocator<std::_List_node<Point*> >::allocator() [81]
                0.00    0.00  254820/254820      __gnu_cxx::new_allocator<std::_List_node<Point*> >::new_allocator() [152]
-----------------------------------------------
                0.00    0.01  254820/254820      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_base() [83]
[82]     0.0    0.00    0.01  254820         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl() [82]
                0.01    0.00  254820/254820      std::allocator<std::_List_node<Point*> >::allocator() [81]
                0.00    0.00  254820/259824      std::__detail::_List_node_header::_List_node_header() [151]
-----------------------------------------------
                0.00    0.01  254820/254820      std::__cxx11::list<Point*, std::allocator<Point*> >::list() [84]
[83]     0.0    0.00    0.01  254820         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_base() [83]
                0.00    0.01  254820/254820      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl() [82]
-----------------------------------------------
                0.00    0.00     219/254820      Polygon::Polygon(Colour*) [95]
                0.00    0.00  254601/254820      Polygon::Polygon(Polygon*) [15]
[84]     0.0    0.00    0.01  254820         std::__cxx11::list<Point*, std::allocator<Point*> >::list() [84]
                0.00    0.01  254820/254820      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_base() [83]
-----------------------------------------------
                0.01    0.00       1/1           main [1]
[85]     0.0    0.01    0.00       1         std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, int) [85]
                0.00    0.00       1/1           int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [427]
-----------------------------------------------
                0.00    0.00     219/219         Polygon::random_polygon(int, int, int) [33]
[86]     0.0    0.00    0.00     219         Colour::random_alpha() [86]
                0.00    0.00     219/28639       std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [8]
                0.00    0.00     219/16599       double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [16]
                0.00    0.00     219/28639       std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [208]
                0.00    0.00     219/28639       std::random_device::operator()() [210]
                0.00    0.00     219/16599       std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [267]
                0.00    0.00     219/28639       std::random_device::~random_device() [209]
-----------------------------------------------
                0.00    0.00  839581/839581      void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&) [80]
[87]     0.0    0.00    0.00  839581         void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&) [87]
                0.00    0.00  839581/3358324     Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&) [54]
                0.00    0.00  839581/1107856     operator new(unsigned long, void*) [120]
-----------------------------------------------
                0.00    0.00      68/68          Individual::mutate() [10]
[88]     0.0    0.00    0.00      68         Polygon::remove_point() [88]
                0.00    0.00      13/10167       utils::next_int(int) [11]
                0.00    0.00      68/348701      std::__cxx11::list<Point*, std::allocator<Point*> >::size() const [62]
                0.00    0.00      13/1404968     std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [52]
                0.00    0.00      13/1150279     std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type) [77]
                0.00    0.00      13/13          std::__cxx11::list<Point*, std::allocator<Point*> >::erase(std::_List_const_iterator<Point*>) [102]
                0.00    0.00      13/101         std::_List_const_iterator<Point*>::_List_const_iterator(std::_List_iterator<Point*> const&) [376]
-----------------------------------------------
                0.00    0.00      69/143         Individual::insert_dna(int, Polygon*) [94]
                0.00    0.00      74/143         Individual::remove_dna(int) [91]
[89]     0.0    0.00    0.00     143         void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int) [89]
                0.00    0.00     143/234949      void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag) [24]
                0.00    0.00     143/234949      std::iterator_traits<std::_List_iterator<Polygon*> >::iterator_category std::__iterator_category<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*> const&) [157]
-----------------------------------------------
                0.00    0.00       1/1           GeneticAlgorithm::evolve(int) [3]
[90]     0.0    0.00    0.00       1         Individual::Individual(Individual*) [90]
                0.00    0.00      39/254601      Polygon::Polygon(Polygon*) [15]
                0.00    0.00      39/234806      Individual::get_dna(int) [25]
                0.00    0.00      39/231467      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [73]
                0.00    0.00      40/19693       Individual::get_len_dna() [242]
                0.00    0.00       1/5004        std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list() [316]
-----------------------------------------------
                0.00    0.00      74/74          Individual::mutate() [10]
[91]     0.0    0.00    0.00      74         Individual::remove_dna(int) [91]
                0.00    0.00      74/143         void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int) [89]
                0.00    0.00      74/242453      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [155]
                0.00    0.00      74/581959      std::_List_iterator<Polygon*>::operator*() const [142]
                0.00    0.00      74/74          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>) [383]
                0.00    0.00      74/143         std::_List_const_iterator<Polygon*>::_List_const_iterator(std::_List_iterator<Polygon*> const&) [375]
-----------------------------------------------
                0.00    0.00     864/864         Polygon::random_polygon(int, int, int) [33]
[92]     0.0    0.00    0.00     864         Polygon::add_point(Point*) [92]
                0.00    0.00     864/864         std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&) [93]
-----------------------------------------------
                0.00    0.00     864/864         Polygon::add_point(Point*) [92]
[93]     0.0    0.00    0.00     864         std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&) [93]
                0.00    0.00     864/1095046     std::__cxx11::list<Point*, std::allocator<Point*> >::end() [42]
                0.00    0.00     864/864         void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&) [365]
-----------------------------------------------
                0.00    0.00      69/69          Individual::mutate() [10]
[94]     0.0    0.00    0.00      69         Individual::insert_dna(int, Polygon*) [94]
                0.00    0.00      69/143         void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int) [89]
                0.00    0.00      69/242453      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [155]
                0.00    0.00      69/143         std::_List_const_iterator<Polygon*>::_List_const_iterator(std::_List_iterator<Polygon*> const&) [375]
                0.00    0.00      69/69          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [388]
-----------------------------------------------
                0.00    0.00     219/219         Polygon::random_polygon(int, int, int) [33]
[95]     0.0    0.00    0.00     219         Polygon::Polygon(Colour*) [95]
                0.00    0.00     219/254820      std::__cxx11::list<Point*, std::allocator<Point*> >::list() [84]
-----------------------------------------------
                0.00    0.00      88/88          Individual::mutate() [10]
[96]     0.0    0.00    0.00      88         Polygon::insert_point(int, Point*) [96]
                0.00    0.00      88/1404968     std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [52]
                0.00    0.00      88/88          void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int) [97]
                0.00    0.00      88/88          std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [100]
                0.00    0.00      88/101         std::_List_const_iterator<Point*>::_List_const_iterator(std::_List_iterator<Point*> const&) [376]
-----------------------------------------------
                0.00    0.00      88/88          Polygon::insert_point(int, Point*) [96]
[97]     0.0    0.00    0.00      88         void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int) [97]
                0.00    0.00      88/1150367     void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag) [76]
                0.00    0.00      88/1150367     std::iterator_traits<std::_List_iterator<Point*> >::iterator_category std::__iterator_category<std::_List_iterator<Point*> >(std::_List_iterator<Point*> const&) [118]
-----------------------------------------------
                0.00    0.00       3/3           GeneticAlgorithm::clean_population() [99]
[98]     0.0    0.00    0.00       3         Individual::~Individual() [98]
                0.00    0.00     117/5692312     std::_List_iterator<Polygon*>::operator++() [44]
                0.00    0.00     120/354583      std::_List_iterator<Polygon*>::operator!=(std::_List_iterator<Polygon*> const&) const [144]
                0.00    0.00     117/581959      std::_List_iterator<Polygon*>::operator*() const [142]
                0.00    0.00       3/242453      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [155]
                0.00    0.00       3/238971      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end() [156]
-----------------------------------------------
                0.00    0.00       1/1           GeneticAlgorithm::evolve(int) [3]
[99]     0.0    0.00    0.00       1         GeneticAlgorithm::clean_population() [99]
                0.00    0.00       3/3           Individual::~Individual() [98]
                0.00    0.00       4/10004       bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [292]
                0.00    0.00       3/31815       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [198]
                0.00    0.00       3/7503        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++() [301]
                0.00    0.00       1/15001       Population::get_individuals() [270]
                0.00    0.00       1/17504       std::vector<Individual*, std::allocator<Individual*> >::begin() [246]
                0.00    0.00       1/17504       std::vector<Individual*, std::allocator<Individual*> >::end() [245]
                0.00    0.00       1/22501       std::vector<Individual*, std::allocator<Individual*> >::~vector() [238]
-----------------------------------------------
                0.00    0.00      88/88          Polygon::insert_point(int, Point*) [96]
[100]    0.0    0.00    0.00      88         std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [100]
                0.00    0.00      88/101         std::_List_const_iterator<Point*>::_M_const_cast() const [101]
                0.00    0.00      88/2500216     std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [79]
                0.00    0.00      88/952         std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
                0.00    0.00      88/840533      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long) [133]
-----------------------------------------------
                0.00    0.00      13/101         std::__cxx11::list<Point*, std::allocator<Point*> >::erase(std::_List_const_iterator<Point*>) [102]
                0.00    0.00      88/101         std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [100]
[101]    0.0    0.00    0.00     101         std::_List_const_iterator<Point*>::_M_const_cast() const [101]
                0.00    0.00     101/2500216     std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [79]
-----------------------------------------------
                0.00    0.00      13/13          Polygon::remove_point() [88]
[102]    0.0    0.00    0.00      13         std::__cxx11::list<Point*, std::allocator<Point*> >::erase(std::_List_const_iterator<Point*>) [102]
                0.00    0.00      13/101         std::_List_const_iterator<Point*>::_M_const_cast() const [101]
                0.00    0.00      13/2500216     std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [79]
                0.00    0.00      13/13          std::__cxx11::list<Point*, std::allocator<Point*> >::_M_erase(std::_List_iterator<Point*>) [397]
-----------------------------------------------
                0.00    0.00       1/1           Problem::run(cv::Mat*, int) [2]
[103]    0.0    0.00    0.00       1         cv::Mat::Mat(int, int, int) [103]
                0.00    0.00       1/346963      cv::MatStep::MatStep(unsigned long) [63]
                0.00    0.00       1/354485      cv::MatSize::MatSize(int*) [145]
                0.00    0.00       1/1           cv::Mat::create(int, int, int) [414]
-----------------------------------------------
                0.00    0.00  346962/3122662     cv::_OutputArray::_OutputArray() [146]
                0.00    0.00  346962/3122662     cv::_InputOutputArray::_InputOutputArray(cv::Mat&) [64]
                0.00    0.00  693925/3122662     cv::_OutputArray::_OutputArray(cv::Mat&) [140]
                0.00    0.00  693926/3122662     cv::_InputArray::_InputArray(cv::Mat const&) [139]
                0.00    0.00 1040887/3122662     cv::_InputArray::_InputArray() [122]
[110]    0.0    0.00    0.00 3122662         cv::_InputArray::init(int, void const*) [110]
-----------------------------------------------
                0.00    0.00 2830393/2830393     std::_List_node<Point*>::_M_valptr() [113]
[111]    0.0    0.00    0.00 2830393         __gnu_cxx::__aligned_membuf<Point*>::_M_ptr() [111]
                0.00    0.00 2830393/2830393     __gnu_cxx::__aligned_membuf<Point*>::_M_addr() [112]
-----------------------------------------------
                0.00    0.00 2830393/2830393     __gnu_cxx::__aligned_membuf<Point*>::_M_ptr() [111]
[112]    0.0    0.00    0.00 2830393         __gnu_cxx::__aligned_membuf<Point*>::_M_addr() [112]
-----------------------------------------------
                0.00    0.00      13/2830393     std::__cxx11::list<Point*, std::allocator<Point*> >::_M_erase(std::_List_iterator<Point*>) [397]
                0.00    0.00     952/2830393     std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
                0.00    0.00  839581/2830393     std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [32]
                0.00    0.00 1989847/2830393     std::_List_iterator<Point*>::operator*() const [45]
[113]    0.0    0.00    0.00 2830393         std::_List_node<Point*>::_M_valptr() [113]
                0.00    0.00 2830393/2830393     __gnu_cxx::__aligned_membuf<Point*>::_M_ptr() [111]
-----------------------------------------------
                0.00    0.00 2288432/2288432     cv::Point_<int>::operator=(cv::Point_<int>&&) [58]
[114]    0.0    0.00    0.00 2288432         std::remove_reference<int&>::type&& std::move<int&>(int&) [114]
-----------------------------------------------
                0.00    0.00       2/1734813     Problem::run(cv::Mat*, int) [2]
                0.00    0.00  693924/1734813     Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00 1040887/1734813     cv::_OutputArray::~_OutputArray() [123]
[115]    0.0    0.00    0.00 1734813         cv::_InputArray::~_InputArray() [115]
-----------------------------------------------
                0.00    0.00  693926/1734813     cv::_InputArray::_InputArray(cv::Mat const&) [139]
                0.00    0.00 1040887/1734813     cv::_InputArray::_InputArray() [122]
[116]    0.0    0.00    0.00 1734813         cv::Size_<int>::Size_() [116]
-----------------------------------------------
                0.00    0.00 1491178/1491178     Individual::draw_CV(unsigned char*, int, int) [4]
[117]    0.0    0.00    0.00 1491178         cv::Point_<int>::Point_() [117]
-----------------------------------------------
                0.00    0.00      88/1150367     void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int) [97]
                0.00    0.00 1150279/1150367     void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long) [78]
[118]    0.0    0.00    0.00 1150367         std::iterator_traits<std::_List_iterator<Point*> >::iterator_category std::__iterator_category<std::_List_iterator<Point*> >(std::_List_iterator<Point*> const&) [118]
-----------------------------------------------
                0.00    0.00    5262/1149478     Polygon::move(int, int) [43]
                0.00    0.00 1144216/1149478     Individual::draw_CV(unsigned char*, int, int) [4]
[119]    0.0    0.00    0.00 1149478         Point::get_x() [119]
-----------------------------------------------
                0.00    0.00      69/1107856     void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&) [385]
                0.00    0.00     952/1107856     void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&) [362]
                0.00    0.00   12503/1107856     void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&) [283]
                0.00    0.00   23284/1107856     void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [225]
                0.00    0.00  231467/1107856     void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [69]
                0.00    0.00  839581/1107856     void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&) [87]
[120]    0.0    0.00    0.00 1107856         operator new(unsigned long, void*) [120]
-----------------------------------------------
                0.00    0.00 1094182/1094182     Polygon::Polygon(Polygon*) [15]
[121]    0.0    0.00    0.00 1094182         std::_List_iterator<Point*>::operator!=(std::_List_iterator<Point*> const&) const [121]
-----------------------------------------------
                0.00    0.00  346962/1040887     cv::_OutputArray::_OutputArray() [146]
                0.00    0.00  693925/1040887     cv::_OutputArray::_OutputArray(cv::Mat&) [140]
[122]    0.0    0.00    0.00 1040887         cv::_InputArray::_InputArray() [122]
                0.00    0.00 1040887/1734813     cv::Size_<int>::Size_() [116]
                0.00    0.00 1040887/3122662     cv::_InputArray::init(int, void const*) [110]
-----------------------------------------------
                0.00    0.00       1/1040887     Problem::run(cv::Mat*, int) [2]
                0.00    0.00  346962/1040887     Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00  346962/1040887     cv::Mat::clone() const [51]
                0.00    0.00  346962/1040887     cv::_InputOutputArray::~_InputOutputArray() [147]
[123]    0.0    0.00    0.00 1040887         cv::_OutputArray::~_OutputArray() [123]
                0.00    0.00 1040887/1734813     cv::_InputArray::~_InputArray() [115]
-----------------------------------------------
                0.00    0.00    7166/1002886     void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
                0.00    0.00   23284/1002886     void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [229]
                0.00    0.00   23284/1002886     void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [228]
                0.00    0.00   23284/1002886     void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [225]
                0.00    0.00  231467/1002886     void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&) [72]
                0.00    0.00  231467/1002886     std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [71]
                0.00    0.00  231467/1002886     void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&) [70]
                0.00    0.00  231467/1002886     void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [69]
[124]    0.0    0.00    0.00 1002886         Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [124]
-----------------------------------------------
                0.00    0.00      13/840546      std::__cxx11::list<Point*, std::allocator<Point*> >::_M_erase(std::_List_iterator<Point*>) [397]
                0.00    0.00     952/840546      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
                0.00    0.00  839581/840546      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [32]
[125]    0.0    0.00    0.00  840546         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator() [125]
-----------------------------------------------
                0.00    0.00  840533/840533      std::allocator_traits<std::allocator<std::_List_node<Point*> > >::allocate(std::allocator<std::_List_node<Point*> >&, unsigned long) [131]
[126]    0.0    0.00    0.00  840533         __gnu_cxx::new_allocator<std::_List_node<Point*> >::allocate(unsigned long, void const*) [126]
                0.00    0.00  840533/840533      __gnu_cxx::new_allocator<std::_List_node<Point*> >::max_size() const [127]
-----------------------------------------------
                0.00    0.00  840533/840533      __gnu_cxx::new_allocator<std::_List_node<Point*> >::allocate(unsigned long, void const*) [126]
[127]    0.0    0.00    0.00  840533         __gnu_cxx::new_allocator<std::_List_node<Point*> >::max_size() const [127]
-----------------------------------------------
                0.00    0.00     952/840533      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
                0.00    0.00  839581/840533      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [32]
[128]    0.0    0.00    0.00  840533         std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*) [128]
                0.00    0.00  840533/840533      std::allocator<std::_List_node<Point*> >* std::__addressof<std::allocator<std::_List_node<Point*> > >(std::allocator<std::_List_node<Point*> >&) [134]
-----------------------------------------------
                0.00    0.00     952/840533      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
                0.00    0.00  839581/840533      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [32]
[129]    0.0    0.00    0.00  840533         std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::~__allocated_ptr() [129]
-----------------------------------------------
                0.00    0.00     952/840533      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
                0.00    0.00  839581/840533      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [32]
[130]    0.0    0.00    0.00  840533         std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::operator=(decltype(nullptr)) [130]
-----------------------------------------------
                0.00    0.00  840533/840533      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node() [132]
[131]    0.0    0.00    0.00  840533         std::allocator_traits<std::allocator<std::_List_node<Point*> > >::allocate(std::allocator<std::_List_node<Point*> >&, unsigned long) [131]
                0.00    0.00  840533/840533      __gnu_cxx::new_allocator<std::_List_node<Point*> >::allocate(unsigned long, void const*) [126]
-----------------------------------------------
                0.00    0.00     952/840533      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
                0.00    0.00  839581/840533      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [32]
[132]    0.0    0.00    0.00  840533         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node() [132]
                0.00    0.00  840533/840533      std::allocator_traits<std::allocator<std::_List_node<Point*> > >::allocate(std::allocator<std::_List_node<Point*> >&, unsigned long) [131]
-----------------------------------------------
                0.00    0.00      88/840533      std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [100]
                0.00    0.00     864/840533      void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&) [365]
                0.00    0.00  839581/840533      void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&) [30]
[133]    0.0    0.00    0.00  840533         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long) [133]
-----------------------------------------------
                0.00    0.00  840533/840533      std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*) [128]
[134]    0.0    0.00    0.00  840533         std::allocator<std::_List_node<Point*> >* std::__addressof<std::allocator<std::_List_node<Point*> > >(std::allocator<std::_List_node<Point*> >&) [134]
-----------------------------------------------
                0.00    0.00  839581/839581      Polygon::Polygon(Polygon*) [15]
[135]    0.0    0.00    0.00  839581         Point::Point(Point*) [135]
-----------------------------------------------
                0.00    0.00  813569/813569      std::_List_node<Polygon*>::_M_valptr() [138]
[136]    0.0    0.00    0.00  813569         __gnu_cxx::__aligned_membuf<Polygon*>::_M_ptr() [136]
                0.00    0.00  813569/813569      __gnu_cxx::__aligned_membuf<Polygon*>::_M_addr() [137]
-----------------------------------------------
                0.00    0.00  813569/813569      __gnu_cxx::__aligned_membuf<Polygon*>::_M_ptr() [136]
[137]    0.0    0.00    0.00  813569         __gnu_cxx::__aligned_membuf<Polygon*>::_M_addr() [137]
-----------------------------------------------
                0.00    0.00      69/813569      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [387]
                0.00    0.00      74/813569      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [384]
                0.00    0.00  231467/813569      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [71]
                0.00    0.00  581959/813569      std::_List_iterator<Polygon*>::operator*() const [142]
[138]    0.0    0.00    0.00  813569         std::_List_node<Polygon*>::_M_valptr() [138]
                0.00    0.00  813569/813569      __gnu_cxx::__aligned_membuf<Polygon*>::_M_ptr() [136]
-----------------------------------------------
                0.00    0.00       2/693926      Problem::run(cv::Mat*, int) [2]
                0.00    0.00  693924/693926      Individual::draw_CV(unsigned char*, int, int) [4]
[139]    0.0    0.00    0.00  693926         cv::_InputArray::_InputArray(cv::Mat const&) [139]
                0.00    0.00  693926/1734813     cv::Size_<int>::Size_() [116]
                0.00    0.00  693926/3122662     cv::_InputArray::init(int, void const*) [110]
-----------------------------------------------
                0.00    0.00       1/693925      Problem::run(cv::Mat*, int) [2]
                0.00    0.00  346962/693925      Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00  346962/693925      cv::Mat::clone() const [51]
[140]    0.0    0.00    0.00  693925         cv::_OutputArray::_OutputArray(cv::Mat&) [140]
                0.00    0.00  693925/1040887     cv::_InputArray::_InputArray() [122]
                0.00    0.00  693925/3122662     cv::_InputArray::init(int, void const*) [110]
-----------------------------------------------
                0.00    0.00  693924/693924      Individual::draw_CV(unsigned char*, int, int) [4]
[141]    0.0    0.00    0.00  693924         Colour::get_a() [141]
-----------------------------------------------
                0.00    0.00      74/581959      Individual::remove_dna(int) [91]
                0.00    0.00     117/581959      Individual::~Individual() [98]
                0.00    0.00  234806/581959      Individual::get_dna(int) [25]
                0.00    0.00  346962/581959      Individual::draw_CV(unsigned char*, int, int) [4]
[142]    0.0    0.00    0.00  581959         std::_List_iterator<Polygon*>::operator*() const [142]
                0.00    0.00  581959/813569      std::_List_node<Polygon*>::_M_valptr() [138]
-----------------------------------------------
                0.00    0.00      69/481710      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [388]
                0.00    0.00      74/481710      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>) [383]
                0.00    0.00     143/481710      std::_List_const_iterator<Polygon*>::_M_const_cast() const [374]
                0.00    0.00  238971/481710      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end() [156]
                0.00    0.00  242453/481710      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [155]
[143]    0.0    0.00    0.00  481710         std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [143]
-----------------------------------------------
                0.00    0.00     120/354583      Individual::~Individual() [98]
                0.00    0.00  354463/354583      Individual::draw_CV(unsigned char*, int, int) [4]
[144]    0.0    0.00    0.00  354583         std::_List_iterator<Polygon*>::operator!=(std::_List_iterator<Polygon*> const&) const [144]
-----------------------------------------------
                0.00    0.00       1/354485      cv::Mat::Mat(int, int, int) [103]
                0.00    0.00    7522/354485      cv::Mat::Mat(int, int, int, void*, unsigned long) [302]
                0.00    0.00  346962/354485      cv::Mat::Mat() [50]
[145]    0.0    0.00    0.00  354485         cv::MatSize::MatSize(int*) [145]
-----------------------------------------------
                0.00    0.00  346962/346962      cv::_InputOutputArray::_InputOutputArray(cv::Mat&) [64]
[146]    0.0    0.00    0.00  346962         cv::_OutputArray::_OutputArray() [146]
                0.00    0.00  346962/1040887     cv::_InputArray::_InputArray() [122]
                0.00    0.00  346962/3122662     cv::_InputArray::init(int, void const*) [110]
-----------------------------------------------
                0.00    0.00  346962/346962      Individual::draw_CV(unsigned char*, int, int) [4]
[147]    0.0    0.00    0.00  346962         cv::_InputOutputArray::~_InputOutputArray() [147]
                0.00    0.00  346962/1040887     cv::_OutputArray::~_OutputArray() [123]
-----------------------------------------------
                0.00    0.00  346962/346962      Individual::draw_CV(unsigned char*, int, int) [4]
[148]    0.0    0.00    0.00  346962         Colour::get_b() [148]
-----------------------------------------------
                0.00    0.00  346962/346962      Individual::draw_CV(unsigned char*, int, int) [4]
[149]    0.0    0.00    0.00  346962         Colour::get_g() [149]
-----------------------------------------------
                0.00    0.00  259824/259824      std::__detail::_List_node_header::_List_node_header() [151]
[150]    0.0    0.00    0.00  259824         std::__detail::_List_node_header::_M_init() [150]
-----------------------------------------------
                0.00    0.00    5004/259824      std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl() [314]
                0.00    0.00  254820/259824      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl() [82]
[151]    0.0    0.00    0.00  259824         std::__detail::_List_node_header::_List_node_header() [151]
                0.00    0.00  259824/259824      std::__detail::_List_node_header::_M_init() [150]
-----------------------------------------------
                0.00    0.00  254820/254820      std::allocator<std::_List_node<Point*> >::allocator() [81]
[152]    0.0    0.00    0.00  254820         __gnu_cxx::new_allocator<std::_List_node<Point*> >::new_allocator() [152]
-----------------------------------------------
                0.00    0.00   23284/254751      std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [230]
                0.00    0.00  231467/254751      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [73]
[153]    0.0    0.00    0.00  254751         std::remove_reference<Polygon*&>::type&& std::move<Polygon*&>(Polygon*&) [153]
-----------------------------------------------
                0.00    0.00  254601/254601      Polygon::Polygon(Polygon*) [15]
[154]    0.0    0.00    0.00  254601         Colour::Colour(Colour*) [154]
-----------------------------------------------
                0.00    0.00       3/242453      Individual::~Individual() [98]
                0.00    0.00      69/242453      Individual::insert_dna(int, Polygon*) [94]
                0.00    0.00      74/242453      Individual::remove_dna(int) [91]
                0.00    0.00    7501/242453      Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00  234806/242453      Individual::get_dna(int) [25]
[155]    0.0    0.00    0.00  242453         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [155]
                0.00    0.00  242453/481710      std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [143]
-----------------------------------------------
                0.00    0.00       3/238971      Individual::~Individual() [98]
                0.00    0.00    7501/238971      Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00  231467/238971      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [73]
[156]    0.0    0.00    0.00  238971         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end() [156]
                0.00    0.00  238971/481710      std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [143]
-----------------------------------------------
                0.00    0.00     143/234949      void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int) [89]
                0.00    0.00  234806/234949      void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long) [27]
[157]    0.0    0.00    0.00  234949         std::iterator_traits<std::_List_iterator<Polygon*> >::iterator_category std::__iterator_category<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*> const&) [157]
-----------------------------------------------
                0.00    0.00      69/231610      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [387]
                0.00    0.00      74/231610      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [384]
                0.00    0.00  231467/231610      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [71]
[158]    0.0    0.00    0.00  231610         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator() [158]
-----------------------------------------------
                0.00    0.00  231536/231536      std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::allocate(std::allocator<std::_List_node<Polygon*> >&, unsigned long) [164]
[159]    0.0    0.00    0.00  231536         __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::allocate(unsigned long, void const*) [159]
                0.00    0.00  231536/231536      __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::max_size() const [160]
-----------------------------------------------
                0.00    0.00  231536/231536      __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::allocate(unsigned long, void const*) [159]
[160]    0.0    0.00    0.00  231536         __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::max_size() const [160]
-----------------------------------------------
                0.00    0.00      69/231536      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [387]
                0.00    0.00  231467/231536      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [71]
[161]    0.0    0.00    0.00  231536         std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*) [161]
                0.00    0.00  231536/231536      std::allocator<std::_List_node<Polygon*> >* std::__addressof<std::allocator<std::_List_node<Polygon*> > >(std::allocator<std::_List_node<Polygon*> >&) [167]
-----------------------------------------------
                0.00    0.00      69/231536      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [387]
                0.00    0.00  231467/231536      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [71]
[162]    0.0    0.00    0.00  231536         std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::~__allocated_ptr() [162]
-----------------------------------------------
                0.00    0.00      69/231536      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [387]
                0.00    0.00  231467/231536      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [71]
[163]    0.0    0.00    0.00  231536         std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::operator=(decltype(nullptr)) [163]
-----------------------------------------------
                0.00    0.00  231536/231536      std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node() [165]
[164]    0.0    0.00    0.00  231536         std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::allocate(std::allocator<std::_List_node<Polygon*> >&, unsigned long) [164]
                0.00    0.00  231536/231536      __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::allocate(unsigned long, void const*) [159]
-----------------------------------------------
                0.00    0.00      69/231536      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [387]
                0.00    0.00  231467/231536      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [71]
[165]    0.0    0.00    0.00  231536         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node() [165]
                0.00    0.00  231536/231536      std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::allocate(std::allocator<std::_List_node<Polygon*> >&, unsigned long) [164]
-----------------------------------------------
                0.00    0.00      69/231536      std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [388]
                0.00    0.00  231467/231536      void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&) [72]
[166]    0.0    0.00    0.00  231536         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_inc_size(unsigned long) [166]
-----------------------------------------------
                0.00    0.00  231536/231536      std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*) [161]
[167]    0.0    0.00    0.00  231536         std::allocator<std::_List_node<Polygon*> >* std::__addressof<std::allocator<std::_List_node<Polygon*> > >(std::allocator<std::_List_node<Polygon*> >&) [167]
-----------------------------------------------
                0.00    0.00      18/105038      Individual** std::__niter_base<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [390]
                0.00    0.00   10000/105038      bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [323]
                0.00    0.00   10000/105038      bool __gnu_cxx::operator< <Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [324]
                0.00    0.00   20008/105038      bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [292]
                0.00    0.00   25006/105038      void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
                0.00    0.00   40006/105038      __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [240]
[168]    0.0    0.00    0.00  105038         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [168]
-----------------------------------------------
                0.00    0.00   17501/92519       Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [257]
                0.00    0.00   75018/92519       Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [218]
[169]    0.0    0.00    0.00   92519         Individual** std::__niter_base<Individual**>(Individual**) [169]
-----------------------------------------------
                0.00    0.00    5000/90013       GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [20]
                0.00    0.00   17500/90013       std::vector<Individual*, std::allocator<Individual*> >::_M_range_check(unsigned long) const [261]
                0.00    0.00   17501/90013       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
                0.00    0.00   50012/90013       std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [284]
[170]    0.0    0.00    0.00   90013         std::vector<Individual*, std::allocator<Individual*> >::size() const [170]
-----------------------------------------------
                0.00    0.00    5000/82511       std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [338]
                0.00    0.00   17501/82511       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
                0.00    0.00   22501/82511       std::vector<Individual*, std::allocator<Individual*> >::~vector() [238]
                0.00    0.00   37509/82511       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
[171]    0.0    0.00    0.00   82511         std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [171]
-----------------------------------------------
                0.00    0.00   14332/78132       void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
                0.00    0.00   14332/78132       __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::difference_type __gnu_cxx::operator-<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [305]
                0.00    0.00   49468/78132       bool __gnu_cxx::operator!=<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [223]
[172]    0.0    0.00    0.00   78132         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const [172]
-----------------------------------------------
                0.00    0.00   25006/55010       std::allocator_traits<std::allocator<Individual*> >::max_size(std::allocator<Individual*> const&) [215]
                0.00    0.00   30004/55010       __gnu_cxx::new_allocator<Individual*>::allocate(unsigned long, void const*) [199]
[173]    0.0    0.00    0.00   55010         __gnu_cxx::new_allocator<Individual*>::max_size() const [173]
-----------------------------------------------
                0.00    0.00   50012/50012       decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>) [176]
[174]    0.0    0.00    0.00   50012         std::move_iterator<Individual**>::base() const [174]
-----------------------------------------------
                0.00    0.00   50012/50012       std::move_iterator<Individual**> std::__make_move_if_noexcept_iterator<Individual*, std::move_iterator<Individual**> >(Individual**) [178]
[175]    0.0    0.00    0.00   50012         std::move_iterator<Individual**>::move_iterator(Individual**) [175]
-----------------------------------------------
                0.00    0.00   50012/50012       Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [222]
[176]    0.0    0.00    0.00   50012         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>) [176]
                0.00    0.00   50012/50012       std::move_iterator<Individual**>::base() const [174]
                0.00    0.00   50012/50012       Individual** std::__miter_base<Individual**>(Individual**) [177]
-----------------------------------------------
                0.00    0.00   50012/50012       decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>) [176]
[177]    0.0    0.00    0.00   50012         Individual** std::__miter_base<Individual**>(Individual**) [177]
-----------------------------------------------
                0.00    0.00   50012/50012       Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&) [221]
[178]    0.0    0.00    0.00   50012         std::move_iterator<Individual**> std::__make_move_if_noexcept_iterator<Individual*, std::move_iterator<Individual**> >(Individual**) [178]
                0.00    0.00   50012/50012       std::move_iterator<Individual**>::move_iterator(Individual**) [175]
-----------------------------------------------
                0.00    0.00    2500/45007       std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const [336]
                0.00    0.00   17501/45007       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
                0.00    0.00   25006/45007       std::vector<Individual*, std::allocator<Individual*> >::max_size() const [213]
[179]    0.0    0.00    0.00   45007         std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const [179]
-----------------------------------------------
                0.00    0.00   45000/45000       std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual**> >, std::is_move_constructible<Individual**>, std::is_move_assignable<Individual**> >::value, void>::type std::swap<Individual**>(Individual**&, Individual**&) [271]
[180]    0.0    0.00    0.00   45000         std::remove_reference<Individual**&>::type&& std::move<Individual**&>(Individual**&) [180]
-----------------------------------------------
                0.00    0.00   42996/42996       Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [278]
[181]    0.0    0.00    0.00   42996         Polygon** std::__niter_base<Polygon**>(Polygon**) [181]
-----------------------------------------------
                0.00    0.00   42502/42502       std::allocator<Individual*>::~allocator() [183]
[182]    0.0    0.00    0.00   42502         __gnu_cxx::new_allocator<Individual*>::~new_allocator() [182]
-----------------------------------------------
                0.00    0.00    2500/42502       std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [338]
                0.00    0.00   17501/42502       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
                0.00    0.00   22501/42502       std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::~_Vector_impl() [236]
[183]    0.0    0.00    0.00   42502         std::allocator<Individual*>::~allocator() [183]
                0.00    0.00   42502/42502       __gnu_cxx::new_allocator<Individual*>::~new_allocator() [182]
-----------------------------------------------
                0.00    0.00   40002/40002       std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [185]
[184]    0.0    0.00    0.00   40002         __gnu_cxx::new_allocator<Individual*>::new_allocator(__gnu_cxx::new_allocator<Individual*> const&) [184]
-----------------------------------------------
                0.00    0.00    2500/40002       std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const [336]
                0.00    0.00   17501/40002       std::allocator_traits<std::allocator<Individual*> >::select_on_container_copy_construction(std::allocator<Individual*> const&) [253]
                0.00    0.00   20001/40002       std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&) [241]
[185]    0.0    0.00    0.00   40002         std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [185]
                0.00    0.00   40002/40002       __gnu_cxx::new_allocator<Individual*>::new_allocator(__gnu_cxx::new_allocator<Individual*> const&) [184]
-----------------------------------------------
                0.00    0.00       6/37520       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [403]
                0.00    0.00    2506/37520       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator+(long) const [333]
                0.00    0.00   17504/37520       std::vector<Individual*, std::allocator<Individual*> >::begin() [246]
                0.00    0.00   17504/37520       std::vector<Individual*, std::allocator<Individual*> >::end() [245]
[186]    0.0    0.00    0.00   37520         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [186]
-----------------------------------------------
                0.00    0.00   12503/37509       void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&) [285]
                0.00    0.00   12503/37509       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
                0.00    0.00   12503/37509       void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&) [283]
[187]    0.0    0.00    0.00   37509         Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&) [187]
-----------------------------------------------
                0.00    0.00   35004/35004       void std::_Destroy<Individual**>(Individual**, Individual**) [190]
[188]    0.0    0.00    0.00   35004         void std::_Destroy_aux<true>::__destroy<Individual**>(Individual**, Individual**) [188]
-----------------------------------------------
                0.00    0.00   12503/35004       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
                0.00    0.00   22501/35004       std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base() [237]
[189]    0.0    0.00    0.00   35004         std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long) [189]
                0.00    0.00   27503/27503       std::allocator_traits<std::allocator<Individual*> >::deallocate(std::allocator<Individual*>&, Individual**, unsigned long) [212]
-----------------------------------------------
                0.00    0.00   35004/35004       void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&) [191]
[190]    0.0    0.00    0.00   35004         void std::_Destroy<Individual**>(Individual**, Individual**) [190]
                0.00    0.00   35004/35004       void std::_Destroy_aux<true>::__destroy<Individual**>(Individual**, Individual**) [188]
-----------------------------------------------
                0.00    0.00   12503/35004       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
                0.00    0.00   22501/35004       std::vector<Individual*, std::allocator<Individual*> >::~vector() [238]
[191]    0.0    0.00    0.00   35004         void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&) [191]
                0.00    0.00   35004/35004       void std::_Destroy<Individual**>(Individual**, Individual**) [190]
-----------------------------------------------
                0.00    0.00   17501/35002       std::vector<Individual*, std::allocator<Individual*> >::begin() const [249]
                0.00    0.00   17501/35002       std::vector<Individual*, std::allocator<Individual*> >::end() const [248]
[192]    0.0    0.00    0.00   35002         __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual* const* const&) [192]
-----------------------------------------------
                0.00    0.00   35002/35002       Individual* const* std::__niter_base<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >) [195]
[193]    0.0    0.00    0.00   35002         __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::base() const [193]
-----------------------------------------------
                0.00    0.00   35002/35002       Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [260]
[194]    0.0    0.00    0.00   35002         __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >) [194]
-----------------------------------------------
                0.00    0.00   35002/35002       Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [257]
[195]    0.0    0.00    0.00   35002         Individual* const* std::__niter_base<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >) [195]
                0.00    0.00   35002/35002       __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::base() const [193]
-----------------------------------------------
                0.00    0.00   33198/33198       double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
[196]    0.0    0.00    0.00   33198         std::uniform_real_distribution<double>::param_type::a() const [196]
-----------------------------------------------
                0.00    0.00   33198/33198       double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [19]
[197]    0.0    0.00    0.00   33198         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min() [197]
-----------------------------------------------
                0.00    0.00       3/31815       GeneticAlgorithm::clean_population() [99]
                0.00    0.00      12/31815       void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
                0.00    0.00    5000/31815       void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [49]
                0.00    0.00    5600/31815       bool __gnu_cxx::__ops::_Val_less_iter::operator()<Individual*, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(Individual*&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [311]
                0.00    0.00   10000/31815       bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [325]
                0.00    0.00   11200/31815       void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [329]
[198]    0.0    0.00    0.00   31815         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [198]
-----------------------------------------------
                0.00    0.00   30004/30004       std::allocator_traits<std::allocator<Individual*> >::allocate(std::allocator<Individual*>&, unsigned long) [201]
[199]    0.0    0.00    0.00   30004         __gnu_cxx::new_allocator<Individual*>::allocate(unsigned long, void const*) [199]
                0.00    0.00   30004/55010       __gnu_cxx::new_allocator<Individual*>::max_size() const [173]
-----------------------------------------------
                0.00    0.00   12503/30004       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
                0.00    0.00   17501/30004       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_create_storage(unsigned long) [251]
[200]    0.0    0.00    0.00   30004         std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long) [200]
                0.00    0.00   30004/30004       std::allocator_traits<std::allocator<Individual*> >::allocate(std::allocator<Individual*>&, unsigned long) [201]
-----------------------------------------------
                0.00    0.00   30004/30004       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long) [200]
[201]    0.0    0.00    0.00   30004         std::allocator_traits<std::allocator<Individual*> >::allocate(std::allocator<Individual*>&, unsigned long) [201]
                0.00    0.00   30004/30004       __gnu_cxx::new_allocator<Individual*>::allocate(unsigned long, void const*) [199]
-----------------------------------------------
                0.00    0.00     725/29389       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
                0.00    0.00   28664/29389       std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [306]
[202]    0.0    0.00    0.00   29389         std::vector<Polygon*, std::allocator<Polygon*> >::size() const [202]
-----------------------------------------------
                0.00    0.00   28664/28664       decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>) [205]
[203]    0.0    0.00    0.00   28664         std::move_iterator<Polygon**>::base() const [203]
-----------------------------------------------
                0.00    0.00   28664/28664       std::move_iterator<Polygon**> std::__make_move_if_noexcept_iterator<Polygon*, std::move_iterator<Polygon**> >(Polygon**) [207]
[204]    0.0    0.00    0.00   28664         std::move_iterator<Polygon**>::move_iterator(Polygon**) [204]
-----------------------------------------------
                0.00    0.00   28664/28664       Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [282]
[205]    0.0    0.00    0.00   28664         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>) [205]
                0.00    0.00   28664/28664       Polygon** std::__miter_base<Polygon**>(Polygon**) [206]
                0.00    0.00   28664/28664       std::move_iterator<Polygon**>::base() const [203]
-----------------------------------------------
                0.00    0.00   28664/28664       decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>) [205]
[206]    0.0    0.00    0.00   28664         Polygon** std::__miter_base<Polygon**>(Polygon**) [206]
-----------------------------------------------
                0.00    0.00   28664/28664       Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&) [281]
[207]    0.0    0.00    0.00   28664         std::move_iterator<Polygon**> std::__make_move_if_noexcept_iterator<Polygon*, std::move_iterator<Polygon**> >(Polygon**) [207]
                0.00    0.00   28664/28664       std::move_iterator<Polygon**>::move_iterator(Polygon**) [204]
-----------------------------------------------
                0.00    0.00     219/28639       Colour::random_alpha() [86]
                0.00    0.00    1873/28639       Colour::random_colour() [38]
                0.00    0.00   10167/28639       utils::next_int(int) [11]
                0.00    0.00   16380/28639       utils::random() [9]
[208]    0.0    0.00    0.00   28639         std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [208]
-----------------------------------------------
                0.00    0.00     219/28639       Colour::random_alpha() [86]
                0.00    0.00    1873/28639       Colour::random_colour() [38]
                0.00    0.00   10167/28639       utils::next_int(int) [11]
                0.00    0.00   16380/28639       utils::random() [9]
[209]    0.0    0.00    0.00   28639         std::random_device::~random_device() [209]
-----------------------------------------------
                0.00    0.00     219/28639       Colour::random_alpha() [86]
                0.00    0.00    1873/28639       Colour::random_colour() [38]
                0.00    0.00   10167/28639       utils::next_int(int) [11]
                0.00    0.00   16380/28639       utils::random() [9]
[210]    0.0    0.00    0.00   28639         std::random_device::operator()() [210]
-----------------------------------------------
                0.00    0.00   27503/27503       std::allocator_traits<std::allocator<Individual*> >::deallocate(std::allocator<Individual*>&, Individual**, unsigned long) [212]
[211]    0.0    0.00    0.00   27503         __gnu_cxx::new_allocator<Individual*>::deallocate(Individual**, unsigned long) [211]
-----------------------------------------------
                0.00    0.00   27503/27503       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long) [189]
[212]    0.0    0.00    0.00   27503         std::allocator_traits<std::allocator<Individual*> >::deallocate(std::allocator<Individual*>&, Individual**, unsigned long) [212]
                0.00    0.00   27503/27503       __gnu_cxx::new_allocator<Individual*>::deallocate(Individual**, unsigned long) [211]
-----------------------------------------------
                0.00    0.00   25006/25006       std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [284]
[213]    0.0    0.00    0.00   25006         std::vector<Individual*, std::allocator<Individual*> >::max_size() const [213]
                0.00    0.00   25006/45007       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const [179]
                0.00    0.00   25006/25006       std::allocator_traits<std::allocator<Individual*> >::max_size(std::allocator<Individual*> const&) [215]
-----------------------------------------------
                0.00    0.00   25006/25006       Individual** std::__copy_move_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [217]
[214]    0.0    0.00    0.00   25006         Individual** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [214]
-----------------------------------------------
                0.00    0.00   25006/25006       std::vector<Individual*, std::allocator<Individual*> >::max_size() const [213]
[215]    0.0    0.00    0.00   25006         std::allocator_traits<std::allocator<Individual*> >::max_size(std::allocator<Individual*> const&) [215]
                0.00    0.00   25006/55010       __gnu_cxx::new_allocator<Individual*>::max_size() const [173]
-----------------------------------------------
                0.00    0.00   25006/25006       Individual** std::uninitialized_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [219]
[216]    0.0    0.00    0.00   25006         Individual** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [216]
                0.00    0.00   25006/25006       Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [222]
-----------------------------------------------
                0.00    0.00   25006/25006       Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [218]
[217]    0.0    0.00    0.00   25006         Individual** std::__copy_move_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [217]
                0.00    0.00   25006/25006       Individual** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [214]
-----------------------------------------------
                0.00    0.00   25006/25006       Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [222]
[218]    0.0    0.00    0.00   25006         Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [218]
                0.00    0.00   75018/92519       Individual** std::__niter_base<Individual**>(Individual**) [169]
                0.00    0.00   25006/25006       Individual** std::__copy_move_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [217]
-----------------------------------------------
                0.00    0.00   25006/25006       Individual** std::__uninitialized_copy_a<std::move_iterator<Individual**>, Individual**, Individual*>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**, std::allocator<Individual*>&) [220]
[219]    0.0    0.00    0.00   25006         Individual** std::uninitialized_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [219]
                0.00    0.00   25006/25006       Individual** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [216]
-----------------------------------------------
                0.00    0.00   25006/25006       Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&) [221]
[220]    0.0    0.00    0.00   25006         Individual** std::__uninitialized_copy_a<std::move_iterator<Individual**>, Individual**, Individual*>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**, std::allocator<Individual*>&) [220]
                0.00    0.00   25006/25006       Individual** std::uninitialized_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [219]
-----------------------------------------------
                0.00    0.00   25006/25006       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
[221]    0.0    0.00    0.00   25006         Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&) [221]
                0.00    0.00   50012/50012       std::move_iterator<Individual**> std::__make_move_if_noexcept_iterator<Individual*, std::move_iterator<Individual**> >(Individual**) [178]
                0.00    0.00   25006/25006       Individual** std::__uninitialized_copy_a<std::move_iterator<Individual**>, Individual**, Individual*>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**, std::allocator<Individual*>&) [220]
-----------------------------------------------
                0.00    0.00   25006/25006       Individual** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [216]
[222]    0.0    0.00    0.00   25006         Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [222]
                0.00    0.00   50012/50012       decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>) [176]
                0.00    0.00   25006/25006       Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [218]
-----------------------------------------------
                0.00    0.00   24734/24734       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
[223]    0.0    0.00    0.00   24734         bool __gnu_cxx::operator!=<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [223]
                0.00    0.00   49468/78132       __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const [172]
-----------------------------------------------
                0.00    0.00   24080/24080       int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [35]
[224]    0.0    0.00    0.00   24080         std::uniform_int_distribution<int>::param_type::a() const [224]
-----------------------------------------------
                0.00    0.00   23284/23284       void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [228]
[225]    0.0    0.00    0.00   23284         void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [225]
                0.00    0.00   23284/1002886     Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [124]
                0.00    0.00   23284/1107856     operator new(unsigned long, void*) [120]
-----------------------------------------------
                0.00    0.00   23284/23284       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
[226]    0.0    0.00    0.00   23284         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator++() [226]
-----------------------------------------------
                0.00    0.00   23284/23284       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
[227]    0.0    0.00    0.00   23284         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator*() const [227]
-----------------------------------------------
                0.00    0.00    7166/23284       void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
                0.00    0.00   16118/23284       void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [229]
[228]    0.0    0.00    0.00   23284         void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [228]
                0.00    0.00   23284/1002886     Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [124]
                0.00    0.00   23284/23284       void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [225]
-----------------------------------------------
                0.00    0.00   23284/23284       std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [230]
[229]    0.0    0.00    0.00   23284         void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [229]
                0.00    0.00   23284/1002886     Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [124]
                0.00    0.00   16118/23284       void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [228]
                0.00    0.00    7166/8616        std::vector<Polygon*, std::allocator<Polygon*> >::end() [295]
                0.00    0.00    7166/7166        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
-----------------------------------------------
                0.00    0.00   23284/23284       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
[230]    0.0    0.00    0.00   23284         std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [230]
                0.00    0.00   23284/254751      std::remove_reference<Polygon*&>::type&& std::move<Polygon*&>(Polygon*&) [153]
                0.00    0.00   23284/23284       void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [229]
-----------------------------------------------
                0.00    0.00   23284/23284       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
[231]    0.0    0.00    0.00   23284         std::vector<Polygon*, std::allocator<Polygon*> >::operator[](unsigned long) [231]
-----------------------------------------------
                0.00    0.00   23182/23182       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_node_count() const [233]
[232]    0.0    0.00    0.00   23182         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_size() const [232]
-----------------------------------------------
                0.00    0.00   23182/23182       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const [234]
[233]    0.0    0.00    0.00   23182         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_node_count() const [233]
                0.00    0.00   23182/23182       std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_size() const [232]
-----------------------------------------------
                0.00    0.00    3489/23182       Individual::mutate() [10]
                0.00    0.00   19693/23182       Individual::get_len_dna() [242]
[234]    0.0    0.00    0.00   23182         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const [234]
                0.00    0.00   23182/23182       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_node_count() const [233]
-----------------------------------------------
                0.00    0.00    1450/22948       std::vector<Polygon*, std::allocator<Polygon*> >::~vector() [360]
                0.00    0.00   21498/22948       void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
[235]    0.0    0.00    0.00   22948         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() [235]
-----------------------------------------------
                0.00    0.00   22501/22501       std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base() [237]
[236]    0.0    0.00    0.00   22501         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::~_Vector_impl() [236]
                0.00    0.00   22501/42502       std::allocator<Individual*>::~allocator() [183]
-----------------------------------------------
                0.00    0.00   22501/22501       std::vector<Individual*, std::allocator<Individual*> >::~vector() [238]
[237]    0.0    0.00    0.00   22501         std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base() [237]
                0.00    0.00   22501/35004       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long) [189]
                0.00    0.00   22501/22501       std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::~_Vector_impl() [236]
-----------------------------------------------
                0.00    0.00       1/22501       GeneticAlgorithm::clean_population() [99]
                0.00    0.00    2500/22501       std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [338]
                0.00    0.00   20000/22501       GeneticAlgorithm::evolve(int) [3]
[238]    0.0    0.00    0.00   22501         std::vector<Individual*, std::allocator<Individual*> >::~vector() [238]
                0.00    0.00   22501/82511       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [171]
                0.00    0.00   22501/22501       std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base() [237]
                0.00    0.00   22501/35004       void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&) [191]
-----------------------------------------------
                0.00    0.00    7166/21498       __gnu_cxx::new_allocator<Polygon*>::allocate(unsigned long, void const*) [304]
                0.00    0.00   14332/21498       std::allocator_traits<std::allocator<Polygon*> >::max_size(std::allocator<Polygon*> const&) [275]
[239]    0.0    0.00    0.00   21498         __gnu_cxx::new_allocator<Polygon*>::max_size() const [239]
-----------------------------------------------
                0.00    0.00    2500/20003       void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [350]
                0.00    0.00    2500/20003       void std::__introsort_loop<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [343]
                0.00    0.00    2500/20003       void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [346]
                0.00    0.00   12503/20003       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
[240]    0.0    0.00    0.00   20003         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [240]
                0.00    0.00   40006/105038      __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [168]
-----------------------------------------------
                0.00    0.00    2500/20001       std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(std::allocator<Individual*> const&) [337]
                0.00    0.00   17501/20001       std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&) [252]
[241]    0.0    0.00    0.00   20001         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&) [241]
                0.00    0.00   20001/40002       std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [185]
-----------------------------------------------
                0.00    0.00      40/19693       Individual::Individual(Individual*) [90]
                0.00    0.00    2500/19693       GeneticAlgorithm::evolve(int) [3]
                0.00    0.00    3550/19693       GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [12]
                0.00    0.00   13603/19693       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
[242]    0.0    0.00    0.00   19693         Individual::get_len_dna() [242]
                0.00    0.00   19693/23182       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const [234]
-----------------------------------------------
                0.00    0.00    7166/19669       std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [306]
                0.00    0.00   12503/19669       std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [284]
[243]    0.0    0.00    0.00   19669         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [243]
-----------------------------------------------
                0.00    0.00      12/18106       void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
                0.00    0.00    7500/18106       std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual*> >, std::is_move_constructible<Individual*>, std::is_move_assignable<Individual*> >::value, void>::type std::swap<Individual*>(Individual*&, Individual*&) [74]
                0.00    0.00   10594/18106       void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [329]
[244]    0.0    0.00    0.00   18106         std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&) [244]
-----------------------------------------------
                0.00    0.00       1/17504       GeneticAlgorithm::clean_population() [99]
                0.00    0.00    5000/17504       sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [46]
                0.00    0.00   12503/17504       std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [287]
[245]    0.0    0.00    0.00   17504         std::vector<Individual*, std::allocator<Individual*> >::end() [245]
                0.00    0.00   17504/37520       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [186]
-----------------------------------------------
                0.00    0.00       1/17504       GeneticAlgorithm::clean_population() [99]
                0.00    0.00    5000/17504       sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [46]
                0.00    0.00   12503/17504       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
[246]    0.0    0.00    0.00   17504         std::vector<Individual*, std::allocator<Individual*> >::begin() [246]
                0.00    0.00   17504/37520       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [186]
-----------------------------------------------
                0.00    0.00   17501/17501       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
[247]    0.0    0.00    0.00   17501         __gnu_cxx::__alloc_traits<std::allocator<Individual*>, Individual*>::_S_select_on_copy(std::allocator<Individual*> const&) [247]
                0.00    0.00   17501/17501       std::allocator_traits<std::allocator<Individual*> >::select_on_container_copy_construction(std::allocator<Individual*> const&) [253]
-----------------------------------------------
                0.00    0.00   17501/17501       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
[248]    0.0    0.00    0.00   17501         std::vector<Individual*, std::allocator<Individual*> >::end() const [248]
                0.00    0.00   17501/35002       __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual* const* const&) [192]
-----------------------------------------------
                0.00    0.00   17501/17501       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
[249]    0.0    0.00    0.00   17501         std::vector<Individual*, std::allocator<Individual*> >::begin() const [249]
                0.00    0.00   17501/35002       __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual* const* const&) [192]
-----------------------------------------------
                0.00    0.00   17501/17501       Individual** std::__copy_move_a<false, Individual* const*, Individual**>(Individual* const*, Individual* const*, Individual**) [256]
[250]    0.0    0.00    0.00   17501         Individual** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [250]
-----------------------------------------------
                0.00    0.00   17501/17501       std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&) [252]
[251]    0.0    0.00    0.00   17501         std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_create_storage(unsigned long) [251]
                0.00    0.00   17501/30004       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long) [200]
-----------------------------------------------
                0.00    0.00   17501/17501       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
[252]    0.0    0.00    0.00   17501         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&) [252]
                0.00    0.00   17501/20001       std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&) [241]
                0.00    0.00   17501/17501       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_create_storage(unsigned long) [251]
-----------------------------------------------
                0.00    0.00   17501/17501       __gnu_cxx::__alloc_traits<std::allocator<Individual*>, Individual*>::_S_select_on_copy(std::allocator<Individual*> const&) [247]
[253]    0.0    0.00    0.00   17501         std::allocator_traits<std::allocator<Individual*> >::select_on_container_copy_construction(std::allocator<Individual*> const&) [253]
                0.00    0.00   17501/40002       std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [185]
-----------------------------------------------
                0.00    0.00   17501/17501       Individual** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [258]
[254]    0.0    0.00    0.00   17501         Individual** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [254]
                0.00    0.00   17501/17501       Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [260]
-----------------------------------------------
                0.00    0.00    2500/17501       GeneticAlgorithm::evolve(int) [3]
                0.00    0.00   15001/17501       Population::get_individuals() [270]
[255]    0.0    0.00    0.00   17501         std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
                0.00    0.00   17501/45007       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const [179]
                0.00    0.00   17501/17501       __gnu_cxx::__alloc_traits<std::allocator<Individual*>, Individual*>::_S_select_on_copy(std::allocator<Individual*> const&) [247]
                0.00    0.00   17501/90013       std::vector<Individual*, std::allocator<Individual*> >::size() const [170]
                0.00    0.00   17501/17501       std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&) [252]
                0.00    0.00   17501/42502       std::allocator<Individual*>::~allocator() [183]
                0.00    0.00   17501/82511       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [171]
                0.00    0.00   17501/17501       std::vector<Individual*, std::allocator<Individual*> >::end() const [248]
                0.00    0.00   17501/17501       std::vector<Individual*, std::allocator<Individual*> >::begin() const [249]
                0.00    0.00   17501/17501       Individual** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, Individual*>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, std::allocator<Individual*>&) [259]
-----------------------------------------------
                0.00    0.00   17501/17501       Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [257]
[256]    0.0    0.00    0.00   17501         Individual** std::__copy_move_a<false, Individual* const*, Individual**>(Individual* const*, Individual* const*, Individual**) [256]
                0.00    0.00   17501/17501       Individual** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [250]
-----------------------------------------------
                0.00    0.00   17501/17501       Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [260]
[257]    0.0    0.00    0.00   17501         Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [257]
                0.00    0.00   35002/35002       Individual* const* std::__niter_base<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >) [195]
                0.00    0.00   17501/92519       Individual** std::__niter_base<Individual**>(Individual**) [169]
                0.00    0.00   17501/17501       Individual** std::__copy_move_a<false, Individual* const*, Individual**>(Individual* const*, Individual* const*, Individual**) [256]
-----------------------------------------------
                0.00    0.00   17501/17501       Individual** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, Individual*>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, std::allocator<Individual*>&) [259]
[258]    0.0    0.00    0.00   17501         Individual** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [258]
                0.00    0.00   17501/17501       Individual** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [254]
-----------------------------------------------
                0.00    0.00   17501/17501       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
[259]    0.0    0.00    0.00   17501         Individual** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, Individual*>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, std::allocator<Individual*>&) [259]
                0.00    0.00   17501/17501       Individual** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [258]
-----------------------------------------------
                0.00    0.00   17501/17501       Individual** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [254]
[260]    0.0    0.00    0.00   17501         Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [260]
                0.00    0.00   35002/35002       __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >) [194]
                0.00    0.00   17501/17501       Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [257]
-----------------------------------------------
                0.00    0.00   17500/17500       std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [262]
[261]    0.0    0.00    0.00   17500         std::vector<Individual*, std::allocator<Individual*> >::_M_range_check(unsigned long) const [261]
                0.00    0.00   17500/90013       std::vector<Individual*, std::allocator<Individual*> >::size() const [170]
-----------------------------------------------
                0.00    0.00    5000/17500       GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [20]
                0.00    0.00   12500/17500       GeneticAlgorithm::evolve(int) [3]
[262]    0.0    0.00    0.00   17500         std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [262]
                0.00    0.00   17500/17500       std::vector<Individual*, std::allocator<Individual*> >::_M_range_check(unsigned long) const [261]
                0.00    0.00   17500/17500       std::vector<Individual*, std::allocator<Individual*> >::operator[](unsigned long) [263]
-----------------------------------------------
                0.00    0.00   17500/17500       std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [262]
[263]    0.0    0.00    0.00   17500         std::vector<Individual*, std::allocator<Individual*> >::operator[](unsigned long) [263]
-----------------------------------------------
                0.00    0.00    8616/17232       std::vector<Polygon*, std::allocator<Polygon*> >::begin() [296]
                0.00    0.00    8616/17232       std::vector<Polygon*, std::allocator<Polygon*> >::end() [295]
[264]    0.0    0.00    0.00   17232         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::__normal_iterator(Polygon** const&) [264]
-----------------------------------------------
                0.00    0.00   16599/16599       double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
[265]    0.0    0.00    0.00   16599         std::uniform_real_distribution<double>::param_type::b() const [265]
-----------------------------------------------
                0.00    0.00   16599/16599       std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [267]
[266]    0.0    0.00    0.00   16599         std::uniform_real_distribution<double>::param_type::param_type(double, double) [266]
-----------------------------------------------
                0.00    0.00     219/16599       Colour::random_alpha() [86]
                0.00    0.00   16380/16599       utils::random() [9]
[267]    0.0    0.00    0.00   16599         std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [267]
                0.00    0.00   16599/16599       std::uniform_real_distribution<double>::param_type::param_type(double, double) [266]
-----------------------------------------------
                0.00    0.00   16599/16599       double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
[268]    0.0    0.00    0.00   16599         std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [268]
-----------------------------------------------
                0.00    0.00   15044/15044       cv::Mat::Mat(int, int, int, void*, unsigned long) [302]
[269]    0.0    0.00    0.00   15044         cv::MatStep::operator[](int) [269]
-----------------------------------------------
                0.00    0.00       1/15001       GeneticAlgorithm::clean_population() [99]
                0.00    0.00   15000/15001       GeneticAlgorithm::evolve(int) [3]
[270]    0.0    0.00    0.00   15001         Population::get_individuals() [270]
                0.00    0.00   15001/17501       std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [255]
-----------------------------------------------
                0.00    0.00   15000/15000       std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl&) [326]
[271]    0.0    0.00    0.00   15000         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual**> >, std::is_move_constructible<Individual**>, std::is_move_assignable<Individual**> >::value, void>::type std::swap<Individual**>(Individual**&, Individual**&) [271]
                0.00    0.00   45000/45000       std::remove_reference<Individual**&>::type&& std::move<Individual**&>(Individual**&) [180]
-----------------------------------------------
                0.00    0.00   14332/14332       std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const [273]
[272]    0.0    0.00    0.00   14332         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() const [272]
-----------------------------------------------
                0.00    0.00   14332/14332       std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [306]
[273]    0.0    0.00    0.00   14332         std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const [273]
                0.00    0.00   14332/14332       std::allocator_traits<std::allocator<Polygon*> >::max_size(std::allocator<Polygon*> const&) [275]
                0.00    0.00   14332/14332       std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() const [272]
-----------------------------------------------
                0.00    0.00   14332/14332       Polygon** std::__copy_move_a<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [277]
[274]    0.0    0.00    0.00   14332         Polygon** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Polygon*>(Polygon* const*, Polygon* const*, Polygon**) [274]
-----------------------------------------------
                0.00    0.00   14332/14332       std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const [273]
[275]    0.0    0.00    0.00   14332         std::allocator_traits<std::allocator<Polygon*> >::max_size(std::allocator<Polygon*> const&) [275]
                0.00    0.00   14332/21498       __gnu_cxx::new_allocator<Polygon*>::max_size() const [239]
-----------------------------------------------
                0.00    0.00   14332/14332       Polygon** std::uninitialized_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [279]
[276]    0.0    0.00    0.00   14332         Polygon** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [276]
                0.00    0.00   14332/14332       Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [282]
-----------------------------------------------
                0.00    0.00   14332/14332       Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [278]
[277]    0.0    0.00    0.00   14332         Polygon** std::__copy_move_a<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [277]
                0.00    0.00   14332/14332       Polygon** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Polygon*>(Polygon* const*, Polygon* const*, Polygon**) [274]
-----------------------------------------------
                0.00    0.00   14332/14332       Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [282]
[278]    0.0    0.00    0.00   14332         Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [278]
                0.00    0.00   42996/42996       Polygon** std::__niter_base<Polygon**>(Polygon**) [181]
                0.00    0.00   14332/14332       Polygon** std::__copy_move_a<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [277]
-----------------------------------------------
                0.00    0.00   14332/14332       Polygon** std::__uninitialized_copy_a<std::move_iterator<Polygon**>, Polygon**, Polygon*>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**, std::allocator<Polygon*>&) [280]
[279]    0.0    0.00    0.00   14332         Polygon** std::uninitialized_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [279]
                0.00    0.00   14332/14332       Polygon** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [276]
-----------------------------------------------
                0.00    0.00   14332/14332       Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&) [281]
[280]    0.0    0.00    0.00   14332         Polygon** std::__uninitialized_copy_a<std::move_iterator<Polygon**>, Polygon**, Polygon*>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**, std::allocator<Polygon*>&) [280]
                0.00    0.00   14332/14332       Polygon** std::uninitialized_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [279]
-----------------------------------------------
                0.00    0.00   14332/14332       void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
[281]    0.0    0.00    0.00   14332         Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&) [281]
                0.00    0.00   28664/28664       std::move_iterator<Polygon**> std::__make_move_if_noexcept_iterator<Polygon*, std::move_iterator<Polygon**> >(Polygon**) [207]
                0.00    0.00   14332/14332       Polygon** std::__uninitialized_copy_a<std::move_iterator<Polygon**>, Polygon**, Polygon*>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**, std::allocator<Polygon*>&) [280]
-----------------------------------------------
                0.00    0.00   14332/14332       Polygon** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [276]
[282]    0.0    0.00    0.00   14332         Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [282]
                0.00    0.00   28664/28664       decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>) [205]
                0.00    0.00   14332/14332       Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [278]
-----------------------------------------------
                0.00    0.00   12503/12503       void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&) [285]
[283]    0.0    0.00    0.00   12503         void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&) [283]
                0.00    0.00   12503/37509       Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&) [187]
                0.00    0.00   12503/1107856     operator new(unsigned long, void*) [120]
-----------------------------------------------
                0.00    0.00   12503/12503       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
[284]    0.0    0.00    0.00   12503         std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [284]
                0.00    0.00   50012/90013       std::vector<Individual*, std::allocator<Individual*> >::size() const [170]
                0.00    0.00   25006/25006       std::vector<Individual*, std::allocator<Individual*> >::max_size() const [213]
                0.00    0.00   12503/19669       unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [243]
-----------------------------------------------
                0.00    0.00   12503/12503       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
[285]    0.0    0.00    0.00   12503         void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&) [285]
                0.00    0.00   12503/37509       Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&) [187]
                0.00    0.00   12503/12503       void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&) [283]
-----------------------------------------------
                0.00    0.00   12503/12503       std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [287]
[286]    0.0    0.00    0.00   12503         void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
                0.00    0.00   37509/82511       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [171]
                0.00    0.00   25006/105038      __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [168]
                0.00    0.00   25006/25006       Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&) [221]
                0.00    0.00   12503/12503       std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [284]
                0.00    0.00   12503/17504       std::vector<Individual*, std::allocator<Individual*> >::begin() [246]
                0.00    0.00   12503/20003       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [240]
                0.00    0.00   12503/30004       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long) [200]
                0.00    0.00   12503/37509       Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&) [187]
                0.00    0.00   12503/12503       void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&) [285]
                0.00    0.00   12503/35004       void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&) [191]
                0.00    0.00   12503/35004       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long) [189]
-----------------------------------------------
                0.00    0.00       3/12503       Population::Population(int, int, int, int, int) [40]
                0.00    0.00    5000/12503       GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [6]
                0.00    0.00    7500/12503       GeneticAlgorithm::evolve(int) [3]
[287]    0.0    0.00    0.00   12503         std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [287]
                0.00    0.00   12503/17504       std::vector<Individual*, std::allocator<Individual*> >::end() [245]
                0.00    0.00   12503/12503       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [286]
-----------------------------------------------
                0.00    0.00   12040/12040       int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [35]
[288]    0.0    0.00    0.00   12040         std::uniform_int_distribution<int>::param_type::b() const [288]
-----------------------------------------------
                0.00    0.00   12040/12040       std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [290]
[289]    0.0    0.00    0.00   12040         std::uniform_int_distribution<int>::param_type::param_type(int, int) [289]
-----------------------------------------------
                0.00    0.00    1873/12040       Colour::random_colour() [38]
                0.00    0.00   10167/12040       utils::next_int(int) [11]
[290]    0.0    0.00    0.00   12040         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [290]
                0.00    0.00   12040/12040       std::uniform_int_distribution<int>::param_type::param_type(int, int) [289]
-----------------------------------------------
                0.00    0.00    5000/10600       void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [48]
                0.00    0.00    5600/10600       void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [329]
[291]    0.0    0.00    0.00   10600         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator--() [291]
-----------------------------------------------
                0.00    0.00       4/10004       GeneticAlgorithm::clean_population() [99]
                0.00    0.00    2500/10004       void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [350]
                0.00    0.00    7500/10004       void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
[292]    0.0    0.00    0.00   10004         bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [292]
                0.00    0.00   20008/105038      __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [168]
-----------------------------------------------
                0.00    0.00    8616/8616        void std::_Destroy<Polygon**>(Polygon**, Polygon**) [297]
[293]    0.0    0.00    0.00    8616         void std::_Destroy_aux<true>::__destroy<Polygon**>(Polygon**, Polygon**) [293]
-----------------------------------------------
                0.00    0.00    1450/8616        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base() [358]
                0.00    0.00    7166/8616        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
[294]    0.0    0.00    0.00    8616         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long) [294]
                0.00    0.00    7166/7166        std::allocator_traits<std::allocator<Polygon*> >::deallocate(std::allocator<Polygon*>&, Polygon**, unsigned long) [308]
-----------------------------------------------
                0.00    0.00    1450/8616        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
                0.00    0.00    7166/8616        void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [229]
[295]    0.0    0.00    0.00    8616         std::vector<Polygon*, std::allocator<Polygon*> >::end() [295]
                0.00    0.00    8616/17232       __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::__normal_iterator(Polygon** const&) [264]
-----------------------------------------------
                0.00    0.00    1450/8616        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
                0.00    0.00    7166/8616        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
[296]    0.0    0.00    0.00    8616         std::vector<Polygon*, std::allocator<Polygon*> >::begin() [296]
                0.00    0.00    8616/17232       __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::__normal_iterator(Polygon** const&) [264]
-----------------------------------------------
                0.00    0.00    8616/8616        void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&) [298]
[297]    0.0    0.00    0.00    8616         void std::_Destroy<Polygon**>(Polygon**, Polygon**) [297]
                0.00    0.00    8616/8616        void std::_Destroy_aux<true>::__destroy<Polygon**>(Polygon**, Polygon**) [293]
-----------------------------------------------
                0.00    0.00    1450/8616        std::vector<Polygon*, std::allocator<Polygon*> >::~vector() [360]
                0.00    0.00    7166/8616        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
[298]    0.0    0.00    0.00    8616         void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&) [298]
                0.00    0.00    8616/8616        void std::_Destroy<Polygon**>(Polygon**, Polygon**) [297]
-----------------------------------------------
                0.00    0.00    7522/7522        cv::Mat::Mat(int, int, int, void*, unsigned long) [302]
[299]    0.0    0.00    0.00    7522         cv::MatStep::MatStep() [299]
-----------------------------------------------
                0.00    0.00    7522/7522        cv::Mat::Mat(int, int, int, void*, unsigned long) [302]
[300]    0.0    0.00    0.00    7522         cv::Mat::total() const [300]
-----------------------------------------------
                0.00    0.00       3/7503        GeneticAlgorithm::clean_population() [99]
                0.00    0.00    2500/7503        void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [48]
                0.00    0.00    5000/7503        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
[301]    0.0    0.00    0.00    7503         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++() [301]
-----------------------------------------------
                0.00    0.00    7501/7501        Individual::draw_CV(unsigned char*, int, int) [4]
[302]    0.0    0.00    0.00    7501         cv::Mat::Mat(int, int, int, void*, unsigned long) [302]
                0.00    0.00   15044/15044       cv::MatStep::operator[](int) [269]
                0.00    0.00    7522/354485      cv::MatSize::MatSize(int*) [145]
                0.00    0.00    7522/7522        cv::MatStep::MatStep() [299]
                0.00    0.00    7522/7522        cv::Mat::total() const [300]
-----------------------------------------------
                0.00    0.00    7166/7166        std::allocator_traits<std::allocator<Polygon*> >::deallocate(std::allocator<Polygon*>&, Polygon**, unsigned long) [308]
[303]    0.0    0.00    0.00    7166         __gnu_cxx::new_allocator<Polygon*>::deallocate(Polygon**, unsigned long) [303]
-----------------------------------------------
                0.00    0.00    7166/7166        std::allocator_traits<std::allocator<Polygon*> >::allocate(std::allocator<Polygon*>&, unsigned long) [309]
[304]    0.0    0.00    0.00    7166         __gnu_cxx::new_allocator<Polygon*>::allocate(unsigned long, void const*) [304]
                0.00    0.00    7166/21498       __gnu_cxx::new_allocator<Polygon*>::max_size() const [239]
-----------------------------------------------
                0.00    0.00    7166/7166        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
[305]    0.0    0.00    0.00    7166         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::difference_type __gnu_cxx::operator-<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [305]
                0.00    0.00   14332/78132       __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const [172]
-----------------------------------------------
                0.00    0.00    7166/7166        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
[306]    0.0    0.00    0.00    7166         std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [306]
                0.00    0.00   28664/29389       std::vector<Polygon*, std::allocator<Polygon*> >::size() const [202]
                0.00    0.00   14332/14332       std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const [273]
                0.00    0.00    7166/19669       unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [243]
-----------------------------------------------
                0.00    0.00    7166/7166        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
[307]    0.0    0.00    0.00    7166         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_allocate(unsigned long) [307]
                0.00    0.00    7166/7166        std::allocator_traits<std::allocator<Polygon*> >::allocate(std::allocator<Polygon*>&, unsigned long) [309]
-----------------------------------------------
                0.00    0.00    7166/7166        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long) [294]
[308]    0.0    0.00    0.00    7166         std::allocator_traits<std::allocator<Polygon*> >::deallocate(std::allocator<Polygon*>&, Polygon**, unsigned long) [308]
                0.00    0.00    7166/7166        __gnu_cxx::new_allocator<Polygon*>::deallocate(Polygon**, unsigned long) [303]
-----------------------------------------------
                0.00    0.00    7166/7166        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_allocate(unsigned long) [307]
[309]    0.0    0.00    0.00    7166         std::allocator_traits<std::allocator<Polygon*> >::allocate(std::allocator<Polygon*>&, unsigned long) [309]
                0.00    0.00    7166/7166        __gnu_cxx::new_allocator<Polygon*>::allocate(unsigned long, void const*) [304]
-----------------------------------------------
                0.00    0.00    7166/7166        void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [229]
[310]    0.0    0.00    0.00    7166         void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [310]
                0.00    0.00   21498/22948       std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() [235]
                0.00    0.00   14332/78132       __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const [172]
                0.00    0.00   14332/14332       Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&) [281]
                0.00    0.00    7166/7166        std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [306]
                0.00    0.00    7166/8616        std::vector<Polygon*, std::allocator<Polygon*> >::begin() [296]
                0.00    0.00    7166/7166        __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::difference_type __gnu_cxx::operator-<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [305]
                0.00    0.00    7166/7166        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_allocate(unsigned long) [307]
                0.00    0.00    7166/1002886     Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [124]
                0.00    0.00    7166/23284       void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [228]
                0.00    0.00    7166/8616        void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&) [298]
                0.00    0.00    7166/8616        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long) [294]
-----------------------------------------------
                0.00    0.00    5600/5600        void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [329]
[311]    0.0    0.00    0.00    5600         bool __gnu_cxx::__ops::_Val_less_iter::operator()<Individual*, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(Individual*&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [311]
                0.00    0.00    5600/31815       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [198]
-----------------------------------------------
                0.00    0.00    5004/5004        std::allocator<std::_List_node<Polygon*> >::allocator() [313]
[312]    0.0    0.00    0.00    5004         __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::new_allocator() [312]
-----------------------------------------------
                0.00    0.00    5004/5004        std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl() [314]
[313]    0.0    0.00    0.00    5004         std::allocator<std::_List_node<Polygon*> >::allocator() [313]
                0.00    0.00    5004/5004        __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::new_allocator() [312]
-----------------------------------------------
                0.00    0.00    5004/5004        std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_base() [315]
[314]    0.0    0.00    0.00    5004         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl() [314]
                0.00    0.00    5004/5004        std::allocator<std::_List_node<Polygon*> >::allocator() [313]
                0.00    0.00    5004/259824      std::__detail::_List_node_header::_List_node_header() [151]
-----------------------------------------------
                0.00    0.00    5004/5004        std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list() [316]
[315]    0.0    0.00    0.00    5004         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_base() [315]
                0.00    0.00    5004/5004        std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl() [314]
-----------------------------------------------
                0.00    0.00       1/5004        Individual::Individual(Individual*) [90]
                0.00    0.00       3/5004        Individual::Individual(int, int, int, int) [39]
                0.00    0.00    5000/5004        GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [6]
[316]    0.0    0.00    0.00    5004         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list() [316]
                0.00    0.00    5004/5004        std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_base() [315]
-----------------------------------------------
                0.00    0.00    5001/5001        std::allocator<Individual*>::allocator() [318]
[317]    0.0    0.00    0.00    5001         __gnu_cxx::new_allocator<Individual*>::new_allocator() [317]
-----------------------------------------------
                0.00    0.00    5001/5001        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl() [319]
[318]    0.0    0.00    0.00    5001         std::allocator<Individual*>::allocator() [318]
                0.00    0.00    5001/5001        __gnu_cxx::new_allocator<Individual*>::new_allocator() [317]
-----------------------------------------------
                0.00    0.00    5001/5001        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base() [320]
[319]    0.0    0.00    0.00    5001         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl() [319]
                0.00    0.00    5001/5001        std::allocator<Individual*>::allocator() [318]
-----------------------------------------------
                0.00    0.00    5001/5001        std::vector<Individual*, std::allocator<Individual*> >::vector() [321]
[320]    0.0    0.00    0.00    5001         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base() [320]
                0.00    0.00    5001/5001        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl() [319]
-----------------------------------------------
                0.00    0.00       1/5001        Population::Population(int, int, int, int, int) [40]
                0.00    0.00    2500/5001        GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [6]
                0.00    0.00    2500/5001        GeneticAlgorithm::evolve(int) [3]
[321]    0.0    0.00    0.00    5001         std::vector<Individual*, std::allocator<Individual*> >::vector() [321]
                0.00    0.00    5001/5001        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base() [320]
-----------------------------------------------
                0.00    0.00    5000/5000        GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [6]
[322]    0.0    0.00    0.00    5000         Individual::Individual(int, int, int, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [322]
-----------------------------------------------
                0.00    0.00    2500/5000        void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [48]
                0.00    0.00    2500/5000        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
[323]    0.0    0.00    0.00    5000         bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [323]
                0.00    0.00   10000/105038      __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [168]
-----------------------------------------------
                0.00    0.00    5000/5000        void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [48]
[324]    0.0    0.00    0.00    5000         bool __gnu_cxx::operator< <Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [324]
                0.00    0.00   10000/105038      __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [168]
-----------------------------------------------
                0.00    0.00    5000/5000        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
[325]    0.0    0.00    0.00    5000         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [325]
                0.00    0.00   10000/31815       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [198]
-----------------------------------------------
                0.00    0.00    5000/5000        std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [338]
[326]    0.0    0.00    0.00    5000         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl&) [326]
                0.00    0.00   15000/15000       std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual**> >, std::is_move_constructible<Individual**>, std::is_move_assignable<Individual**> >::value, void>::type std::swap<Individual**>(Individual**&, Individual**&) [271]
-----------------------------------------------
                0.00    0.00    2500/5000        Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >) [334]
                0.00    0.00    2500/5000        std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&) [340]
[327]    0.0    0.00    0.00    5000         std::remove_reference<std::vector<Individual*, std::allocator<Individual*> >&>::type&& std::move<std::vector<Individual*, std::allocator<Individual*> >&>(std::vector<Individual*, std::allocator<Individual*> >&) [327]
-----------------------------------------------
                0.00    0.00    4994/4994        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
[328]    0.0    0.00    0.00    4994         __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [328]
-----------------------------------------------
                0.00    0.00    4994/4994        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
[329]    0.0    0.00    0.00    4994         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [329]
                0.00    0.00   11200/31815       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [198]
                0.00    0.00   10594/18106       std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&) [244]
                0.00    0.00    5600/10600       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator--() [291]
                0.00    0.00    5600/5600        bool __gnu_cxx::__ops::_Val_less_iter::operator()<Individual*, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(Individual*&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [311]
-----------------------------------------------
                0.00    0.00     864/3720        void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&) [365]
                0.00    0.00     952/3720        std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
                0.00    0.00     952/3720        void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&) [363]
                0.00    0.00     952/3720        void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&) [362]
[330]    0.0    0.00    0.00    3720         Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&) [330]
-----------------------------------------------
                0.00    0.00     406/3037        Individual::mutate() [10]
                0.00    0.00    2631/3037        Polygon::move(int, int) [43]
[331]    0.0    0.00    0.00    3037         Point::set_x(int) [331]
-----------------------------------------------
                0.00    0.00     382/3013        Individual::mutate() [10]
                0.00    0.00    2631/3013        Polygon::move(int, int) [43]
[332]    0.0    0.00    0.00    3013         Point::set_y(int) [332]
-----------------------------------------------
                0.00    0.00    2506/2506        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
[333]    0.0    0.00    0.00    2506         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator+(long) const [333]
                0.00    0.00    2506/37520       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [186]
-----------------------------------------------
                0.00    0.00    2500/2500        GeneticAlgorithm::evolve(int) [3]
[334]    0.0    0.00    0.00    2500         Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >) [334]
                0.00    0.00    2500/5000        std::remove_reference<std::vector<Individual*, std::allocator<Individual*> >&>::type&& std::move<std::vector<Individual*, std::allocator<Individual*> >&>(std::vector<Individual*, std::allocator<Individual*> >&) [327]
                0.00    0.00    2500/2500        std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&) [340]
-----------------------------------------------
                0.00    0.00    2500/2500        void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [349]
[335]    0.0    0.00    0.00    2500         __gnu_cxx::__ops::__iter_less_iter() [335]
-----------------------------------------------
                0.00    0.00    2500/2500        std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [338]
[336]    0.0    0.00    0.00    2500         std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const [336]
                0.00    0.00    2500/45007       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const [179]
                0.00    0.00    2500/40002       std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [185]
-----------------------------------------------
                0.00    0.00    2500/2500        std::vector<Individual*, std::allocator<Individual*> >::vector(std::allocator<Individual*> const&) [339]
[337]    0.0    0.00    0.00    2500         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(std::allocator<Individual*> const&) [337]
                0.00    0.00    2500/20001       std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&) [241]
-----------------------------------------------
                0.00    0.00    2500/2500        std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&) [340]
[338]    0.0    0.00    0.00    2500         std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [338]
                0.00    0.00    5000/5000        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl&) [326]
                0.00    0.00    5000/82511       std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [171]
                0.00    0.00    2500/2500        std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const [336]
                0.00    0.00    2500/2500        std::vector<Individual*, std::allocator<Individual*> >::vector(std::allocator<Individual*> const&) [339]
                0.00    0.00    2500/42502       std::allocator<Individual*>::~allocator() [183]
                0.00    0.00    2500/2500        void std::__alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&) [341]
                0.00    0.00    2500/22501       std::vector<Individual*, std::allocator<Individual*> >::~vector() [238]
-----------------------------------------------
                0.00    0.00    2500/2500        std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [338]
[339]    0.0    0.00    0.00    2500         std::vector<Individual*, std::allocator<Individual*> >::vector(std::allocator<Individual*> const&) [339]
                0.00    0.00    2500/2500        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(std::allocator<Individual*> const&) [337]
-----------------------------------------------
                0.00    0.00    2500/2500        Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >) [334]
[340]    0.0    0.00    0.00    2500         std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&) [340]
                0.00    0.00    2500/5000        std::remove_reference<std::vector<Individual*, std::allocator<Individual*> >&>::type&& std::move<std::vector<Individual*, std::allocator<Individual*> >&>(std::vector<Individual*, std::allocator<Individual*> >&) [327]
                0.00    0.00    2500/2500        std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [338]
-----------------------------------------------
                0.00    0.00    2500/2500        std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [338]
[341]    0.0    0.00    0.00    2500         void std::__alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&) [341]
                0.00    0.00    2500/2500        void std::__do_alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&, std::integral_constant<bool, true>) [344]
-----------------------------------------------
                0.00    0.00    2500/2500        void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [346]
[342]    0.0    0.00    0.00    2500         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
                0.00    0.00    7500/10004       bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [292]
                0.00    0.00    5000/5000        bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [325]
                0.00    0.00    5000/7503        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++() [301]
                0.00    0.00    4994/4994        __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [328]
                0.00    0.00    4994/4994        void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [329]
                0.00    0.00    2506/2506        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator+(long) const [333]
                0.00    0.00    2500/5000        bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [323]
                0.00    0.00      12/31815       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [198]
                0.00    0.00      12/18106       std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&) [244]
                0.00    0.00       6/6           __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [401]
-----------------------------------------------
                0.00    0.00    2500/2500        void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [350]
[343]    0.0    0.00    0.00    2500         void std::__introsort_loop<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [343]
                0.00    0.00    2500/20003       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [240]
-----------------------------------------------
                0.00    0.00    2500/2500        void std::__alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&) [341]
[344]    0.0    0.00    0.00    2500         void std::__do_alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&, std::integral_constant<bool, true>) [344]
                0.00    0.00    2500/2500        std::remove_reference<std::allocator<Individual*>&>::type&& std::move<std::allocator<Individual*>&>(std::allocator<Individual*>&) [348]
-----------------------------------------------
                0.00    0.00    2500/2500        void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [47]
[345]    0.0    0.00    0.00    2500         std::iterator_traits<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [345]
-----------------------------------------------
                0.00    0.00    2500/2500        void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [350]
[346]    0.0    0.00    0.00    2500         void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [346]
                0.00    0.00    2500/20003       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [240]
                0.00    0.00    2500/2500        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
-----------------------------------------------
                0.00    0.00    2500/2500        void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [350]
[347]    0.0    0.00    0.00    2500         std::__lg(long) [347]
-----------------------------------------------
                0.00    0.00    2500/2500        void std::__do_alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&, std::integral_constant<bool, true>) [344]
[348]    0.0    0.00    0.00    2500         std::remove_reference<std::allocator<Individual*>&>::type&& std::move<std::allocator<Individual*>&>(std::allocator<Individual*>&) [348]
-----------------------------------------------
                0.00    0.00    2500/2500        sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [46]
[349]    0.0    0.00    0.00    2500         void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [349]
                0.00    0.00    2500/2500        __gnu_cxx::__ops::__iter_less_iter() [335]
                0.00    0.00    2500/2500        void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [350]
-----------------------------------------------
                0.00    0.00    2500/2500        void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [349]
[350]    0.0    0.00    0.00    2500         void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [350]
                0.00    0.00    2500/10004       bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [292]
                0.00    0.00    2500/20003       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [240]
                0.00    0.00    2500/2500        std::__lg(long) [347]
                0.00    0.00    2500/2500        void std::__introsort_loop<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [343]
                0.00    0.00    2500/2500        void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [346]
-----------------------------------------------
                0.00    0.00    1450/1450        std::allocator<Polygon*>::allocator() [353]
[351]    0.0    0.00    0.00    1450         __gnu_cxx::new_allocator<Polygon*>::new_allocator() [351]
-----------------------------------------------
                0.00    0.00    1450/1450        std::allocator<Polygon*>::~allocator() [354]
[352]    0.0    0.00    0.00    1450         __gnu_cxx::new_allocator<Polygon*>::~new_allocator() [352]
-----------------------------------------------
                0.00    0.00    1450/1450        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::_Vector_impl() [355]
[353]    0.0    0.00    0.00    1450         std::allocator<Polygon*>::allocator() [353]
                0.00    0.00    1450/1450        __gnu_cxx::new_allocator<Polygon*>::new_allocator() [351]
-----------------------------------------------
                0.00    0.00    1450/1450        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::~_Vector_impl() [356]
[354]    0.0    0.00    0.00    1450         std::allocator<Polygon*>::~allocator() [354]
                0.00    0.00    1450/1450        __gnu_cxx::new_allocator<Polygon*>::~new_allocator() [352]
-----------------------------------------------
                0.00    0.00    1450/1450        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_base() [357]
[355]    0.0    0.00    0.00    1450         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::_Vector_impl() [355]
                0.00    0.00    1450/1450        std::allocator<Polygon*>::allocator() [353]
-----------------------------------------------
                0.00    0.00    1450/1450        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base() [358]
[356]    0.0    0.00    0.00    1450         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::~_Vector_impl() [356]
                0.00    0.00    1450/1450        std::allocator<Polygon*>::~allocator() [354]
-----------------------------------------------
                0.00    0.00    1450/1450        std::vector<Polygon*, std::allocator<Polygon*> >::vector() [359]
[357]    0.0    0.00    0.00    1450         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_base() [357]
                0.00    0.00    1450/1450        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::_Vector_impl() [355]
-----------------------------------------------
                0.00    0.00    1450/1450        std::vector<Polygon*, std::allocator<Polygon*> >::~vector() [360]
[358]    0.0    0.00    0.00    1450         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base() [358]
                0.00    0.00    1450/8616        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long) [294]
                0.00    0.00    1450/1450        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::~_Vector_impl() [356]
-----------------------------------------------
                0.00    0.00    1450/1450        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
[359]    0.0    0.00    0.00    1450         std::vector<Polygon*, std::allocator<Polygon*> >::vector() [359]
                0.00    0.00    1450/1450        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_base() [357]
-----------------------------------------------
                0.00    0.00    1450/1450        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
[360]    0.0    0.00    0.00    1450         std::vector<Polygon*, std::allocator<Polygon*> >::~vector() [360]
                0.00    0.00    1450/22948       std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() [235]
                0.00    0.00    1450/1450        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base() [358]
                0.00    0.00    1450/8616        void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&) [298]
-----------------------------------------------
                0.00    0.00      88/952         Individual::mutate() [10]
                0.00    0.00     864/952         Polygon::random_polygon(int, int, int) [33]
[361]    0.0    0.00    0.00     952         Point::Point(int, int) [361]
-----------------------------------------------
                0.00    0.00     952/952         void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&) [363]
[362]    0.0    0.00    0.00     952         void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&) [362]
                0.00    0.00     952/3720        Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&) [330]
                0.00    0.00     952/1107856     operator new(unsigned long, void*) [120]
-----------------------------------------------
                0.00    0.00     952/952         std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
[363]    0.0    0.00    0.00     952         void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&) [363]
                0.00    0.00     952/3720        Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&) [330]
                0.00    0.00     952/952         void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&) [362]
-----------------------------------------------
                0.00    0.00      88/952         std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [100]
                0.00    0.00     864/952         void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&) [365]
[364]    0.0    0.00    0.00     952         std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
                0.00    0.00     952/840533      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node() [132]
                0.00    0.00     952/840546      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator() [125]
                0.00    0.00     952/3720        Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&) [330]
                0.00    0.00     952/840533      std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*) [128]
                0.00    0.00     952/2830393     std::_List_node<Point*>::_M_valptr() [113]
                0.00    0.00     952/952         void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&) [363]
                0.00    0.00     952/840533      std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::operator=(decltype(nullptr)) [130]
                0.00    0.00     952/840533      std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::~__allocated_ptr() [129]
-----------------------------------------------
                0.00    0.00     864/864         std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&) [93]
[365]    0.0    0.00    0.00     864         void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&) [365]
                0.00    0.00     864/3720        Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&) [330]
                0.00    0.00     864/952         std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [364]
                0.00    0.00     864/840533      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long) [133]
-----------------------------------------------
                0.00    0.00     725/725         GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
[366]    0.0    0.00    0.00     725         int const& std::max<int>(int const&, int const&) [366]
-----------------------------------------------
                0.00    0.00     725/725         GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [21]
[367]    0.0    0.00    0.00     725         int const& std::min<int>(int const&, int const&) [367]
-----------------------------------------------
                0.00    0.00     416/416         Individual::mutate() [10]
[368]    0.0    0.00    0.00     416         Colour::set_b(int) [368]
-----------------------------------------------
                0.00    0.00     412/412         Individual::mutate() [10]
[369]    0.0    0.00    0.00     412         Colour::set_r(int) [369]
-----------------------------------------------
                0.00    0.00     391/391         Individual::mutate() [10]
[370]    0.0    0.00    0.00     391         Colour::set_a(double) [370]
-----------------------------------------------
                0.00    0.00     388/388         Individual::mutate() [10]
[371]    0.0    0.00    0.00     388         Colour::set_g(int) [371]
-----------------------------------------------
                0.00    0.00     219/219         Polygon::random_polygon(int, int, int) [33]
[372]    0.0    0.00    0.00     219         Colour::Colour(unsigned char, unsigned char, unsigned char, double) [372]
-----------------------------------------------
                0.00    0.00      69/207         std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [387]
                0.00    0.00      69/207         void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&) [386]
                0.00    0.00      69/207         void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&) [385]
[373]    0.0    0.00    0.00     207         Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&) [373]
-----------------------------------------------
                0.00    0.00      69/143         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [388]
                0.00    0.00      74/143         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>) [383]
[374]    0.0    0.00    0.00     143         std::_List_const_iterator<Polygon*>::_M_const_cast() const [374]
                0.00    0.00     143/481710      std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [143]
-----------------------------------------------
                0.00    0.00      69/143         Individual::insert_dna(int, Polygon*) [94]
                0.00    0.00      74/143         Individual::remove_dna(int) [91]
[375]    0.0    0.00    0.00     143         std::_List_const_iterator<Polygon*>::_List_const_iterator(std::_List_iterator<Polygon*> const&) [375]
-----------------------------------------------
                0.00    0.00      13/101         Polygon::remove_point() [88]
                0.00    0.00      88/101         Polygon::insert_point(int, Point*) [96]
[376]    0.0    0.00    0.00     101         std::_List_const_iterator<Point*>::_List_const_iterator(std::_List_iterator<Point*> const&) [376]
-----------------------------------------------
                0.00    0.00      74/74          std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::deallocate(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*, unsigned long) [379]
[377]    0.0    0.00    0.00      74         __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::deallocate(std::_List_node<Polygon*>*, unsigned long) [377]
-----------------------------------------------
                0.00    0.00      74/74          void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::destroy<Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**) [380]
[378]    0.0    0.00    0.00      74         void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::destroy<Polygon*>(Polygon**) [378]
-----------------------------------------------
                0.00    0.00      74/74          std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_put_node(std::_List_node<Polygon*>*) [382]
[379]    0.0    0.00    0.00      74         std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::deallocate(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*, unsigned long) [379]
                0.00    0.00      74/74          __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::deallocate(std::_List_node<Polygon*>*, unsigned long) [377]
-----------------------------------------------
                0.00    0.00      74/74          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [384]
[380]    0.0    0.00    0.00      74         void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::destroy<Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**) [380]
                0.00    0.00      74/74          void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::destroy<Polygon*>(Polygon**) [378]
-----------------------------------------------
                0.00    0.00      74/74          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [384]
[381]    0.0    0.00    0.00      74         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_dec_size(unsigned long) [381]
-----------------------------------------------
                0.00    0.00      74/74          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [384]
[382]    0.0    0.00    0.00      74         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_put_node(std::_List_node<Polygon*>*) [382]
                0.00    0.00      74/74          std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::deallocate(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*, unsigned long) [379]
-----------------------------------------------
                0.00    0.00      74/74          Individual::remove_dna(int) [91]
[383]    0.0    0.00    0.00      74         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>) [383]
                0.00    0.00      74/481710      std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [143]
                0.00    0.00      74/143         std::_List_const_iterator<Polygon*>::_M_const_cast() const [374]
                0.00    0.00      74/74          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [384]
-----------------------------------------------
                0.00    0.00      74/74          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>) [383]
[384]    0.0    0.00    0.00      74         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [384]
                0.00    0.00      74/74          std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_dec_size(unsigned long) [381]
                0.00    0.00      74/813569      std::_List_node<Polygon*>::_M_valptr() [138]
                0.00    0.00      74/231610      std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator() [158]
                0.00    0.00      74/74          void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::destroy<Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**) [380]
                0.00    0.00      74/74          std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_put_node(std::_List_node<Polygon*>*) [382]
-----------------------------------------------
                0.00    0.00      69/69          void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&) [386]
[385]    0.0    0.00    0.00      69         void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&) [385]
                0.00    0.00      69/207         Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&) [373]
                0.00    0.00      69/1107856     operator new(unsigned long, void*) [120]
-----------------------------------------------
                0.00    0.00      69/69          std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [387]
[386]    0.0    0.00    0.00      69         void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&) [386]
                0.00    0.00      69/207         Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&) [373]
                0.00    0.00      69/69          void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&) [385]
-----------------------------------------------
                0.00    0.00      69/69          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [388]
[387]    0.0    0.00    0.00      69         std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [387]
                0.00    0.00      69/231536      std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node() [165]
                0.00    0.00      69/231610      std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator() [158]
                0.00    0.00      69/231536      std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*) [161]
                0.00    0.00      69/207         Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&) [373]
                0.00    0.00      69/813569      std::_List_node<Polygon*>::_M_valptr() [138]
                0.00    0.00      69/69          void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&) [386]
                0.00    0.00      69/231536      std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::operator=(decltype(nullptr)) [163]
                0.00    0.00      69/231536      std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::~__allocated_ptr() [162]
-----------------------------------------------
                0.00    0.00      69/69          Individual::insert_dna(int, Polygon*) [94]
[388]    0.0    0.00    0.00      69         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [388]
                0.00    0.00      69/69          std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [387]
                0.00    0.00      69/143         std::_List_const_iterator<Polygon*>::_M_const_cast() const [374]
                0.00    0.00      69/231536      std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_inc_size(unsigned long) [166]
                0.00    0.00      69/481710      std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [143]
-----------------------------------------------
                0.00    0.00      30/30          void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag) [76]
[389]    0.0    0.00    0.00      30         std::_List_iterator<Point*>::operator--() [389]
-----------------------------------------------
                0.00    0.00      18/18          __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [403]
[390]    0.0    0.00    0.00      18         Individual** std::__niter_base<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [390]
                0.00    0.00      18/105038      __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [168]
-----------------------------------------------
                0.00    0.00      13/13          std::allocator_traits<std::allocator<std::_List_node<Point*> > >::deallocate(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*, unsigned long) [393]
[391]    0.0    0.00    0.00      13         __gnu_cxx::new_allocator<std::_List_node<Point*> >::deallocate(std::_List_node<Point*>*, unsigned long) [391]
-----------------------------------------------
                0.00    0.00      13/13          void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::destroy<Point*>(std::allocator<std::_List_node<Point*> >&, Point**) [394]
[392]    0.0    0.00    0.00      13         void __gnu_cxx::new_allocator<std::_List_node<Point*> >::destroy<Point*>(Point**) [392]
-----------------------------------------------
                0.00    0.00      13/13          std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_put_node(std::_List_node<Point*>*) [396]
[393]    0.0    0.00    0.00      13         std::allocator_traits<std::allocator<std::_List_node<Point*> > >::deallocate(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*, unsigned long) [393]
                0.00    0.00      13/13          __gnu_cxx::new_allocator<std::_List_node<Point*> >::deallocate(std::_List_node<Point*>*, unsigned long) [391]
-----------------------------------------------
                0.00    0.00      13/13          std::__cxx11::list<Point*, std::allocator<Point*> >::_M_erase(std::_List_iterator<Point*>) [397]
[394]    0.0    0.00    0.00      13         void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::destroy<Point*>(std::allocator<std::_List_node<Point*> >&, Point**) [394]
                0.00    0.00      13/13          void __gnu_cxx::new_allocator<std::_List_node<Point*> >::destroy<Point*>(Point**) [392]
-----------------------------------------------
                0.00    0.00      13/13          std::__cxx11::list<Point*, std::allocator<Point*> >::_M_erase(std::_List_iterator<Point*>) [397]
[395]    0.0    0.00    0.00      13         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_dec_size(unsigned long) [395]
-----------------------------------------------
                0.00    0.00      13/13          std::__cxx11::list<Point*, std::allocator<Point*> >::_M_erase(std::_List_iterator<Point*>) [397]
[396]    0.0    0.00    0.00      13         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_put_node(std::_List_node<Point*>*) [396]
                0.00    0.00      13/13          std::allocator_traits<std::allocator<std::_List_node<Point*> > >::deallocate(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*, unsigned long) [393]
-----------------------------------------------
                0.00    0.00      13/13          std::__cxx11::list<Point*, std::allocator<Point*> >::erase(std::_List_const_iterator<Point*>) [102]
[397]    0.0    0.00    0.00      13         std::__cxx11::list<Point*, std::allocator<Point*> >::_M_erase(std::_List_iterator<Point*>) [397]
                0.00    0.00      13/13          std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_dec_size(unsigned long) [395]
                0.00    0.00      13/840546      std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator() [125]
                0.00    0.00      13/2830393     std::_List_node<Point*>::_M_valptr() [113]
                0.00    0.00      13/13          void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::destroy<Point*>(std::allocator<std::_List_node<Point*> >&, Point**) [394]
                0.00    0.00      13/13          std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_put_node(std::_List_node<Point*>*) [396]
-----------------------------------------------
                0.00    0.00      12/12          __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [401]
[398]    0.0    0.00    0.00      12         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [398]
-----------------------------------------------
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<cvflann::anyimpl::empty_any>::~typed_base_any_policy() [416]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<char const*>::~typed_base_any_policy() [420]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<int>::~typed_base_any_policy() [423]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<float>::~typed_base_any_policy() [422]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<bool>::~typed_base_any_policy() [421]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<cvflann::flann_algorithm_t>::~typed_base_any_policy() [417]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<cvflann::flann_centers_init_t>::~typed_base_any_policy() [418]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<unsigned int>::~typed_base_any_policy() [424]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~typed_base_any_policy() [419]
[399]    0.0    0.00    0.00       9         cvflann::anyimpl::base_any_policy::~base_any_policy() [399]
-----------------------------------------------
                0.00    0.00       6/6           Individual** std::__copy_move_backward_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [402]
[400]    0.0    0.00    0.00       6         Individual** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Individual*>(Individual* const*, Individual* const*, Individual**) [400]
-----------------------------------------------
                0.00    0.00       6/6           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [342]
[401]    0.0    0.00    0.00       6         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [401]
                0.00    0.00      12/12          __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [398]
                0.00    0.00       6/6           __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [403]
-----------------------------------------------
                0.00    0.00       6/6           __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [403]
[402]    0.0    0.00    0.00       6         Individual** std::__copy_move_backward_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [402]
                0.00    0.00       6/6           Individual** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Individual*>(Individual* const*, Individual* const*, Individual**) [400]
-----------------------------------------------
                0.00    0.00       6/6           __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [401]
[403]    0.0    0.00    0.00       6         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [403]
                0.00    0.00      18/18          Individual** std::__niter_base<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [390]
                0.00    0.00       6/6           Individual** std::__copy_move_backward_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [402]
                0.00    0.00       6/37520       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [186]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [586]
[404]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN10IndividualC2EiiiPNSt7__cxx114listIP7PolygonSaIS3_EEE [404]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [412]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [586]
[405]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN16GeneticAlgorithmC2EPhii [405]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [411]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [586]
[406]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7Polygon14random_polygonEiii [406]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [413]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [586]
[407]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7Problem3runEPN2cv3MatEi [407]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [410]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [586]
[408]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [408]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [409]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [408]
[409]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [409]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7Problem3runEPN2cv3MatEi [407]
[410]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [410]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN16GeneticAlgorithmC2EPhii [405]
[411]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [411]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN10IndividualC2EiiiPNSt7__cxx114listIP7PolygonSaIS3_EEE [404]
[412]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [412]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7Polygon14random_polygonEiii [406]
[413]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [413]
-----------------------------------------------
                0.00    0.00       1/1           cv::Mat::Mat(int, int, int) [103]
[414]    0.0    0.00    0.00       1         cv::Mat::create(int, int, int) [414]
-----------------------------------------------
                0.00    0.00       1/1           cv::MatSize::operator()() const [428]
[415]    0.0    0.00    0.00       1         cv::Size_<int>::Size_(int, int) [415]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::big_any_policy<cvflann::anyimpl::empty_any>::~big_any_policy() [456]
[416]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<cvflann::anyimpl::empty_any>::~typed_base_any_policy() [416]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [399]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::big_any_policy<cvflann::flann_algorithm_t>::~big_any_policy() [465]
[417]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<cvflann::flann_algorithm_t>::~typed_base_any_policy() [417]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [399]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::big_any_policy<cvflann::flann_centers_init_t>::~big_any_policy() [474]
[418]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<cvflann::flann_centers_init_t>::~typed_base_any_policy() [418]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [399]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::big_any_policy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~big_any_policy() [483]
[419]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~typed_base_any_policy() [419]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [399]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::small_any_policy<char const*>::~small_any_policy() [493]
[420]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<char const*>::~typed_base_any_policy() [420]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [399]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::small_any_policy<bool>::~small_any_policy() [502]
[421]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<bool>::~typed_base_any_policy() [421]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [399]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::small_any_policy<float>::~small_any_policy() [511]
[422]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<float>::~typed_base_any_policy() [422]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [399]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::small_any_policy<int>::~small_any_policy() [520]
[423]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<int>::~typed_base_any_policy() [423]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [399]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::small_any_policy<unsigned int>::~small_any_policy() [529]
[424]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<unsigned int>::~typed_base_any_policy() [424]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [399]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::allocator() [429]
[425]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::new_allocator() [425]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::~allocator() [430]
[426]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::~new_allocator() [426]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, int) [85]
[427]    0.0    0.00    0.00       1         int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [427]
                0.00    0.00       1/1           __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::_Save_errno() [444]
                0.00    0.00       1/1           __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Range_chk::_S_chk(long, std::integral_constant<bool, true>) [443]
                0.00    0.00       1/1           __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::~_Save_errno() [445]
-----------------------------------------------
                0.00    0.00       1/1           Problem::run(cv::Mat*, int) [2]
[428]    0.0    0.00    0.00       1         cv::MatSize::operator()() const [428]
                0.00    0.00       1/1           cv::Size_<int>::Size_(int, int) [415]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [432]
[429]    0.0    0.00    0.00       1         std::allocator<int>::allocator() [429]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::new_allocator() [425]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [433]
[430]    0.0    0.00    0.00       1         std::allocator<int>::~allocator() [430]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::~new_allocator() [426]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [441]
[431]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [431]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [436]
[432]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [432]
                0.00    0.00       1/1           std::allocator<int>::allocator() [429]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [437]
[433]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [433]
                0.00    0.00       1/1           std::allocator<int>::~allocator() [430]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [437]
[434]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [434]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [440]
[435]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [435]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [439]
[436]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [436]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [432]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [440]
[437]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [437]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [434]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [433]
-----------------------------------------------
                0.00    0.00       1/1           void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag) [24]
[438]    0.0    0.00    0.00       1         std::_List_iterator<Polygon*>::operator--() [438]
-----------------------------------------------
                0.00    0.00       1/1           Problem::run(cv::Mat*, int) [2]
[439]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector() [439]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [436]
-----------------------------------------------
                0.00    0.00       1/1           Problem::run(cv::Mat*, int) [2]
[440]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::~vector() [440]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [435]
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [442]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [437]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [442]
[441]    0.0    0.00    0.00       1         void std::_Destroy<int*>(int*, int*) [441]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [431]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [440]
[442]    0.0    0.00    0.00       1         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [442]
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [441]
-----------------------------------------------
                0.00    0.00       1/1           int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [427]
[443]    0.0    0.00    0.00       1         __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Range_chk::_S_chk(long, std::integral_constant<bool, true>) [443]
-----------------------------------------------
                0.00    0.00       1/1           int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [427]
[444]    0.0    0.00    0.00       1         __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::_Save_errno() [444]
-----------------------------------------------
                0.00    0.00       1/1           int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [427]
[445]    0.0    0.00    0.00       1         __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::~_Save_errno() [445]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [404] _GLOBAL__sub_I__ZN10IndividualC2EiiiPNSt7__cxx114listIP7PolygonSaIS3_EEE [428] cv::MatSize::operator()() const [339] std::vector<Individual*, std::allocator<Individual*> >::vector(std::allocator<Individual*> const&)
 [405] _GLOBAL__sub_I__ZN16GeneticAlgorithmC2EPhii [173] __gnu_cxx::new_allocator<Individual*>::max_size() const [255] std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&)
 [406] _GLOBAL__sub_I__ZN7Polygon14random_polygonEiii [239] __gnu_cxx::new_allocator<Polygon*>::max_size() const [321] std::vector<Individual*, std::allocator<Individual*> >::vector()
 [407] _GLOBAL__sub_I__ZN7Problem3runEPN2cv3MatEi [127] __gnu_cxx::new_allocator<std::_List_node<Point*> >::max_size() const [238] std::vector<Individual*, std::allocator<Individual*> >::~vector()
 [408] _GLOBAL__sub_I_main   [160] __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::max_size() const [340] std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&)
  [46] sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [193] __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::base() const [263] std::vector<Individual*, std::allocator<Individual*> >::operator[](unsigned long)
 [409] __static_initialization_and_destruction_0(int, int) [168] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [229] void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&)
 [410] __static_initialization_and_destruction_0(int, int) [198] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [310] void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&)
 [411] __static_initialization_and_destruction_0(int, int) [333] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator+(long) const [295] std::vector<Polygon*, std::allocator<Polygon*> >::end()
 [412] __static_initialization_and_destruction_0(int, int) [172] __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const [296] std::vector<Polygon*, std::allocator<Polygon*> >::begin()
 [413] __static_initialization_and_destruction_0(int, int) [227] __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator*() const [230] std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&)
  [94] Individual::insert_dna(int, Polygon*) [311] bool __gnu_cxx::__ops::_Val_less_iter::operator()<Individual*, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(Individual*&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [359] std::vector<Polygon*, std::allocator<Polygon*> >::vector()
  [91] Individual::remove_dna(int) [325] bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [360] std::vector<Polygon*, std::allocator<Polygon*> >::~vector()
 [242] Individual::get_len_dna() [336] std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const [231] std::vector<Polygon*, std::allocator<Polygon*> >::operator[](unsigned long)
  [10] Individual::mutate()  [179] std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const [439] std::vector<int, std::allocator<int> >::vector()
   [4] Individual::draw_CV(unsigned char*, int, int) [272] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() const [440] std::vector<int, std::allocator<int> >::~vector()
  [25] Individual::get_dna(int) [174] std::move_iterator<Individual**>::base() const [82] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl()
  [90] Individual::Individual(Individual*) [203] std::move_iterator<Polygon**>::base() const [395] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_dec_size(unsigned long)
 [322] Individual::Individual(int, int, int, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45] std::_List_iterator<Point*>::operator*() const [132] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node()
  [39] Individual::Individual(int, int, int, int) [121] std::_List_iterator<Point*>::operator!=(std::_List_iterator<Point*> const&) const [133] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long)
  [98] Individual::~Individual() [142] std::_List_iterator<Polygon*>::operator*() const [396] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_put_node(std::_List_node<Point*>*)
 [270] Population::get_individuals() [144] std::_List_iterator<Polygon*>::operator!=(std::_List_iterator<Polygon*> const&) const [125] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator()
 [334] Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >) [101] std::_List_const_iterator<Point*>::_M_const_cast() const [83] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_base()
  [40] Population::Population(int, int, int, int, int) [374] std::_List_const_iterator<Polygon*>::_M_const_cast() const [314] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl()
  [12] GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [224] std::uniform_int_distribution<int>::param_type::a() const [381] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_dec_size(unsigned long)
  [99] GeneticAlgorithm::clean_population() [288] std::uniform_int_distribution<int>::param_type::b() const [165] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node()
  [21] GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [196] std::uniform_real_distribution<double>::param_type::a() const [166] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_inc_size(unsigned long)
  [20] GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [265] std::uniform_real_distribution<double>::param_type::b() const [382] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_put_node(std::_List_node<Polygon*>*)
   [6] GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [284] std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [158] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator()
   [3] GeneticAlgorithm::evolve(int) [261] std::vector<Individual*, std::allocator<Individual*> >::_M_range_check(unsigned long) const [315] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_base()
  [41] GeneticAlgorithm::GeneticAlgorithm(unsigned char*, int, int) [248] std::vector<Individual*, std::allocator<Individual*> >::end() const [364] std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&)
 [110] cv::_InputArray::init(int, void const*) [170] std::vector<Individual*, std::allocator<Individual*> >::size() const [32] std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&)
 [122] cv::_InputArray::_InputArray() [249] std::vector<Individual*, std::allocator<Individual*> >::begin() const [42] std::__cxx11::list<Point*, std::allocator<Point*> >::end()
 [139] cv::_InputArray::_InputArray(cv::Mat const&) [213] std::vector<Individual*, std::allocator<Individual*> >::max_size() const [52] std::__cxx11::list<Point*, std::allocator<Point*> >::begin()
 [115] cv::_InputArray::~_InputArray() [306] std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [102] std::__cxx11::list<Point*, std::allocator<Point*> >::erase(std::_List_const_iterator<Point*>)
 [140] cv::_OutputArray::_OutputArray(cv::Mat&) [202] std::vector<Polygon*, std::allocator<Polygon*> >::size() const [100] std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&)
 [146] cv::_OutputArray::_OutputArray() [273] std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const [397] std::__cxx11::list<Point*, std::allocator<Point*> >::_M_erase(std::_List_iterator<Point*>)
 [123] cv::_OutputArray::~_OutputArray() [60] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_size() const [365] void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&)
  [64] cv::_InputOutputArray::_InputOutputArray(cv::Mat&) [232] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_size() const [30] void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&)
 [147] cv::_InputOutputArray::~_InputOutputArray() [61] std::__cxx11::list<Point*, std::allocator<Point*> >::_M_node_count() const [22] std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&)
 [414] cv::Mat::create(int, int, int) [62] std::__cxx11::list<Point*, std::allocator<Point*> >::size() const [93] std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&)
  [37] cv::Mat::release()    [233] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_node_count() const [84] std::__cxx11::list<Point*, std::allocator<Point*> >::list()
  [50] cv::Mat::Mat()        [234] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const [387] std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&)
 [103] cv::Mat::Mat(int, int, int) [185] std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [71] std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&)
 [302] cv::Mat::Mat(int, int, int, void*, unsigned long) [318] std::allocator<Individual*>::allocator() [156] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end()
  [28] cv::Mat::~Mat()       [183] std::allocator<Individual*>::~allocator() [155] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin()
  [65] cv::Vec<double, 4>::Vec() [353] std::allocator<Polygon*>::allocator() [383] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>)
  [66] cv::Matx<double, 4, 1>::Matx() [354] std::allocator<Polygon*>::~allocator() [388] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&)
 [415] cv::Size_<int>::Size_(int, int) [81] std::allocator<std::_List_node<Point*> >::allocator() [384] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>)
 [116] cv::Size_<int>::Size_() [313] std::allocator<std::_List_node<Polygon*> >::allocator() [72] void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&)
  [57] cv::Point_<int>::Point_(int, int) [429] std::allocator<int>::allocator() [73] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&)
 [117] cv::Point_<int>::Point_() [430] std::allocator<int>::~allocator() [316] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list()
  [58] cv::Point_<int>::operator=(cv::Point_<int>&&) [113] std::_List_node<Point*>::_M_valptr() [85] std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, int)
 [145] cv::MatSize::MatSize(int*) [138] std::_List_node<Polygon*>::_M_valptr() [150] std::__detail::_List_node_header::_M_init()
  [63] cv::MatStep::MatStep(unsigned long) [250] Individual** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [151] std::__detail::_List_node_header::_List_node_header()
 [299] cv::MatStep::MatStep() [214] Individual** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [53] std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long)
 [269] cv::MatStep::operator[](int) [274] Polygon** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Polygon*>(Polygon* const*, Polygon* const*, Polygon**) [29] std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  [67] cv::Scalar_<double>::Scalar_(double, double, double, double) [188] void std::_Destroy_aux<true>::__destroy<Individual**>(Individual**, Individual**) [36] unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long)
 [119] Point::get_x()        [293] void std::_Destroy_aux<true>::__destroy<Polygon**>(Polygon**, Polygon**) [23] unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long)
  [56] Point::get_y()        [431] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [268] std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
 [331] Point::set_x(int)     [200] std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long) [18] std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()()
 [332] Point::set_y(int)     [326] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl&) [134] std::allocator<std::_List_node<Point*> >* std::__addressof<std::allocator<std::_List_node<Point*> > >(std::allocator<std::_List_node<Point*> >&)
 [135] Point::Point(Point*)  [241] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&) [167] std::allocator<std::_List_node<Polygon*> >* std::__addressof<std::allocator<std::_List_node<Polygon*> > >(std::allocator<std::_List_node<Polygon*> >&)
 [361] Point::Point(int, int) [319] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl() [194] __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >)
   [5] utils::diff(unsigned char const*, unsigned char const*, int, int) [236] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::~_Vector_impl() [398] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
   [9] utils::random()       [189] std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long) [176] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>)
  [11] utils::next_int(int)  [251] std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_create_storage(unsigned long) [177] Individual** std::__miter_base<Individual**>(Individual**)
  [86] Colour::random_alpha() [171] std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [205] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>)
  [38] Colour::random_colour() [337] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(std::allocator<Individual*> const&) [206] Polygon** std::__miter_base<Polygon**>(Polygon**)
 [141] Colour::get_a()       [252] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&) [195] Individual* const* std::__niter_base<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >)
 [148] Colour::get_b()       [320] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base() [169] Individual** std::__niter_base<Individual**>(Individual**)
 [149] Colour::get_g()       [237] std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base() [390] Individual** std::__niter_base<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  [68] Colour::get_r()       [307] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_allocate(unsigned long) [181] Polygon** std::__niter_base<Polygon**>(Polygon**)
 [370] Colour::set_a(double) [355] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::_Vector_impl() [256] Individual** std::__copy_move_a<false, Individual* const*, Individual**>(Individual* const*, Individual* const*, Individual**)
 [368] Colour::set_b(int)    [356] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::~_Vector_impl() [217] Individual** std::__copy_move_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
 [371] Colour::set_g(int)    [294] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long) [277] Polygon** std::__copy_move_a<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**)
 [369] Colour::set_r(int)    [235] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() [401] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
 [154] Colour::Colour(Colour*) [357] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_base() [257] Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
 [372] Colour::Colour(unsigned char, unsigned char, unsigned char, double) [358] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base() [218] Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
  [96] Polygon::insert_point(int, Point*) [432] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [278] Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**)
  [88] Polygon::remove_point() [433] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [341] void std::__alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&)
  [33] Polygon::random_polygon(int, int, int) [434] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [342] void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
  [75] Polygon::get_points_length() [435] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [343] void std::__introsort_loop<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
  [43] Polygon::move(int, int) [436] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [344] void std::__do_alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&, std::integral_constant<bool, true>)
  [92] Polygon::add_point(Point*) [437] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [19] double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  [31] Polygon::get_point(int) [175] std::move_iterator<Individual**>::move_iterator(Individual**) [258] Individual** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
  [95] Polygon::Polygon(Colour*) [204] std::move_iterator<Polygon**>::move_iterator(Polygon**) [219] Individual** std::uninitialized_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**)
  [15] Polygon::Polygon(Polygon*) [208] std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [279] Polygon** std::uninitialized_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**)
   [2] Problem::run(cv::Mat*, int) [209] std::random_device::~random_device() [345] std::iterator_traits<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
 [399] cvflann::anyimpl::base_any_policy::~base_any_policy() [210] std::random_device::operator()() [118] std::iterator_traits<std::_List_iterator<Point*> >::iterator_category std::__iterator_category<std::_List_iterator<Point*> >(std::_List_iterator<Point*> const&)
 [416] cvflann::anyimpl::typed_base_any_policy<cvflann::anyimpl::empty_any>::~typed_base_any_policy() [79] std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [157] std::iterator_traits<std::_List_iterator<Polygon*> >::iterator_category std::__iterator_category<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*> const&)
 [417] cvflann::anyimpl::typed_base_any_policy<cvflann::flann_algorithm_t>::~typed_base_any_policy() [389] std::_List_iterator<Point*>::operator--() [402] Individual** std::__copy_move_backward_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
 [418] cvflann::anyimpl::typed_base_any_policy<cvflann::flann_centers_init_t>::~typed_base_any_policy() [55] std::_List_iterator<Point*>::operator++() [346] void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [419] cvflann::anyimpl::typed_base_any_policy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~typed_base_any_policy() [143] std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [259] Individual** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, Individual*>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, std::allocator<Individual*>&)
 [420] cvflann::anyimpl::typed_base_any_policy<char const*>::~typed_base_any_policy() [438] std::_List_iterator<Polygon*>::operator--() [220] Individual** std::__uninitialized_copy_a<std::move_iterator<Individual**>, Individual**, Individual*>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**, std::allocator<Individual*>&)
 [421] cvflann::anyimpl::typed_base_any_policy<bool>::~typed_base_any_policy() [44] std::_List_iterator<Polygon*>::operator++() [280] Polygon** std::__uninitialized_copy_a<std::move_iterator<Polygon**>, Polygon**, Polygon*>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**, std::allocator<Polygon*>&)
 [422] cvflann::anyimpl::typed_base_any_policy<float>::~typed_base_any_policy() [128] std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*) [403] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
 [423] cvflann::anyimpl::typed_base_any_policy<int>::~typed_base_any_policy() [129] std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::~__allocated_ptr() [329] void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter)
 [424] cvflann::anyimpl::typed_base_any_policy<unsigned int>::~typed_base_any_policy() [130] std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::operator=(decltype(nullptr)) [178] std::move_iterator<Individual**> std::__make_move_if_noexcept_iterator<Individual*, std::move_iterator<Individual**> >(Individual**)
 [211] __gnu_cxx::new_allocator<Individual*>::deallocate(Individual**, unsigned long) [161] std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*) [207] std::move_iterator<Polygon**> std::__make_move_if_noexcept_iterator<Polygon*, std::move_iterator<Polygon**> >(Polygon**)
 [199] __gnu_cxx::new_allocator<Individual*>::allocate(unsigned long, void const*) [162] std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::~__allocated_ptr() [221] Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&)
 [283] void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&) [163] std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::operator=(decltype(nullptr)) [281] Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&)
 [184] __gnu_cxx::new_allocator<Individual*>::new_allocator(__gnu_cxx::new_allocator<Individual*> const&) [212] std::allocator_traits<std::allocator<Individual*> >::deallocate(std::allocator<Individual*>&, Individual**, unsigned long) [366] int const& std::max<int>(int const&, int const&)
 [317] __gnu_cxx::new_allocator<Individual*>::new_allocator() [253] std::allocator_traits<std::allocator<Individual*> >::select_on_container_copy_construction(std::allocator<Individual*> const&) [243] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [182] __gnu_cxx::new_allocator<Individual*>::~new_allocator() [201] std::allocator_traits<std::allocator<Individual*> >::allocate(std::allocator<Individual*>&, unsigned long) [367] int const& std::min<int>(int const&, int const&)
 [303] __gnu_cxx::new_allocator<Polygon*>::deallocate(Polygon**, unsigned long) [215] std::allocator_traits<std::allocator<Individual*> >::max_size(std::allocator<Individual*> const&) [347] std::__lg(long)
 [304] __gnu_cxx::new_allocator<Polygon*>::allocate(unsigned long, void const*) [285] void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&) [260] Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
 [225] void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [308] std::allocator_traits<std::allocator<Polygon*> >::deallocate(std::allocator<Polygon*>&, Polygon**, unsigned long) [222] Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**)
 [351] __gnu_cxx::new_allocator<Polygon*>::new_allocator() [309] std::allocator_traits<std::allocator<Polygon*> >::allocate(std::allocator<Polygon*>&, unsigned long) [282] Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**)
 [352] __gnu_cxx::new_allocator<Polygon*>::~new_allocator() [275] std::allocator_traits<std::allocator<Polygon*> >::max_size(std::allocator<Polygon*> const&) [244] std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&)
 [391] __gnu_cxx::new_allocator<std::_List_node<Point*> >::deallocate(std::_List_node<Point*>*, unsigned long) [228] void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [59] std::remove_reference<Point*&>::type&& std::move<Point*&>(Point*&)
 [392] void __gnu_cxx::new_allocator<std::_List_node<Point*> >::destroy<Point*>(Point**) [393] std::allocator_traits<std::allocator<std::_List_node<Point*> > >::deallocate(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*, unsigned long) [153] std::remove_reference<Polygon*&>::type&& std::move<Polygon*&>(Polygon*&)
 [126] __gnu_cxx::new_allocator<std::_List_node<Point*> >::allocate(unsigned long, void const*) [394] void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::destroy<Point*>(std::allocator<std::_List_node<Point*> >&, Point**) [180] std::remove_reference<Individual**&>::type&& std::move<Individual**&>(Individual**&)
 [362] void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&) [131] std::allocator_traits<std::allocator<std::_List_node<Point*> > >::allocate(std::allocator<std::_List_node<Point*> >&, unsigned long) [348] std::remove_reference<std::allocator<Individual*>&>::type&& std::move<std::allocator<Individual*>&>(std::allocator<Individual*>&)
  [87] void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&) [363] void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&) [327] std::remove_reference<std::vector<Individual*, std::allocator<Individual*> >&>::type&& std::move<std::vector<Individual*, std::allocator<Individual*> >&>(std::vector<Individual*, std::allocator<Individual*> >&)
 [152] __gnu_cxx::new_allocator<std::_List_node<Point*> >::new_allocator() [80] void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&) [114] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [377] __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::deallocate(std::_List_node<Polygon*>*, unsigned long) [379] std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::deallocate(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*, unsigned long) [77] std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type)
 [378] void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::destroy<Polygon*>(Polygon**) [380] void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::destroy<Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**) [26] std::_List_iterator<Polygon*> std::next<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*>, std::iterator_traits<std::_List_iterator<Polygon*> >::difference_type)
 [159] __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::allocate(unsigned long, void const*) [164] std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::allocate(std::allocator<std::_List_node<Polygon*> >&, unsigned long) [349] void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
 [385] void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&) [386] void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&) [74] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual*> >, std::is_move_constructible<Individual*>, std::is_move_assignable<Individual*> >::value, void>::type std::swap<Individual*>(Individual*&, Individual*&)
  [69] void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [70] void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&) [271] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual**> >, std::is_move_constructible<Individual**>, std::is_move_assignable<Individual**> >::value, void>::type std::swap<Individual**>(Individual**&, Individual**&)
 [312] __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::new_allocator() [376] std::_List_const_iterator<Point*>::_List_const_iterator(std::_List_iterator<Point*> const&) [350] void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [425] __gnu_cxx::new_allocator<int>::new_allocator() [375] std::_List_const_iterator<Polygon*>::_List_const_iterator(std::_List_iterator<Polygon*> const&) [97] void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int)
 [426] __gnu_cxx::new_allocator<int>::~new_allocator() [400] Individual** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Individual*>(Individual* const*, Individual* const*, Individual**) [78] void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long)
 [247] __gnu_cxx::__alloc_traits<std::allocator<Individual*>, Individual*>::_S_select_on_copy(std::allocator<Individual*> const&) [254] Individual** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [89] void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int)
 [111] __gnu_cxx::__aligned_membuf<Point*>::_M_ptr() [216] Individual** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [27] void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long)
 [112] __gnu_cxx::__aligned_membuf<Point*>::_M_addr() [276] Polygon** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [54] Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&)
 [136] __gnu_cxx::__aligned_membuf<Polygon*>::_M_ptr() [14] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [124] Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&)
 [137] __gnu_cxx::__aligned_membuf<Polygon*>::_M_addr() [197] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min() [187] Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&)
 [192] __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual* const* const&) [7] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [330] Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&)
 [186] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [8] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [373] Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&)
 [291] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator--() [13] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [47] void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
 [301] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++() [289] std::uniform_int_distribution<int>::param_type::param_type(int, int) [190] void std::_Destroy<Individual**>(Individual**, Individual**)
 [264] __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::__normal_iterator(Polygon** const&) [290] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [191] void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&)
 [226] __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator++() [34] int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [297] void std::_Destroy<Polygon**>(Polygon**, Polygon**)
 [328] __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [35] int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [298] void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&)
 [335] __gnu_cxx::__ops::__iter_less_iter() [266] std::uniform_real_distribution<double>::param_type::param_type(double, double) [441] void std::_Destroy<int*>(int*, int*)
 [427] int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [267] std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [442] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [323] bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [16] double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [76] void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag)
 [324] bool __gnu_cxx::operator< <Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [17] double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [24] void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag)
 [240] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [338] std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [48] void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag)
 [305] __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::difference_type __gnu_cxx::operator-<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [286] void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [49] void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
 [292] bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [262] std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [443] __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Range_chk::_S_chk(long, std::integral_constant<bool, true>)
 [223] bool __gnu_cxx::operator!=<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [245] std::vector<Individual*, std::allocator<Individual*> >::end() [444] __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::_Save_errno()
  [51] cv::Mat::clone() const [246] std::vector<Individual*, std::allocator<Individual*> >::begin() [445] __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::~_Save_errno()
 [300] cv::Mat::total() const [287] std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [120] operator new(unsigned long, void*)
