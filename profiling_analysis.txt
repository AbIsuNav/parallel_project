Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 61.35      1.19     1.19      751     0.00     0.00  Individual::draw_CV(unsigned char*, int, int)
 31.97      1.81     0.62      750     0.00     0.00  utils::diff(unsigned char const*, unsigned char const*, int, int)
  2.58      1.86     0.05     4235     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
  0.52      1.87     0.01  2642640     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long)
  0.52      1.88     0.01  2638405     0.00     0.00  std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.52      1.89     0.01    75168     0.00     0.00  Colour::get_a()
  0.52      1.90     0.01    37753     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_size() const
  0.52      1.91     0.01     4235     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
  0.52      1.92     0.01     1784     0.00     0.00  double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&)
  0.52      1.93     0.01     1500     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual**> >, std::is_move_constructible<Individual**>, std::is_move_assignable<Individual**> >::value, void>::type std::swap<Individual**>(Individual**&, Individual**&)
  0.52      1.94     0.01      517     0.00     0.00  std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&)
  0.00      1.94     0.00  2642640     0.00     0.00  std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00      1.94     0.00  2638405     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long)
  0.00      1.94     0.00   662331     0.00     0.00  std::_List_iterator<Polygon*>::operator++()
  0.00      1.94     0.00   351644     0.00     0.00  Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&)
  0.00      1.94     0.00   338260     0.00     0.00  cv::_InputArray::init(int, void const*)
  0.00      1.94     0.00   296625     0.00     0.00  __gnu_cxx::__aligned_membuf<Point*>::_M_ptr()
  0.00      1.94     0.00   296625     0.00     0.00  __gnu_cxx::__aligned_membuf<Point*>::_M_addr()
  0.00      1.94     0.00   296625     0.00     0.00  std::_List_node<Point*>::_M_valptr()
  0.00      1.94     0.00   263964     0.00     0.00  std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      1.94     0.00   239316     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00      1.94     0.00   227247     0.00     0.00  std::_List_iterator<Point*>::operator++()
  0.00      1.94     0.00   208197     0.00     0.00  std::_List_iterator<Point*>::operator*() const
  0.00      1.94     0.00   187923     0.00     0.00  cv::_InputArray::~_InputArray()
  0.00      1.94     0.00   187923     0.00     0.00  cv::Size_<int>::Size_()
  0.00      1.94     0.00   157242     0.00     0.00  cv::Point_<int>::Point_()
  0.00      1.94     0.00   151110     0.00     0.00  cv::Mat::release()
  0.00      1.94     0.00   147911     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::begin()
  0.00      1.94     0.00   120293     0.00     0.00  std::iterator_traits<std::_List_iterator<Point*> >::iterator_category std::__iterator_category<std::_List_iterator<Point*> >(std::_List_iterator<Point*> const&)
  0.00      1.94     0.00   120293     0.00     0.00  void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag)
  0.00      1.94     0.00   120286     0.00     0.00  Polygon::get_point(int)
  0.00      1.94     0.00   120286     0.00     0.00  std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type)
  0.00      1.94     0.00   120286     0.00     0.00  void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long)
  0.00      1.94     0.00   120218     0.00     0.00  Point::get_x()
  0.00      1.94     0.00   120218     0.00     0.00  Point::get_y()
  0.00      1.94     0.00   119658     0.00     0.00  cv::Point_<int>::Point_(int, int)
  0.00      1.94     0.00   119658     0.00     0.00  cv::Point_<int>::operator=(cv::Point_<int>&&)
  0.00      1.94     0.00   117459     0.00     0.00  operator new(unsigned long, void*)
  0.00      1.94     0.00   116039     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::end()
  0.00      1.94     0.00   115529     0.00     0.00  std::_List_iterator<Point*>::operator!=(std::_List_iterator<Point*> const&) const
  0.00      1.94     0.00   112753     0.00     0.00  cv::_InputArray::_InputArray()
  0.00      1.94     0.00   112753     0.00     0.00  cv::_OutputArray::~_OutputArray()
  0.00      1.94     0.00   109266     0.00     0.00  Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&)
  0.00      1.94     0.00    88428     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Point*> >::allocate(unsigned long, void const*)
  0.00      1.94     0.00    88428     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Point*> >::max_size() const
  0.00      1.94     0.00    88428     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*)
  0.00      1.94     0.00    88428     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::~__allocated_ptr()
  0.00      1.94     0.00    88428     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::operator=(decltype(nullptr))
  0.00      1.94     0.00    88428     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<Point*> > >::allocate(std::allocator<std::_List_node<Point*> >&, unsigned long)
  0.00      1.94     0.00    88428     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node()
  0.00      1.94     0.00    88428     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long)
  0.00      1.94     0.00    88428     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator()
  0.00      1.94     0.00    88428     0.00     0.00  std::allocator<std::_List_node<Point*> >* std::__addressof<std::allocator<std::_List_node<Point*> > >(std::allocator<std::_List_node<Point*> >&)
  0.00      1.94     0.00    88410     0.00     0.00  __gnu_cxx::__aligned_membuf<Polygon*>::_M_ptr()
  0.00      1.94     0.00    88410     0.00     0.00  __gnu_cxx::__aligned_membuf<Polygon*>::_M_addr()
  0.00      1.94     0.00    88410     0.00     0.00  std::_List_node<Polygon*>::_M_valptr()
  0.00      1.94     0.00    87911     0.00     0.00  Point::Point(Point*)
  0.00      1.94     0.00    87911     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&)
  0.00      1.94     0.00    87911     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&)
  0.00      1.94     0.00    87911     0.00     0.00  std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&)
  0.00      1.94     0.00    87911     0.00     0.00  void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&)
  0.00      1.94     0.00    87911     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&)
  0.00      1.94     0.00    87911     0.00     0.00  std::remove_reference<Point*&>::type&& std::move<Point*&>(Point*&)
  0.00      1.94     0.00    75170     0.00     0.00  cv::_InputArray::_InputArray(cv::Mat const&)
  0.00      1.94     0.00    75169     0.00     0.00  cv::_OutputArray::_OutputArray(cv::Mat&)
  0.00      1.94     0.00    63162     0.00     0.00  std::_List_iterator<Polygon*>::operator*() const
  0.00      1.94     0.00    52221     0.00     0.00  std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      1.94     0.00    38485     0.00     0.00  std::_List_iterator<Polygon*>::operator!=(std::_List_iterator<Polygon*> const&) const
  0.00      1.94     0.00    38357     0.00     0.00  cv::MatSize::MatSize(int*)
  0.00      1.94     0.00    38337     0.00     0.00  cv::Mat::~Mat()
  0.00      1.94     0.00    37753     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::_M_node_count() const
  0.00      1.94     0.00    37753     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::size() const
  0.00      1.94     0.00    37745     0.00     0.00  Polygon::get_points_length()
  0.00      1.94     0.00    37585     0.00     0.00  cv::MatStep::MatStep(unsigned long)
  0.00      1.94     0.00    37584     0.00     0.00  cv::_OutputArray::_OutputArray()
  0.00      1.94     0.00    37584     0.00     0.00  cv::_InputOutputArray::_InputOutputArray(cv::Mat&)
  0.00      1.94     0.00    37584     0.00     0.00  cv::_InputOutputArray::~_InputOutputArray()
  0.00      1.94     0.00    37584     0.00     0.00  cv::Mat::Mat()
  0.00      1.94     0.00    37584     0.00     0.00  cv::Vec<double, 4>::Vec()
  0.00      1.94     0.00    37584     0.00     0.00  cv::Matx<double, 4, 1>::Matx()
  0.00      1.94     0.00    37584     0.00     0.00  cv::Scalar_<double>::Scalar_(double, double, double, double)
  0.00      1.94     0.00    37584     0.00     0.00  Colour::get_b()
  0.00      1.94     0.00    37584     0.00     0.00  Colour::get_g()
  0.00      1.94     0.00    37584     0.00     0.00  Colour::get_r()
  0.00      1.94     0.00    37584     0.00     0.00  cv::Mat::clone() const
  0.00      1.94     0.00    28282     0.00     0.00  std::__detail::_List_node_header::_M_init()
  0.00      1.94     0.00    28282     0.00     0.00  std::__detail::_List_node_header::_List_node_header()
  0.00      1.94     0.00    27778     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Point*> >::new_allocator()
  0.00      1.94     0.00    27778     0.00     0.00  std::allocator<std::_List_node<Point*> >::allocator()
  0.00      1.94     0.00    27778     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl()
  0.00      1.94     0.00    27778     0.00     0.00  std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_base()
  0.00      1.94     0.00    27778     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::list()
  0.00      1.94     0.00    27768     0.00     0.00  std::remove_reference<Polygon*&>::type&& std::move<Polygon*&>(Polygon*&)
  0.00      1.94     0.00    27618     0.00     0.00  Colour::Colour(Colour*)
  0.00      1.94     0.00    27618     0.00     0.00  Polygon::Polygon(Polygon*)
  0.00      1.94     0.00    26195     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin()
  0.00      1.94     0.00    25978     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end()
  0.00      1.94     0.00    25441     0.00     0.00  std::iterator_traits<std::_List_iterator<Polygon*> >::iterator_category std::__iterator_category<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*> const&)
  0.00      1.94     0.00    25441     0.00     0.00  void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag)
  0.00      1.94     0.00    25417     0.00     0.00  Individual::get_dna(int)
  0.00      1.94     0.00    25417     0.00     0.00  std::_List_iterator<Polygon*> std::next<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*>, std::iterator_traits<std::_List_iterator<Polygon*> >::difference_type)
  0.00      1.94     0.00    25417     0.00     0.00  void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long)
  0.00      1.94     0.00    25248     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator()
  0.00      1.94     0.00    25234     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::allocate(unsigned long, void const*)
  0.00      1.94     0.00    25234     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::max_size() const
  0.00      1.94     0.00    25234     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*)
  0.00      1.94     0.00    25234     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::~__allocated_ptr()
  0.00      1.94     0.00    25234     0.00     0.00  std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::operator=(decltype(nullptr))
  0.00      1.94     0.00    25234     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::allocate(std::allocator<std::_List_node<Polygon*> >&, unsigned long)
  0.00      1.94     0.00    25234     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node()
  0.00      1.94     0.00    25234     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_inc_size(unsigned long)
  0.00      1.94     0.00    25234     0.00     0.00  std::allocator<std::_List_node<Polygon*> >* std::__addressof<std::allocator<std::_List_node<Polygon*> > >(std::allocator<std::_List_node<Polygon*> >&)
  0.00      1.94     0.00    25224     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&)
  0.00      1.94     0.00    25224     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&)
  0.00      1.94     0.00    25224     0.00     0.00  std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&)
  0.00      1.94     0.00    25224     0.00     0.00  void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&)
  0.00      1.94     0.00    25224     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&)
  0.00      1.94     0.00    10553     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const
  0.00      1.94     0.00     9269     0.00     0.00  Individual** std::__niter_base<Individual**>(Individual**)
  0.00      1.94     0.00     9013     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::size() const
  0.00      1.94     0.00     8340     0.00     0.00  __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const
  0.00      1.94     0.00     8261     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator()
  0.00      1.94     0.00     6019     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  0.00      1.94     0.00     5510     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::max_size() const
  0.00      1.94     0.00     5012     0.00     0.00  std::move_iterator<Individual**>::base() const
  0.00      1.94     0.00     5012     0.00     0.00  std::move_iterator<Individual**>::move_iterator(Individual**)
  0.00      1.94     0.00     5012     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>)
  0.00      1.94     0.00     5012     0.00     0.00  Individual** std::__miter_base<Individual**>(Individual**)
  0.00      1.94     0.00     5012     0.00     0.00  std::move_iterator<Individual**> std::__make_move_if_noexcept_iterator<Individual*, std::move_iterator<Individual**> >(Individual**)
  0.00      1.94     0.00     4902     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00      1.94     0.00     4507     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const
  0.00      1.94     0.00     4500     0.00     0.00  std::remove_reference<Individual**&>::type&& std::move<Individual**&>(Individual**&)
  0.00      1.94     0.00     4428     0.00     0.00  Polygon** std::__niter_base<Polygon**>(Polygon**)
  0.00      1.94     0.00     4252     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::~new_allocator()
  0.00      1.94     0.00     4252     0.00     0.00  std::allocator<Individual*>::~allocator()
  0.00      1.94     0.00     4235     0.00     0.00  std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      1.94     0.00     4235     0.00     0.00  std::random_device::~random_device()
  0.00      1.94     0.00     4235     0.00     0.00  std::random_device::operator()()
  0.00      1.94     0.00     4235     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long)
  0.00      1.94     0.00     4002     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::new_allocator(__gnu_cxx::new_allocator<Individual*> const&)
  0.00      1.94     0.00     4002     0.00     0.00  std::allocator<Individual*>::allocator(std::allocator<Individual*> const&)
  0.00      1.94     0.00     3780     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&)
  0.00      1.94     0.00     3759     0.00     0.00  Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&)
  0.00      1.94     0.00     3568     0.00     0.00  std::uniform_real_distribution<double>::param_type::a() const
  0.00      1.94     0.00     3568     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min()
  0.00      1.94     0.00     3504     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Individual**>(Individual**, Individual**)
  0.00      1.94     0.00     3504     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long)
  0.00      1.94     0.00     3504     0.00     0.00  void std::_Destroy<Individual**>(Individual**, Individual**)
  0.00      1.94     0.00     3504     0.00     0.00  void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&)
  0.00      1.94     0.00     3502     0.00     0.00  __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual* const* const&)
  0.00      1.94     0.00     3502     0.00     0.00  __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::base() const
  0.00      1.94     0.00     3502     0.00     0.00  __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00      1.94     0.00     3502     0.00     0.00  Individual* const* std::__niter_base<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00      1.94     0.00     3178     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const
  0.00      1.94     0.00     3027     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::size() const
  0.00      1.94     0.00     3004     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::allocate(unsigned long, void const*)
  0.00      1.94     0.00     3004     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long)
  0.00      1.94     0.00     3004     0.00     0.00  std::allocator_traits<std::allocator<Individual*> >::allocate(std::allocator<Individual*>&, unsigned long)
  0.00      1.94     0.00     2952     0.00     0.00  std::move_iterator<Polygon**>::base() const
  0.00      1.94     0.00     2952     0.00     0.00  std::move_iterator<Polygon**>::move_iterator(Polygon**)
  0.00      1.94     0.00     2952     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>)
  0.00      1.94     0.00     2952     0.00     0.00  Polygon** std::__miter_base<Polygon**>(Polygon**)
  0.00      1.94     0.00     2952     0.00     0.00  std::move_iterator<Polygon**> std::__make_move_if_noexcept_iterator<Polygon*, std::move_iterator<Polygon**> >(Polygon**)
  0.00      1.94     0.00     2754     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_size() const
  0.00      1.94     0.00     2754     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_node_count() const
  0.00      1.94     0.00     2754     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const
  0.00      1.94     0.00     2753     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::deallocate(Individual**, unsigned long)
  0.00      1.94     0.00     2753     0.00     0.00  std::allocator_traits<std::allocator<Individual*> >::deallocate(std::allocator<Individual*>&, Individual**, unsigned long)
  0.00      1.94     0.00     2694     0.00     0.00  bool __gnu_cxx::operator!=<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&)
  0.00      1.94     0.00     2544     0.00     0.00  void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&)
  0.00      1.94     0.00     2544     0.00     0.00  __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator++()
  0.00      1.94     0.00     2544     0.00     0.00  __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator*() const
  0.00      1.94     0.00     2544     0.00     0.00  void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&)
  0.00      1.94     0.00     2544     0.00     0.00  void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&)
  0.00      1.94     0.00     2544     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&)
  0.00      1.94     0.00     2544     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::operator[](unsigned long)
  0.00      1.94     0.00     2506     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::max_size() const
  0.00      1.94     0.00     2506     0.00     0.00  Individual** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**)
  0.00      1.94     0.00     2506     0.00     0.00  std::allocator_traits<std::allocator<Individual*> >::max_size(std::allocator<Individual*> const&)
  0.00      1.94     0.00     2506     0.00     0.00  Individual** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**)
  0.00      1.94     0.00     2506     0.00     0.00  Individual** std::__copy_move_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
  0.00      1.94     0.00     2506     0.00     0.00  Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
  0.00      1.94     0.00     2506     0.00     0.00  Individual** std::uninitialized_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**)
  0.00      1.94     0.00     2506     0.00     0.00  Individual** std::__uninitialized_copy_a<std::move_iterator<Individual**>, Individual**, Individual*>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**, std::allocator<Individual*>&)
  0.00      1.94     0.00     2506     0.00     0.00  Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&)
  0.00      1.94     0.00     2506     0.00     0.00  Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**)
  0.00      1.94     0.00     2451     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00      1.94     0.00     2451     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00      1.94     0.00     2451     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00      1.94     0.00     2451     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00      1.94     0.00     2451     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00      1.94     0.00     2411     0.00     0.00  Individual::get_len_dna()
  0.00      1.94     0.00     2364     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator()
  0.00      1.94     0.00     2251     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::~_Vector_impl()
  0.00      1.94     0.00     2251     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base()
  0.00      1.94     0.00     2251     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::~vector()
  0.00      1.94     0.00     2214     0.00     0.00  __gnu_cxx::new_allocator<Polygon*>::max_size() const
  0.00      1.94     0.00     2061     0.00     0.00  Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&)
  0.00      1.94     0.00     2003     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
  0.00      1.94     0.00     2001     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&)
  0.00      1.94     0.00     1991     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      1.94     0.00     1852     0.00     0.00  utils::next_int(int)
  0.00      1.94     0.00     1812     0.00     0.00  std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&)
  0.00      1.94     0.00     1784     0.00     0.00  std::uniform_real_distribution<double>::param_type::b() const
  0.00      1.94     0.00     1784     0.00     0.00  std::uniform_real_distribution<double>::param_type::param_type(double, double)
  0.00      1.94     0.00     1784     0.00     0.00  std::uniform_real_distribution<double>::uniform_real_distribution(double, double)
  0.00      1.94     0.00     1784     0.00     0.00  double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00      1.94     0.00     1784     0.00     0.00  std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00      1.94     0.00     1784     0.00     0.00  std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()()
  0.00      1.94     0.00     1784     0.00     0.00  double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  0.00      1.94     0.00     1776     0.00     0.00  __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::__normal_iterator(Polygon** const&)
  0.00      1.94     0.00     1754     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::end()
  0.00      1.94     0.00     1754     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::begin()
  0.00      1.94     0.00     1751     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Individual*>, Individual*>::_S_select_on_copy(std::allocator<Individual*> const&)
  0.00      1.94     0.00     1751     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::end() const
  0.00      1.94     0.00     1751     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::begin() const
  0.00      1.94     0.00     1751     0.00     0.00  Individual** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**)
  0.00      1.94     0.00     1751     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_create_storage(unsigned long)
  0.00      1.94     0.00     1751     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&)
  0.00      1.94     0.00     1751     0.00     0.00  std::allocator_traits<std::allocator<Individual*> >::select_on_container_copy_construction(std::allocator<Individual*> const&)
  0.00      1.94     0.00     1751     0.00     0.00  Individual** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
  0.00      1.94     0.00     1751     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&)
  0.00      1.94     0.00     1751     0.00     0.00  Individual** std::__copy_move_a<false, Individual* const*, Individual**>(Individual* const*, Individual* const*, Individual**)
  0.00      1.94     0.00     1751     0.00     0.00  Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
  0.00      1.94     0.00     1751     0.00     0.00  Individual** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
  0.00      1.94     0.00     1751     0.00     0.00  Individual** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, Individual*>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, std::allocator<Individual*>&)
  0.00      1.94     0.00     1751     0.00     0.00  Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
  0.00      1.94     0.00     1750     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::_M_range_check(unsigned long) const
  0.00      1.94     0.00     1750     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long)
  0.00      1.94     0.00     1750     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::operator[](unsigned long)
  0.00      1.94     0.00     1624     0.00     0.00  utils::random()
  0.00      1.94     0.00     1544     0.00     0.00  cv::MatStep::operator[](int)
  0.00      1.94     0.00     1501     0.00     0.00  Population::get_individuals()
  0.00      1.94     0.00     1476     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() const
  0.00      1.94     0.00     1476     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const
  0.00      1.94     0.00     1476     0.00     0.00  Polygon** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Polygon*>(Polygon* const*, Polygon* const*, Polygon**)
  0.00      1.94     0.00     1476     0.00     0.00  std::allocator_traits<std::allocator<Polygon*> >::max_size(std::allocator<Polygon*> const&)
  0.00      1.94     0.00     1476     0.00     0.00  Polygon** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**)
  0.00      1.94     0.00     1476     0.00     0.00  Polygon** std::__copy_move_a<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**)
  0.00      1.94     0.00     1476     0.00     0.00  Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**)
  0.00      1.94     0.00     1476     0.00     0.00  Polygon** std::uninitialized_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**)
  0.00      1.94     0.00     1476     0.00     0.00  Polygon** std::__uninitialized_copy_a<std::move_iterator<Polygon**>, Polygon**, Polygon*>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**, std::allocator<Polygon*>&)
  0.00      1.94     0.00     1476     0.00     0.00  Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&)
  0.00      1.94     0.00     1476     0.00     0.00  Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**)
  0.00      1.94     0.00     1253     0.00     0.00  void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&)
  0.00      1.94     0.00     1253     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const
  0.00      1.94     0.00     1253     0.00     0.00  void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&)
  0.00      1.94     0.00     1253     0.00     0.00  void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&)
  0.00      1.94     0.00     1253     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&)
  0.00      1.94     0.00     1051     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator--()
  0.00      1.94     0.00     1004     0.00     0.00  bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
  0.00      1.94     0.00      888     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Polygon**>(Polygon**, Polygon**)
  0.00      1.94     0.00      888     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long)
  0.00      1.94     0.00      888     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::end()
  0.00      1.94     0.00      888     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::begin()
  0.00      1.94     0.00      888     0.00     0.00  void std::_Destroy<Polygon**>(Polygon**, Polygon**)
  0.00      1.94     0.00      888     0.00     0.00  void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&)
  0.00      1.94     0.00      772     0.00     0.00  cv::MatStep::MatStep()
  0.00      1.94     0.00      772     0.00     0.00  cv::Mat::total() const
  0.00      1.94     0.00      753     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++()
  0.00      1.94     0.00      751     0.00     0.00  cv::Mat::Mat(int, int, int, void*, unsigned long)
  0.00      1.94     0.00      738     0.00     0.00  __gnu_cxx::new_allocator<Polygon*>::deallocate(Polygon**, unsigned long)
  0.00      1.94     0.00      738     0.00     0.00  __gnu_cxx::new_allocator<Polygon*>::allocate(unsigned long, void const*)
  0.00      1.94     0.00      738     0.00     0.00  __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::difference_type __gnu_cxx::operator-<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&)
  0.00      1.94     0.00      738     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const
  0.00      1.94     0.00      738     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_allocate(unsigned long)
  0.00      1.94     0.00      738     0.00     0.00  std::allocator_traits<std::allocator<Polygon*> >::deallocate(std::allocator<Polygon*>&, Polygon**, unsigned long)
  0.00      1.94     0.00      738     0.00     0.00  std::allocator_traits<std::allocator<Polygon*> >::allocate(std::allocator<Polygon*>&, unsigned long)
  0.00      1.94     0.00      738     0.00     0.00  void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&)
  0.00      1.94     0.00      599     0.00     0.00  Colour::random_colour()
  0.00      1.94     0.00      551     0.00     0.00  bool __gnu_cxx::__ops::_Val_less_iter::operator()<Individual*, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(Individual*&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const
  0.00      1.94     0.00      517     0.00     0.00  Point::Point(int, int)
  0.00      1.94     0.00      517     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&)
  0.00      1.94     0.00      517     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&)
  0.00      1.94     0.00      510     0.00     0.00  Polygon::add_point(Point*)
  0.00      1.94     0.00      510     0.00     0.00  void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&)
  0.00      1.94     0.00      510     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&)
  0.00      1.94     0.00      504     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::new_allocator()
  0.00      1.94     0.00      504     0.00     0.00  std::allocator<std::_List_node<Polygon*> >::allocator()
  0.00      1.94     0.00      504     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl()
  0.00      1.94     0.00      504     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_base()
  0.00      1.94     0.00      504     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list()
  0.00      1.94     0.00      501     0.00     0.00  __gnu_cxx::new_allocator<Individual*>::new_allocator()
  0.00      1.94     0.00      501     0.00     0.00  std::allocator<Individual*>::allocator()
  0.00      1.94     0.00      501     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl()
  0.00      1.94     0.00      501     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base()
  0.00      1.94     0.00      501     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::vector()
  0.00      1.94     0.00      500     0.00     0.00  Individual::Individual(int, int, int, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*)
  0.00      1.94     0.00      500     0.00     0.00  GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double)
  0.00      1.94     0.00      500     0.00     0.00  bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
  0.00      1.94     0.00      500     0.00     0.00  bool __gnu_cxx::operator< <Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
  0.00      1.94     0.00      500     0.00     0.00  bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const
  0.00      1.94     0.00      500     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl&)
  0.00      1.94     0.00      500     0.00     0.00  std::remove_reference<std::vector<Individual*, std::allocator<Individual*> >&>::type&& std::move<std::vector<Individual*, std::allocator<Individual*> >&>(std::vector<Individual*, std::allocator<Individual*> >&)
  0.00      1.94     0.00      489     0.00     0.00  __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.94     0.00      489     0.00     0.00  void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter)
  0.00      1.94     0.00      343     0.00     0.00  Individual::mutate()
  0.00      1.94     0.00      317     0.00     0.00  Point::set_x(int)
  0.00      1.94     0.00      311     0.00     0.00  Point::set_y(int)
  0.00      1.94     0.00      261     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator+(long) const
  0.00      1.94     0.00      250     0.00     0.00  sortByFitness(std::vector<Individual*, std::allocator<Individual*> >)
  0.00      1.94     0.00      250     0.00     0.00  Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >)
  0.00      1.94     0.00      250     0.00     0.00  GeneticAlgorithm::mate(Individual*, Individual*, int, int, int)
  0.00      1.94     0.00      250     0.00     0.00  __gnu_cxx::__ops::__iter_less_iter()
  0.00      1.94     0.00      250     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const
  0.00      1.94     0.00      250     0.00     0.00  std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(std::allocator<Individual*> const&)
  0.00      1.94     0.00      250     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>)
  0.00      1.94     0.00      250     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::vector(std::allocator<Individual*> const&)
  0.00      1.94     0.00      250     0.00     0.00  std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&)
  0.00      1.94     0.00      250     0.00     0.00  void std::__alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&)
  0.00      1.94     0.00      250     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.94     0.00      250     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.94     0.00      250     0.00     0.00  void std::__do_alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&, std::integral_constant<bool, true>)
  0.00      1.94     0.00      250     0.00     0.00  std::iterator_traits<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
  0.00      1.94     0.00      250     0.00     0.00  void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.94     0.00      250     0.00     0.00  std::__lg(long)
  0.00      1.94     0.00      250     0.00     0.00  std::remove_reference<std::allocator<Individual*>&>::type&& std::move<std::allocator<Individual*>&>(std::allocator<Individual*>&)
  0.00      1.94     0.00      250     0.00     0.00  void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00      1.94     0.00      250     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual*> >, std::is_move_constructible<Individual*>, std::is_move_assignable<Individual*> >::value, void>::type std::swap<Individual*>(Individual*&, Individual*&)
  0.00      1.94     0.00      250     0.00     0.00  void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
  0.00      1.94     0.00      250     0.00     0.00  void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00      1.94     0.00      250     0.00     0.00  void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag)
  0.00      1.94     0.00      250     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00      1.94     0.00      175     0.00     0.00  GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*)
  0.00      1.94     0.00      160     0.00     0.00  Colour::random_alpha()
  0.00      1.94     0.00      160     0.00     0.00  Colour::Colour(unsigned char, unsigned char, unsigned char, double)
  0.00      1.94     0.00      160     0.00     0.00  Polygon::random_polygon(int, int, int)
  0.00      1.94     0.00      160     0.00     0.00  Polygon::Polygon(Colour*)
  0.00      1.94     0.00      150     0.00     0.00  __gnu_cxx::new_allocator<Polygon*>::new_allocator()
  0.00      1.94     0.00      150     0.00     0.00  __gnu_cxx::new_allocator<Polygon*>::~new_allocator()
  0.00      1.94     0.00      150     0.00     0.00  std::allocator<Polygon*>::allocator()
  0.00      1.94     0.00      150     0.00     0.00  std::allocator<Polygon*>::~allocator()
  0.00      1.94     0.00      150     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::_Vector_impl()
  0.00      1.94     0.00      150     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::~_Vector_impl()
  0.00      1.94     0.00      150     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_base()
  0.00      1.94     0.00      150     0.00     0.00  std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base()
  0.00      1.94     0.00      150     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::vector()
  0.00      1.94     0.00      150     0.00     0.00  std::vector<Polygon*, std::allocator<Polygon*> >::~vector()
  0.00      1.94     0.00       86     0.00     0.00  Polygon::move(int, int)
  0.00      1.94     0.00       75     0.00     0.00  GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*)
  0.00      1.94     0.00       75     0.00     0.00  int const& std::max<int>(int const&, int const&)
  0.00      1.94     0.00       75     0.00     0.00  int const& std::min<int>(int const&, int const&)
  0.00      1.94     0.00       43     0.00     0.00  Colour::set_g(int)
  0.00      1.94     0.00       39     0.00     0.00  Colour::set_r(int)
  0.00      1.94     0.00       37     0.00     0.00  Colour::set_b(int)
  0.00      1.94     0.00       33     0.00     0.00  Individual** std::__niter_base<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00      1.94     0.00       31     0.00     0.00  Colour::set_a(double)
  0.00      1.94     0.00       30     0.00     0.00  Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&)
  0.00      1.94     0.00       24     0.00     0.00  std::_List_const_iterator<Polygon*>::_M_const_cast() const
  0.00      1.94     0.00       24     0.00     0.00  std::_List_const_iterator<Polygon*>::_List_const_iterator(std::_List_iterator<Polygon*> const&)
  0.00      1.94     0.00       24     0.00     0.00  void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int)
  0.00      1.94     0.00       22     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00      1.94     0.00       14     0.00     0.00  Individual::remove_dna(int)
  0.00      1.94     0.00       14     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::deallocate(std::_List_node<Polygon*>*, unsigned long)
  0.00      1.94     0.00       14     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::destroy<Polygon*>(Polygon**)
  0.00      1.94     0.00       14     0.00     0.00  std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::deallocate(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*, unsigned long)
  0.00      1.94     0.00       14     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::destroy<Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**)
  0.00      1.94     0.00       14     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_dec_size(unsigned long)
  0.00      1.94     0.00       14     0.00     0.00  std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_put_node(std::_List_node<Polygon*>*)
  0.00      1.94     0.00       14     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>)
  0.00      1.94     0.00       14     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>)
  0.00      1.94     0.00       11     0.00     0.00  Individual** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Individual*>(Individual* const*, Individual* const*, Individual**)
  0.00      1.94     0.00       11     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00      1.94     0.00       11     0.00     0.00  Individual** std::__copy_move_backward_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
  0.00      1.94     0.00       11     0.00     0.00  __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  0.00      1.94     0.00       10     0.00     0.00  Individual::insert_dna(int, Polygon*)
  0.00      1.94     0.00       10     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&)
  0.00      1.94     0.00       10     0.00     0.00  void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&)
  0.00      1.94     0.00       10     0.00     0.00  std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&)
  0.00      1.94     0.00       10     0.00     0.00  std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&)
  0.00      1.94     0.00        9     0.00     0.00  cvflann::anyimpl::base_any_policy::~base_any_policy()
  0.00      1.94     0.00        8     0.00     0.00  Polygon::remove_point()
  0.00      1.94     0.00        7     0.00     0.00  Polygon::insert_point(int, Point*)
  0.00      1.94     0.00        7     0.00     0.00  std::_List_const_iterator<Point*>::_M_const_cast() const
  0.00      1.94     0.00        7     0.00     0.00  std::_List_const_iterator<Point*>::_List_const_iterator(std::_List_iterator<Point*> const&)
  0.00      1.94     0.00        7     0.00     0.00  std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&)
  0.00      1.94     0.00        7     0.00     0.00  void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int)
  0.00      1.94     0.00        3     0.00     0.01  Individual::Individual(int, int, int, int)
  0.00      1.94     0.00        3     0.00     0.00  Individual::~Individual()
  0.00      1.94     0.00        2     0.00     0.00  std::_List_iterator<Point*>::operator--()
  0.00      1.94     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN10IndividualC2EiiiPNSt7__cxx114listIP7PolygonSaIS3_EEE
  0.00      1.94     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN16GeneticAlgorithmC2EPhii
  0.00      1.94     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7Polygon14random_polygonEiii
  0.00      1.94     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7Problem3runEPN2cv3MatEi
  0.00      1.94     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      1.94     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.94     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.94     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.94     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.94     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      1.94     0.00        1     0.00     0.00  Individual::Individual(Individual*)
  0.00      1.94     0.00        1     0.00     0.04  Population::Population(int, int, int, int, int)
  0.00      1.94     0.00        1     0.00     0.00  GeneticAlgorithm::clean_population()
  0.00      1.94     0.00        1     0.00     1.90  GeneticAlgorithm::evolve(int)
  0.00      1.94     0.00        1     0.00     0.04  GeneticAlgorithm::GeneticAlgorithm(unsigned char*, int, int)
  0.00      1.94     0.00        1     0.00     0.00  cv::Mat::create(int, int, int)
  0.00      1.94     0.00        1     0.00     0.00  cv::Mat::Mat(int, int, int)
  0.00      1.94     0.00        1     0.00     0.00  cv::Size_<int>::Size_(int, int)
  0.00      1.94     0.00        1     0.00     1.94  Problem::run(cv::Mat*, int)
  0.00      1.94     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<cvflann::anyimpl::empty_any>::~typed_base_any_policy()
  0.00      1.94     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<cvflann::flann_algorithm_t>::~typed_base_any_policy()
  0.00      1.94     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<cvflann::flann_centers_init_t>::~typed_base_any_policy()
  0.00      1.94     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~typed_base_any_policy()
  0.00      1.94     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<char const*>::~typed_base_any_policy()
  0.00      1.94     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<bool>::~typed_base_any_policy()
  0.00      1.94     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<float>::~typed_base_any_policy()
  0.00      1.94     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<int>::~typed_base_any_policy()
  0.00      1.94     0.00        1     0.00     0.00  cvflann::anyimpl::typed_base_any_policy<unsigned int>::~typed_base_any_policy()
  0.00      1.94     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      1.94     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      1.94     0.00        1     0.00     0.00  int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)
  0.00      1.94     0.00        1     0.00     0.00  cv::MatSize::operator()() const
  0.00      1.94     0.00        1     0.00     0.00  std::allocator<int>::allocator()
  0.00      1.94     0.00        1     0.00     0.00  std::allocator<int>::~allocator()
  0.00      1.94     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      1.94     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      1.94     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      1.94     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      1.94     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      1.94     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      1.94     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      1.94     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      1.94     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      1.94     0.00        1     0.00     0.00  std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, int)
  0.00      1.94     0.00        1     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      1.94     0.00        1     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      1.94     0.00        1     0.00     0.00  __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Range_chk::_S_chk(long, std::integral_constant<bool, true>)
  0.00      1.94     0.00        1     0.00     0.00  __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::_Save_errno()
  0.00      1.94     0.00        1     0.00     0.00  __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::~_Save_errno()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.52% of 1.94 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    1.94                 main [1]
                0.00    1.94       1/1           Problem::run(cv::Mat*, int) [2]
                0.00    0.00       1/1           std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, int) [431]
                0.00    0.00       1/38337       cv::Mat::~Mat() [112]
-----------------------------------------------
                0.00    1.94       1/1           main [1]
[2]    100.0    0.00    1.94       1         Problem::run(cv::Mat*, int) [2]
                0.00    1.90       1/1           GeneticAlgorithm::evolve(int) [3]
                0.00    0.04       1/1           GeneticAlgorithm::GeneticAlgorithm(unsigned char*, int, int) [13]
                0.00    0.00       1/751         Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00       2/75170       cv::_InputArray::_InputArray(cv::Mat const&) [106]
                0.00    0.00       2/187923      cv::_InputArray::~_InputArray() [66]
                0.00    0.00       1/1           cv::MatSize::operator()() const [419]
                0.00    0.00       1/1           cv::Mat::Mat(int, int, int) [405]
                0.00    0.00       1/75169       cv::_OutputArray::_OutputArray(cv::Mat&) [107]
                0.00    0.00       1/112753      cv::_OutputArray::~_OutputArray() [84]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [429]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [430]
                0.00    0.00       1/38337       cv::Mat::~Mat() [112]
-----------------------------------------------
                0.00    1.90       1/1           Problem::run(cv::Mat*, int) [2]
[3]     97.9    0.00    1.90       1         GeneticAlgorithm::evolve(int) [3]
                1.19    0.02     750/751         Individual::draw_CV(unsigned char*, int, int) [4]
                0.62    0.00     750/750         utils::diff(unsigned char const*, unsigned char const*, int, int) [5]
                0.00    0.05     250/250         GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [8]
                0.00    0.01     500/500         GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [18]
                0.00    0.01     250/250         Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >) [32]
                0.00    0.00    2000/2251        std::vector<Individual*, std::allocator<Individual*> >::~vector() [231]
                0.00    0.00    1500/1501        Population::get_individuals() [263]
                0.00    0.00    1250/1750        std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [260]
                0.00    0.00     750/1253        std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [279]
                0.00    0.00     250/2411        Individual::get_len_dna() [227]
                0.00    0.00     250/250         sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [324]
                0.00    0.00     250/501         std::vector<Individual*, std::allocator<Individual*> >::vector() [313]
                0.00    0.00     250/1751        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
                0.00    0.00       1/1           Individual::Individual(Individual*) [402]
                0.00    0.00       1/1           GeneticAlgorithm::clean_population() [403]
-----------------------------------------------
                0.00    0.00       1/751         Problem::run(cv::Mat*, int) [2]
                1.19    0.02     750/751         GeneticAlgorithm::evolve(int) [3]
[4]     62.4    1.19    0.02     751         Individual::draw_CV(unsigned char*, int, int) [4]
                0.01    0.00   75168/75168       Colour::get_a() [23]
                0.00    0.01   37584/37745       Polygon::get_points_length() [35]
                0.00    0.00  157242/157242      cv::Point_<int>::Point_() [68]
                0.00    0.00  119658/120286      Polygon::get_point(int) [73]
                0.00    0.00  119658/120218      Point::get_y() [77]
                0.00    0.00  119658/120218      Point::get_x() [76]
                0.00    0.00  119658/119658      cv::Point_<int>::Point_(int, int) [78]
                0.00    0.00  119658/119658      cv::Point_<int>::operator=(cv::Point_<int>&&) [79]
                0.00    0.00   75168/75170       cv::_InputArray::_InputArray(cv::Mat const&) [106]
                0.00    0.00   75168/187923      cv::_InputArray::~_InputArray() [66]
                0.00    0.00   38335/38485       std::_List_iterator<Polygon*>::operator!=(std::_List_iterator<Polygon*> const&) const [110]
                0.00    0.00   38335/38337       cv::Mat::~Mat() [112]
                0.00    0.00   37584/63162       std::_List_iterator<Polygon*>::operator*() const [108]
                0.00    0.00   37584/37584       cv::Mat::clone() const [124]
                0.00    0.00   37584/37584       Colour::get_r() [123]
                0.00    0.00   37584/37584       Colour::get_g() [122]
                0.00    0.00   37584/37584       Colour::get_b() [121]
                0.00    0.00   37584/37584       cv::Scalar_<double>::Scalar_(double, double, double, double) [120]
                0.00    0.00   37584/37584       cv::_InputOutputArray::_InputOutputArray(cv::Mat&) [115]
                0.00    0.00   37584/37584       cv::_InputOutputArray::~_InputOutputArray() [116]
                0.00    0.00   37584/75169       cv::_OutputArray::_OutputArray(cv::Mat&) [107]
                0.00    0.00   37584/112753      cv::_OutputArray::~_OutputArray() [84]
                0.00    0.00   37584/662331      std::_List_iterator<Polygon*>::operator++() [56]
                0.00    0.00     751/751         cv::Mat::Mat(int, int, int, void*, unsigned long) [291]
                0.00    0.00     751/26195       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [135]
                0.00    0.00     751/25978       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end() [136]
-----------------------------------------------
                0.62    0.00     750/750         GeneticAlgorithm::evolve(int) [3]
[5]     32.0    0.62    0.00     750         utils::diff(unsigned char const*, unsigned char const*, int, int) [5]
-----------------------------------------------
                0.05    0.02    4235/4235        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [7]
[6]      3.6    0.05    0.02    4235         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [6]
                0.01    0.00 2642640/2642640     unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [20]
                0.00    0.01 2638405/2638405     unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [22]
-----------------------------------------------
                0.00    0.00     160/4235        Colour::random_alpha() [41]
                0.00    0.01     599/4235        Colour::random_colour() [19]
                0.00    0.03    1624/4235        utils::random() [9]
                0.00    0.03    1852/4235        utils::next_int(int) [14]
[7]      3.6    0.00    0.07    4235         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [7]
                0.05    0.02    4235/4235        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [6]
-----------------------------------------------
                0.00    0.05     250/250         GeneticAlgorithm::evolve(int) [3]
[8]      2.5    0.00    0.05     250         GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [8]
                0.00    0.03     343/343         Individual::mutate() [15]
                0.00    0.02     750/1624        utils::random() [9]
                0.00    0.00      75/75          GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
                0.00    0.00     500/504         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list() [308]
                0.00    0.00     500/500         Individual::Individual(int, int, int, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [314]
                0.00    0.00     500/1253        std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [279]
                0.00    0.00     250/501         std::vector<Individual*, std::allocator<Individual*> >::vector() [313]
                0.00    0.00     175/175         GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [343]
-----------------------------------------------
                0.00    0.01     374/1624        Individual::mutate() [15]
                0.00    0.01     500/1624        GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [18]
                0.00    0.02     750/1624        GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [8]
[9]      2.1    0.00    0.04    1624         utils::random() [9]
                0.00    0.03    1624/4235        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [7]
                0.00    0.01    1624/1784        double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [16]
                0.00    0.00    1624/4235        std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [174]
                0.00    0.00    1624/4235        std::random_device::operator()() [176]
                0.00    0.00    1624/1784        std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [240]
                0.00    0.00    1624/4235        std::random_device::~random_device() [175]
-----------------------------------------------
                0.00    0.00      10/160         Individual::mutate() [15]
                0.00    0.04     150/160         Individual::Individual(int, int, int, int) [11]
[10]     2.1    0.00    0.04     160         Polygon::random_polygon(int, int, int) [10]
                0.00    0.02    1020/1852        utils::next_int(int) [14]
                0.00    0.01     510/510         Polygon::add_point(Point*) [36]
                0.00    0.01     480/599         Colour::random_colour() [19]
                0.00    0.00     160/160         Colour::random_alpha() [41]
                0.00    0.00     510/517         Point::Point(int, int) [301]
                0.00    0.00     160/160         Colour::Colour(unsigned char, unsigned char, unsigned char, double) [344]
                0.00    0.00     160/160         Polygon::Polygon(Colour*) [345]
-----------------------------------------------
                0.00    0.04       3/3           Population::Population(int, int, int, int, int) [12]
[11]     2.0    0.00    0.04       3         Individual::Individual(int, int, int, int) [11]
                0.00    0.04     150/160         Polygon::random_polygon(int, int, int) [10]
                0.00    0.00     150/25224       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [156]
                0.00    0.00       3/504         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list() [308]
-----------------------------------------------
                0.00    0.04       1/1           GeneticAlgorithm::GeneticAlgorithm(unsigned char*, int, int) [13]
[12]     2.0    0.00    0.04       1         Population::Population(int, int, int, int, int) [12]
                0.00    0.04       3/3           Individual::Individual(int, int, int, int) [11]
                0.00    0.00       3/1253        std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [279]
                0.00    0.00       1/501         std::vector<Individual*, std::allocator<Individual*> >::vector() [313]
-----------------------------------------------
                0.00    0.04       1/1           Problem::run(cv::Mat*, int) [2]
[13]     2.0    0.00    0.04       1         GeneticAlgorithm::GeneticAlgorithm(unsigned char*, int, int) [13]
                0.00    0.04       1/1           Population::Population(int, int, int, int, int) [12]
-----------------------------------------------
                0.00    0.00     150/1852        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
                0.00    0.00     172/1852        Polygon::move(int, int) [44]
                0.00    0.01     510/1852        Individual::mutate() [15]
                0.00    0.02    1020/1852        Polygon::random_polygon(int, int, int) [10]
[14]     1.7    0.00    0.03    1852         utils::next_int(int) [14]
                0.00    0.03    1852/4235        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [7]
                0.00    0.00    1852/2451        int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [42]
                0.00    0.00    1852/4235        std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [174]
                0.00    0.00    1852/4235        std::random_device::operator()() [176]
                0.00    0.00    1852/2451        std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [226]
                0.00    0.00    1852/4235        std::random_device::~random_device() [175]
-----------------------------------------------
                0.00    0.03     343/343         GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [8]
[15]     1.4    0.00    0.03     343         Individual::mutate() [15]
                0.00    0.01     374/1624        utils::random() [9]
                0.00    0.01     510/1852        utils::next_int(int) [14]
                0.00    0.00      86/86          Polygon::move(int, int) [44]
                0.00    0.00      10/160         Polygon::random_polygon(int, int, int) [10]
                0.00    0.00     119/599         Colour::random_colour() [19]
                0.00    0.00       7/7           Polygon::insert_point(int, Point*) [46]
                0.00    0.00      75/37745       Polygon::get_points_length() [35]
                0.00    0.00       8/8           Polygon::remove_point() [48]
                0.00    0.00     343/2754        std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const [203]
                0.00    0.00     343/25417       Individual::get_dna(int) [139]
                0.00    0.00      68/120286      Polygon::get_point(int) [73]
                0.00    0.00      43/43          Colour::set_g(int) [358]
                0.00    0.00      39/39          Colour::set_r(int) [359]
                0.00    0.00      37/37          Colour::set_b(int) [360]
                0.00    0.00      37/317         Point::set_x(int) [321]
                0.00    0.00      31/31          Colour::set_a(double) [362]
                0.00    0.00      31/311         Point::set_y(int) [322]
                0.00    0.00      14/14          Individual::remove_dna(int) [368]
                0.00    0.00      10/10          Individual::insert_dna(int, Polygon*) [381]
                0.00    0.00       7/517         Point::Point(int, int) [301]
-----------------------------------------------
                0.00    0.00     160/1784        Colour::random_alpha() [41]
                0.00    0.01    1624/1784        utils::random() [9]
[16]     0.8    0.00    0.02    1784         double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [16]
                0.01    0.01    1784/1784        double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
-----------------------------------------------
                0.01    0.01    1784/1784        double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [16]
[17]     0.8    0.01    0.01    1784         double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
                0.00    0.01    1784/1784        std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()() [39]
                0.00    0.00    3568/3568        std::uniform_real_distribution<double>::param_type::a() const [181]
                0.00    0.00    1784/1784        std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [241]
                0.00    0.00    1784/1784        std::uniform_real_distribution<double>::param_type::b() const [238]
-----------------------------------------------
                0.00    0.01     500/500         GeneticAlgorithm::evolve(int) [3]
[18]     0.7    0.00    0.01     500         GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [18]
                0.00    0.01     500/1624        utils::random() [9]
                0.00    0.00     500/9013        std::vector<Individual*, std::allocator<Individual*> >::size() const [159]
                0.00    0.00     500/1750        std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [260]
-----------------------------------------------
                0.00    0.00     119/599         Individual::mutate() [15]
                0.00    0.01     480/599         Polygon::random_polygon(int, int, int) [10]
[19]     0.6    0.00    0.01     599         Colour::random_colour() [19]
                0.00    0.01     599/4235        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [7]
                0.00    0.00     599/2451        int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [42]
                0.00    0.00     599/4235        std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [174]
                0.00    0.00     599/4235        std::random_device::operator()() [176]
                0.00    0.00     599/2451        std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [226]
                0.00    0.00     599/4235        std::random_device::~random_device() [175]
-----------------------------------------------
                0.01    0.00 2642640/2642640     std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [6]
[20]     0.5    0.01    0.00 2642640         unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [20]
                0.00    0.00 2642640/2642640     std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long) [55]
-----------------------------------------------
                0.01    0.00 2638405/2638405     unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [22]
[21]     0.5    0.01    0.00 2638405         std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long) [21]
-----------------------------------------------
                0.00    0.01 2638405/2638405     std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [6]
[22]     0.5    0.00    0.01 2638405         unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [22]
                0.01    0.00 2638405/2638405     std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long) [21]
-----------------------------------------------
                0.01    0.00   75168/75168       Individual::draw_CV(unsigned char*, int, int) [4]
[23]     0.5    0.01    0.00   75168         Colour::get_a() [23]
-----------------------------------------------
                0.01    0.00   37753/37753       std::__cxx11::list<Point*, std::allocator<Point*> >::_M_node_count() const [25]
[24]     0.5    0.01    0.00   37753         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_size() const [24]
-----------------------------------------------
                0.00    0.01   37753/37753       std::__cxx11::list<Point*, std::allocator<Point*> >::size() const [26]
[25]     0.5    0.00    0.01   37753         std::__cxx11::list<Point*, std::allocator<Point*> >::_M_node_count() const [25]
                0.01    0.00   37753/37753       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_size() const [24]
-----------------------------------------------
                0.00    0.00       8/37753       Polygon::remove_point() [48]
                0.00    0.01   37745/37753       Polygon::get_points_length() [35]
[26]     0.5    0.00    0.01   37753         std::__cxx11::list<Point*, std::allocator<Point*> >::size() const [26]
                0.00    0.01   37753/37753       std::__cxx11::list<Point*, std::allocator<Point*> >::_M_node_count() const [25]
-----------------------------------------------
                0.00    0.00    2451/6019        int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [43]
                0.00    0.01    3568/6019        double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [40]
[27]     0.5    0.00    0.01    6019         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [27]
                0.01    0.00    4235/4235        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [28]
-----------------------------------------------
                0.01    0.00    4235/4235        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [27]
[28]     0.5    0.01    0.00    4235         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [28]
-----------------------------------------------
                0.01    0.00    1500/1500        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl&) [31]
[29]     0.5    0.01    0.00    1500         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual**> >, std::is_move_constructible<Individual**>, std::is_move_assignable<Individual**> >::value, void>::type std::swap<Individual**>(Individual**&, Individual**&) [29]
                0.00    0.00    4500/4500        std::remove_reference<Individual**&>::type&& std::move<Individual**&>(Individual**&) [170]
-----------------------------------------------
                0.00    0.00       7/517         std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [47]
                0.01    0.00     510/517         void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&) [37]
[30]     0.5    0.01    0.00     517         std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
                0.00    0.00     517/88428       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node() [92]
                0.00    0.00     517/88428       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator() [94]
                0.00    0.00     517/2061        Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&) [233]
                0.00    0.00     517/88428       std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*) [88]
                0.00    0.00     517/296625      std::_List_node<Point*>::_M_valptr() [61]
                0.00    0.00     517/517         void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&) [303]
                0.00    0.00     517/88428       std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::operator=(decltype(nullptr)) [90]
                0.00    0.00     517/88428       std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::~__allocated_ptr() [89]
-----------------------------------------------
                0.00    0.01     500/500         std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [33]
[31]     0.5    0.00    0.01     500         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl&) [31]
                0.01    0.00    1500/1500        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual**> >, std::is_move_constructible<Individual**>, std::is_move_assignable<Individual**> >::value, void>::type std::swap<Individual**>(Individual**&, Individual**&) [29]
-----------------------------------------------
                0.00    0.01     250/250         GeneticAlgorithm::evolve(int) [3]
[32]     0.5    0.00    0.01     250         Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >) [32]
                0.00    0.01     250/250         std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&) [34]
                0.00    0.00     250/500         std::remove_reference<std::vector<Individual*, std::allocator<Individual*> >&>::type&& std::move<std::vector<Individual*, std::allocator<Individual*> >&>(std::vector<Individual*, std::allocator<Individual*> >&) [318]
-----------------------------------------------
                0.00    0.01     250/250         std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&) [34]
[33]     0.5    0.00    0.01     250         std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [33]
                0.00    0.01     500/500         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl&) [31]
                0.00    0.00     500/8261        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [161]
                0.00    0.00     250/250         std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const [326]
                0.00    0.00     250/250         std::vector<Individual*, std::allocator<Individual*> >::vector(std::allocator<Individual*> const&) [328]
                0.00    0.00     250/4252        std::allocator<Individual*>::~allocator() [173]
                0.00    0.00     250/250         void std::__alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&) [329]
                0.00    0.00     250/2251        std::vector<Individual*, std::allocator<Individual*> >::~vector() [231]
-----------------------------------------------
                0.00    0.01     250/250         Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >) [32]
[34]     0.5    0.00    0.01     250         std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&) [34]
                0.00    0.01     250/250         std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [33]
                0.00    0.00     250/500         std::remove_reference<std::vector<Individual*, std::allocator<Individual*> >&>::type&& std::move<std::vector<Individual*, std::allocator<Individual*> >&>(std::vector<Individual*, std::allocator<Individual*> >&) [318]
-----------------------------------------------
                0.00    0.00      75/37745       Individual::mutate() [15]
                0.00    0.00      86/37745       Polygon::move(int, int) [44]
                0.00    0.01   37584/37745       Individual::draw_CV(unsigned char*, int, int) [4]
[35]     0.5    0.00    0.01   37745         Polygon::get_points_length() [35]
                0.00    0.01   37745/37753       std::__cxx11::list<Point*, std::allocator<Point*> >::size() const [26]
-----------------------------------------------
                0.00    0.01     510/510         Polygon::random_polygon(int, int, int) [10]
[36]     0.5    0.00    0.01     510         Polygon::add_point(Point*) [36]
                0.00    0.01     510/510         std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&) [38]
-----------------------------------------------
                0.00    0.01     510/510         std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&) [38]
[37]     0.5    0.00    0.01     510         void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&) [37]
                0.01    0.00     510/517         std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
                0.00    0.00     510/2061        Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&) [233]
                0.00    0.00     510/88428       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long) [93]
-----------------------------------------------
                0.00    0.01     510/510         Polygon::add_point(Point*) [36]
[38]     0.5    0.00    0.01     510         std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&) [38]
                0.00    0.01     510/510         void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&) [37]
                0.00    0.00     510/116039      std::__cxx11::list<Point*, std::allocator<Point*> >::end() [81]
-----------------------------------------------
                0.00    0.01    1784/1784        double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
[39]     0.3    0.00    0.01    1784         std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()() [39]
                0.00    0.01    1784/1784        double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [40]
-----------------------------------------------
                0.00    0.01    1784/1784        std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()() [39]
[40]     0.3    0.00    0.01    1784         double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [40]
                0.00    0.01    3568/6019        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [27]
                0.00    0.00    3568/3568        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min() [182]
-----------------------------------------------
                0.00    0.00     160/160         Polygon::random_polygon(int, int, int) [10]
[41]     0.2    0.00    0.00     160         Colour::random_alpha() [41]
                0.00    0.00     160/4235        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [7]
                0.00    0.00     160/1784        double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [16]
                0.00    0.00     160/4235        std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [174]
                0.00    0.00     160/4235        std::random_device::operator()() [176]
                0.00    0.00     160/1784        std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [240]
                0.00    0.00     160/4235        std::random_device::~random_device() [175]
-----------------------------------------------
                0.00    0.00     599/2451        Colour::random_colour() [19]
                0.00    0.00    1852/2451        utils::next_int(int) [14]
[42]     0.2    0.00    0.00    2451         int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [42]
                0.00    0.00    2451/2451        int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [43]
-----------------------------------------------
                0.00    0.00    2451/2451        int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [42]
[43]     0.2    0.00    0.00    2451         int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [43]
                0.00    0.00    2451/6019        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [27]
                0.00    0.00    4902/4902        std::uniform_int_distribution<int>::param_type::a() const [168]
                0.00    0.00    2451/2451        std::uniform_int_distribution<int>::param_type::b() const [224]
-----------------------------------------------
                0.00    0.00      86/86          Individual::mutate() [15]
[44]     0.2    0.00    0.00      86         Polygon::move(int, int) [44]
                0.00    0.00     172/1852        utils::next_int(int) [14]
                0.00    0.00      86/37745       Polygon::get_points_length() [35]
                0.00    0.00     560/120286      Polygon::get_point(int) [73]
                0.00    0.00     560/120218      Point::get_x() [76]
                0.00    0.00     560/120218      Point::get_y() [77]
                0.00    0.00     280/317         Point::set_x(int) [321]
                0.00    0.00     280/311         Point::set_y(int) [322]
-----------------------------------------------
                0.00    0.00      75/75          GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [8]
[45]     0.1    0.00    0.00      75         GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
                0.00    0.00     150/1852        utils::next_int(int) [14]
                0.00    0.00   10050/27618       Polygon::Polygon(Polygon*) [134]
                0.00    0.00    7506/25417       Individual::get_dna(int) [139]
                0.00    0.00    7506/25224       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [156]
                0.00    0.00    2694/2694        bool __gnu_cxx::operator!=<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [206]
                0.00    0.00    2544/2544        std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [212]
                0.00    0.00    2544/2544        std::vector<Polygon*, std::allocator<Polygon*> >::operator[](unsigned long) [213]
                0.00    0.00    2544/2544        __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator*() const [209]
                0.00    0.00    2544/2544        __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator++() [208]
                0.00    0.00    1761/2411        Individual::get_len_dna() [227]
                0.00    0.00     150/150         std::vector<Polygon*, std::allocator<Polygon*> >::vector() [354]
                0.00    0.00     150/888         std::vector<Polygon*, std::allocator<Polygon*> >::begin() [285]
                0.00    0.00     150/888         std::vector<Polygon*, std::allocator<Polygon*> >::end() [284]
                0.00    0.00     150/150         std::vector<Polygon*, std::allocator<Polygon*> >::~vector() [355]
                0.00    0.00      75/75          int const& std::min<int>(int const&, int const&) [357]
                0.00    0.00      75/75          int const& std::max<int>(int const&, int const&) [356]
                0.00    0.00      75/3027        std::vector<Polygon*, std::allocator<Polygon*> >::size() const [192]
-----------------------------------------------
                0.00    0.00       7/7           Individual::mutate() [15]
[46]     0.0    0.00    0.00       7         Polygon::insert_point(int, Point*) [46]
                0.00    0.00       7/7           std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [47]
                0.00    0.00       7/147911      std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [70]
                0.00    0.00       7/7           void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int) [389]
                0.00    0.00       7/7           std::_List_const_iterator<Point*>::_List_const_iterator(std::_List_iterator<Point*> const&) [388]
-----------------------------------------------
                0.00    0.00       7/7           Polygon::insert_point(int, Point*) [46]
[47]     0.0    0.00    0.00       7         std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [47]
                0.00    0.00       7/517         std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
                0.00    0.00       7/7           std::_List_const_iterator<Point*>::_M_const_cast() const [387]
                0.00    0.00       7/88428       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long) [93]
                0.00    0.00       7/263964      std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [62]
-----------------------------------------------
                0.00    0.00       8/8           Individual::mutate() [15]
[48]     0.0    0.00    0.00       8         Polygon::remove_point() [48]
                0.00    0.00       8/37753       std::__cxx11::list<Point*, std::allocator<Point*> >::size() const [26]
-----------------------------------------------
                0.00    0.00 2642640/2642640     unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [20]
[55]     0.0    0.00    0.00 2642640         std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long) [55]
-----------------------------------------------
                0.00    0.00     147/662331      Individual::~Individual() [390]
                0.00    0.00   37584/662331      Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00  624600/662331      void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag) [138]
[56]     0.0    0.00    0.00  662331         std::_List_iterator<Polygon*>::operator++() [56]
-----------------------------------------------
                0.00    0.00   87911/351644      void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&) [103]
                0.00    0.00   87911/351644      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [102]
                0.00    0.00   87911/351644      void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&) [101]
                0.00    0.00   87911/351644      void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&) [100]
[57]     0.0    0.00    0.00  351644         Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&) [57]
-----------------------------------------------
                0.00    0.00   37584/338260      cv::_OutputArray::_OutputArray() [114]
                0.00    0.00   37584/338260      cv::_InputOutputArray::_InputOutputArray(cv::Mat&) [115]
                0.00    0.00   75169/338260      cv::_OutputArray::_OutputArray(cv::Mat&) [107]
                0.00    0.00   75170/338260      cv::_InputArray::_InputArray(cv::Mat const&) [106]
                0.00    0.00  112753/338260      cv::_InputArray::_InputArray() [83]
[58]     0.0    0.00    0.00  338260         cv::_InputArray::init(int, void const*) [58]
-----------------------------------------------
                0.00    0.00  296625/296625      std::_List_node<Point*>::_M_valptr() [61]
[59]     0.0    0.00    0.00  296625         __gnu_cxx::__aligned_membuf<Point*>::_M_ptr() [59]
                0.00    0.00  296625/296625      __gnu_cxx::__aligned_membuf<Point*>::_M_addr() [60]
-----------------------------------------------
                0.00    0.00  296625/296625      __gnu_cxx::__aligned_membuf<Point*>::_M_ptr() [59]
[60]     0.0    0.00    0.00  296625         __gnu_cxx::__aligned_membuf<Point*>::_M_addr() [60]
-----------------------------------------------
                0.00    0.00     517/296625      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
                0.00    0.00   87911/296625      std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [102]
                0.00    0.00  208197/296625      std::_List_iterator<Point*>::operator*() const [65]
[61]     0.0    0.00    0.00  296625         std::_List_node<Point*>::_M_valptr() [61]
                0.00    0.00  296625/296625      __gnu_cxx::__aligned_membuf<Point*>::_M_ptr() [59]
-----------------------------------------------
                0.00    0.00       7/263964      std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [47]
                0.00    0.00       7/263964      std::_List_const_iterator<Point*>::_M_const_cast() const [387]
                0.00    0.00  116039/263964      std::__cxx11::list<Point*, std::allocator<Point*> >::end() [81]
                0.00    0.00  147911/263964      std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [70]
[62]     0.0    0.00    0.00  263964         std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [62]
-----------------------------------------------
                0.00    0.00  239316/239316      cv::Point_<int>::operator=(cv::Point_<int>&&) [79]
[63]     0.0    0.00    0.00  239316         std::remove_reference<int&>::type&& std::move<int&>(int&) [63]
-----------------------------------------------
                0.00    0.00   87911/227247      Polygon::Polygon(Polygon*) [134]
                0.00    0.00  139336/227247      void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag) [72]
[64]     0.0    0.00    0.00  227247         std::_List_iterator<Point*>::operator++() [64]
-----------------------------------------------
                0.00    0.00   87911/208197      Polygon::Polygon(Polygon*) [134]
                0.00    0.00  120286/208197      Polygon::get_point(int) [73]
[65]     0.0    0.00    0.00  208197         std::_List_iterator<Point*>::operator*() const [65]
                0.00    0.00  208197/296625      std::_List_node<Point*>::_M_valptr() [61]
-----------------------------------------------
                0.00    0.00       2/187923      Problem::run(cv::Mat*, int) [2]
                0.00    0.00   75168/187923      Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00  112753/187923      cv::_OutputArray::~_OutputArray() [84]
[66]     0.0    0.00    0.00  187923         cv::_InputArray::~_InputArray() [66]
-----------------------------------------------
                0.00    0.00   75170/187923      cv::_InputArray::_InputArray(cv::Mat const&) [106]
                0.00    0.00  112753/187923      cv::_InputArray::_InputArray() [83]
[67]     0.0    0.00    0.00  187923         cv::Size_<int>::Size_() [67]
-----------------------------------------------
                0.00    0.00  157242/157242      Individual::draw_CV(unsigned char*, int, int) [4]
[68]     0.0    0.00    0.00  157242         cv::Point_<int>::Point_() [68]
-----------------------------------------------
                0.00    0.00  151110/151110      cv::Mat::~Mat() [112]
[69]     0.0    0.00    0.00  151110         cv::Mat::release() [69]
-----------------------------------------------
                0.00    0.00       7/147911      Polygon::insert_point(int, Point*) [46]
                0.00    0.00   27618/147911      Polygon::Polygon(Polygon*) [134]
                0.00    0.00  120286/147911      Polygon::get_point(int) [73]
[70]     0.0    0.00    0.00  147911         std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [70]
                0.00    0.00  147911/263964      std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [62]
-----------------------------------------------
                0.00    0.00       7/120293      void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int) [389]
                0.00    0.00  120286/120293      void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long) [75]
[71]     0.0    0.00    0.00  120293         std::iterator_traits<std::_List_iterator<Point*> >::iterator_category std::__iterator_category<std::_List_iterator<Point*> >(std::_List_iterator<Point*> const&) [71]
-----------------------------------------------
                0.00    0.00       7/120293      void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int) [389]
                0.00    0.00  120286/120293      void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long) [75]
[72]     0.0    0.00    0.00  120293         void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag) [72]
                0.00    0.00  139336/227247      std::_List_iterator<Point*>::operator++() [64]
                0.00    0.00       2/2           std::_List_iterator<Point*>::operator--() [391]
-----------------------------------------------
                0.00    0.00      68/120286      Individual::mutate() [15]
                0.00    0.00     560/120286      Polygon::move(int, int) [44]
                0.00    0.00  119658/120286      Individual::draw_CV(unsigned char*, int, int) [4]
[73]     0.0    0.00    0.00  120286         Polygon::get_point(int) [73]
                0.00    0.00  120286/147911      std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [70]
                0.00    0.00  120286/120286      std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type) [74]
                0.00    0.00  120286/208197      std::_List_iterator<Point*>::operator*() const [65]
-----------------------------------------------
                0.00    0.00  120286/120286      Polygon::get_point(int) [73]
[74]     0.0    0.00    0.00  120286         std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type) [74]
                0.00    0.00  120286/120286      void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long) [75]
-----------------------------------------------
                0.00    0.00  120286/120286      std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type) [74]
[75]     0.0    0.00    0.00  120286         void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long) [75]
                0.00    0.00  120286/120293      std::iterator_traits<std::_List_iterator<Point*> >::iterator_category std::__iterator_category<std::_List_iterator<Point*> >(std::_List_iterator<Point*> const&) [71]
                0.00    0.00  120286/120293      void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag) [72]
-----------------------------------------------
                0.00    0.00     560/120218      Polygon::move(int, int) [44]
                0.00    0.00  119658/120218      Individual::draw_CV(unsigned char*, int, int) [4]
[76]     0.0    0.00    0.00  120218         Point::get_x() [76]
-----------------------------------------------
                0.00    0.00     560/120218      Polygon::move(int, int) [44]
                0.00    0.00  119658/120218      Individual::draw_CV(unsigned char*, int, int) [4]
[77]     0.0    0.00    0.00  120218         Point::get_y() [77]
-----------------------------------------------
                0.00    0.00  119658/119658      Individual::draw_CV(unsigned char*, int, int) [4]
[78]     0.0    0.00    0.00  119658         cv::Point_<int>::Point_(int, int) [78]
-----------------------------------------------
                0.00    0.00  119658/119658      Individual::draw_CV(unsigned char*, int, int) [4]
[79]     0.0    0.00    0.00  119658         cv::Point_<int>::operator=(cv::Point_<int>&&) [79]
                0.00    0.00  239316/239316      std::remove_reference<int&>::type&& std::move<int&>(int&) [63]
-----------------------------------------------
                0.00    0.00      10/117459      void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&) [382]
                0.00    0.00     517/117459      void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&) [302]
                0.00    0.00    1253/117459      void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&) [275]
                0.00    0.00    2544/117459      void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [207]
                0.00    0.00   25224/117459      void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [152]
                0.00    0.00   87911/117459      void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&) [100]
[80]     0.0    0.00    0.00  117459         operator new(unsigned long, void*) [80]
-----------------------------------------------
                0.00    0.00     510/116039      std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&) [38]
                0.00    0.00   27618/116039      Polygon::Polygon(Polygon*) [134]
                0.00    0.00   87911/116039      std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&) [104]
[81]     0.0    0.00    0.00  116039         std::__cxx11::list<Point*, std::allocator<Point*> >::end() [81]
                0.00    0.00  116039/263964      std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [62]
-----------------------------------------------
                0.00    0.00  115529/115529      Polygon::Polygon(Polygon*) [134]
[82]     0.0    0.00    0.00  115529         std::_List_iterator<Point*>::operator!=(std::_List_iterator<Point*> const&) const [82]
-----------------------------------------------
                0.00    0.00   37584/112753      cv::_OutputArray::_OutputArray() [114]
                0.00    0.00   75169/112753      cv::_OutputArray::_OutputArray(cv::Mat&) [107]
[83]     0.0    0.00    0.00  112753         cv::_InputArray::_InputArray() [83]
                0.00    0.00  112753/187923      cv::Size_<int>::Size_() [67]
                0.00    0.00  112753/338260      cv::_InputArray::init(int, void const*) [58]
-----------------------------------------------
                0.00    0.00       1/112753      Problem::run(cv::Mat*, int) [2]
                0.00    0.00   37584/112753      Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00   37584/112753      cv::Mat::clone() const [124]
                0.00    0.00   37584/112753      cv::_InputOutputArray::~_InputOutputArray() [116]
[84]     0.0    0.00    0.00  112753         cv::_OutputArray::~_OutputArray() [84]
                0.00    0.00  112753/187923      cv::_InputArray::~_InputArray() [66]
-----------------------------------------------
                0.00    0.00     738/109266      void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
                0.00    0.00    2544/109266      void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [211]
                0.00    0.00    2544/109266      void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [210]
                0.00    0.00    2544/109266      void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [207]
                0.00    0.00   25224/109266      void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&) [155]
                0.00    0.00   25224/109266      std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [154]
                0.00    0.00   25224/109266      void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&) [153]
                0.00    0.00   25224/109266      void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [152]
[85]     0.0    0.00    0.00  109266         Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [85]
-----------------------------------------------
                0.00    0.00   88428/88428       std::allocator_traits<std::allocator<std::_List_node<Point*> > >::allocate(std::allocator<std::_List_node<Point*> >&, unsigned long) [91]
[86]     0.0    0.00    0.00   88428         __gnu_cxx::new_allocator<std::_List_node<Point*> >::allocate(unsigned long, void const*) [86]
                0.00    0.00   88428/88428       __gnu_cxx::new_allocator<std::_List_node<Point*> >::max_size() const [87]
-----------------------------------------------
                0.00    0.00   88428/88428       __gnu_cxx::new_allocator<std::_List_node<Point*> >::allocate(unsigned long, void const*) [86]
[87]     0.0    0.00    0.00   88428         __gnu_cxx::new_allocator<std::_List_node<Point*> >::max_size() const [87]
-----------------------------------------------
                0.00    0.00     517/88428       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
                0.00    0.00   87911/88428       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [102]
[88]     0.0    0.00    0.00   88428         std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*) [88]
                0.00    0.00   88428/88428       std::allocator<std::_List_node<Point*> >* std::__addressof<std::allocator<std::_List_node<Point*> > >(std::allocator<std::_List_node<Point*> >&) [95]
-----------------------------------------------
                0.00    0.00     517/88428       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
                0.00    0.00   87911/88428       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [102]
[89]     0.0    0.00    0.00   88428         std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::~__allocated_ptr() [89]
-----------------------------------------------
                0.00    0.00     517/88428       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
                0.00    0.00   87911/88428       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [102]
[90]     0.0    0.00    0.00   88428         std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::operator=(decltype(nullptr)) [90]
-----------------------------------------------
                0.00    0.00   88428/88428       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node() [92]
[91]     0.0    0.00    0.00   88428         std::allocator_traits<std::allocator<std::_List_node<Point*> > >::allocate(std::allocator<std::_List_node<Point*> >&, unsigned long) [91]
                0.00    0.00   88428/88428       __gnu_cxx::new_allocator<std::_List_node<Point*> >::allocate(unsigned long, void const*) [86]
-----------------------------------------------
                0.00    0.00     517/88428       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
                0.00    0.00   87911/88428       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [102]
[92]     0.0    0.00    0.00   88428         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node() [92]
                0.00    0.00   88428/88428       std::allocator_traits<std::allocator<std::_List_node<Point*> > >::allocate(std::allocator<std::_List_node<Point*> >&, unsigned long) [91]
-----------------------------------------------
                0.00    0.00       7/88428       std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [47]
                0.00    0.00     510/88428       void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&) [37]
                0.00    0.00   87911/88428       void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&) [103]
[93]     0.0    0.00    0.00   88428         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long) [93]
-----------------------------------------------
                0.00    0.00     517/88428       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
                0.00    0.00   87911/88428       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [102]
[94]     0.0    0.00    0.00   88428         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator() [94]
-----------------------------------------------
                0.00    0.00   88428/88428       std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*) [88]
[95]     0.0    0.00    0.00   88428         std::allocator<std::_List_node<Point*> >* std::__addressof<std::allocator<std::_List_node<Point*> > >(std::allocator<std::_List_node<Point*> >&) [95]
-----------------------------------------------
                0.00    0.00   88410/88410       std::_List_node<Polygon*>::_M_valptr() [98]
[96]     0.0    0.00    0.00   88410         __gnu_cxx::__aligned_membuf<Polygon*>::_M_ptr() [96]
                0.00    0.00   88410/88410       __gnu_cxx::__aligned_membuf<Polygon*>::_M_addr() [97]
-----------------------------------------------
                0.00    0.00   88410/88410       __gnu_cxx::__aligned_membuf<Polygon*>::_M_ptr() [96]
[97]     0.0    0.00    0.00   88410         __gnu_cxx::__aligned_membuf<Polygon*>::_M_addr() [97]
-----------------------------------------------
                0.00    0.00      10/88410       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [384]
                0.00    0.00      14/88410       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [376]
                0.00    0.00   25224/88410       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [154]
                0.00    0.00   63162/88410       std::_List_iterator<Polygon*>::operator*() const [108]
[98]     0.0    0.00    0.00   88410         std::_List_node<Polygon*>::_M_valptr() [98]
                0.00    0.00   88410/88410       __gnu_cxx::__aligned_membuf<Polygon*>::_M_ptr() [96]
-----------------------------------------------
                0.00    0.00   87911/87911       Polygon::Polygon(Polygon*) [134]
[99]     0.0    0.00    0.00   87911         Point::Point(Point*) [99]
-----------------------------------------------
                0.00    0.00   87911/87911       void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&) [101]
[100]    0.0    0.00    0.00   87911         void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&) [100]
                0.00    0.00   87911/351644      Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&) [57]
                0.00    0.00   87911/117459      operator new(unsigned long, void*) [80]
-----------------------------------------------
                0.00    0.00   87911/87911       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [102]
[101]    0.0    0.00    0.00   87911         void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&) [101]
                0.00    0.00   87911/351644      Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&) [57]
                0.00    0.00   87911/87911       void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&) [100]
-----------------------------------------------
                0.00    0.00   87911/87911       void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&) [103]
[102]    0.0    0.00    0.00   87911         std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [102]
                0.00    0.00   87911/88428       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node() [92]
                0.00    0.00   87911/88428       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator() [94]
                0.00    0.00   87911/88428       std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*) [88]
                0.00    0.00   87911/351644      Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&) [57]
                0.00    0.00   87911/296625      std::_List_node<Point*>::_M_valptr() [61]
                0.00    0.00   87911/87911       void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&) [101]
                0.00    0.00   87911/88428       std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::operator=(decltype(nullptr)) [90]
                0.00    0.00   87911/88428       std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::~__allocated_ptr() [89]
-----------------------------------------------
                0.00    0.00   87911/87911       std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&) [104]
[103]    0.0    0.00    0.00   87911         void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&) [103]
                0.00    0.00   87911/351644      Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&) [57]
                0.00    0.00   87911/87911       std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&) [102]
                0.00    0.00   87911/88428       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long) [93]
-----------------------------------------------
                0.00    0.00   87911/87911       Polygon::Polygon(Polygon*) [134]
[104]    0.0    0.00    0.00   87911         std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&) [104]
                0.00    0.00   87911/87911       std::remove_reference<Point*&>::type&& std::move<Point*&>(Point*&) [105]
                0.00    0.00   87911/116039      std::__cxx11::list<Point*, std::allocator<Point*> >::end() [81]
                0.00    0.00   87911/87911       void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&) [103]
-----------------------------------------------
                0.00    0.00   87911/87911       std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&) [104]
[105]    0.0    0.00    0.00   87911         std::remove_reference<Point*&>::type&& std::move<Point*&>(Point*&) [105]
-----------------------------------------------
                0.00    0.00       2/75170       Problem::run(cv::Mat*, int) [2]
                0.00    0.00   75168/75170       Individual::draw_CV(unsigned char*, int, int) [4]
[106]    0.0    0.00    0.00   75170         cv::_InputArray::_InputArray(cv::Mat const&) [106]
                0.00    0.00   75170/187923      cv::Size_<int>::Size_() [67]
                0.00    0.00   75170/338260      cv::_InputArray::init(int, void const*) [58]
-----------------------------------------------
                0.00    0.00       1/75169       Problem::run(cv::Mat*, int) [2]
                0.00    0.00   37584/75169       Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00   37584/75169       cv::Mat::clone() const [124]
[107]    0.0    0.00    0.00   75169         cv::_OutputArray::_OutputArray(cv::Mat&) [107]
                0.00    0.00   75169/112753      cv::_InputArray::_InputArray() [83]
                0.00    0.00   75169/338260      cv::_InputArray::init(int, void const*) [58]
-----------------------------------------------
                0.00    0.00      14/63162       Individual::remove_dna(int) [368]
                0.00    0.00     147/63162       Individual::~Individual() [390]
                0.00    0.00   25417/63162       Individual::get_dna(int) [139]
                0.00    0.00   37584/63162       Individual::draw_CV(unsigned char*, int, int) [4]
[108]    0.0    0.00    0.00   63162         std::_List_iterator<Polygon*>::operator*() const [108]
                0.00    0.00   63162/88410       std::_List_node<Polygon*>::_M_valptr() [98]
-----------------------------------------------
                0.00    0.00      10/52221       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [385]
                0.00    0.00      14/52221       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>) [375]
                0.00    0.00      24/52221       std::_List_const_iterator<Polygon*>::_M_const_cast() const [364]
                0.00    0.00   25978/52221       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end() [136]
                0.00    0.00   26195/52221       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [135]
[109]    0.0    0.00    0.00   52221         std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [109]
-----------------------------------------------
                0.00    0.00     150/38485       Individual::~Individual() [390]
                0.00    0.00   38335/38485       Individual::draw_CV(unsigned char*, int, int) [4]
[110]    0.0    0.00    0.00   38485         std::_List_iterator<Polygon*>::operator!=(std::_List_iterator<Polygon*> const&) const [110]
-----------------------------------------------
                0.00    0.00       1/38357       cv::Mat::Mat(int, int, int) [405]
                0.00    0.00     772/38357       cv::Mat::Mat(int, int, int, void*, unsigned long) [291]
                0.00    0.00   37584/38357       cv::Mat::Mat() [117]
[111]    0.0    0.00    0.00   38357         cv::MatSize::MatSize(int*) [111]
-----------------------------------------------
                0.00    0.00       1/38337       main [1]
                0.00    0.00       1/38337       Problem::run(cv::Mat*, int) [2]
                0.00    0.00   38335/38337       Individual::draw_CV(unsigned char*, int, int) [4]
[112]    0.0    0.00    0.00   38337         cv::Mat::~Mat() [112]
                0.00    0.00  151110/151110      cv::Mat::release() [69]
-----------------------------------------------
                0.00    0.00       1/37585       cv::Mat::Mat(int, int, int) [405]
                0.00    0.00   37584/37585       cv::Mat::Mat() [117]
[113]    0.0    0.00    0.00   37585         cv::MatStep::MatStep(unsigned long) [113]
-----------------------------------------------
                0.00    0.00   37584/37584       cv::_InputOutputArray::_InputOutputArray(cv::Mat&) [115]
[114]    0.0    0.00    0.00   37584         cv::_OutputArray::_OutputArray() [114]
                0.00    0.00   37584/112753      cv::_InputArray::_InputArray() [83]
                0.00    0.00   37584/338260      cv::_InputArray::init(int, void const*) [58]
-----------------------------------------------
                0.00    0.00   37584/37584       Individual::draw_CV(unsigned char*, int, int) [4]
[115]    0.0    0.00    0.00   37584         cv::_InputOutputArray::_InputOutputArray(cv::Mat&) [115]
                0.00    0.00   37584/37584       cv::_OutputArray::_OutputArray() [114]
                0.00    0.00   37584/338260      cv::_InputArray::init(int, void const*) [58]
-----------------------------------------------
                0.00    0.00   37584/37584       Individual::draw_CV(unsigned char*, int, int) [4]
[116]    0.0    0.00    0.00   37584         cv::_InputOutputArray::~_InputOutputArray() [116]
                0.00    0.00   37584/112753      cv::_OutputArray::~_OutputArray() [84]
-----------------------------------------------
                0.00    0.00   37584/37584       cv::Mat::clone() const [124]
[117]    0.0    0.00    0.00   37584         cv::Mat::Mat() [117]
                0.00    0.00   37584/38357       cv::MatSize::MatSize(int*) [111]
                0.00    0.00   37584/37585       cv::MatStep::MatStep(unsigned long) [113]
-----------------------------------------------
                0.00    0.00   37584/37584       cv::Scalar_<double>::Scalar_(double, double, double, double) [120]
[118]    0.0    0.00    0.00   37584         cv::Vec<double, 4>::Vec() [118]
                0.00    0.00   37584/37584       cv::Matx<double, 4, 1>::Matx() [119]
-----------------------------------------------
                0.00    0.00   37584/37584       cv::Vec<double, 4>::Vec() [118]
[119]    0.0    0.00    0.00   37584         cv::Matx<double, 4, 1>::Matx() [119]
-----------------------------------------------
                0.00    0.00   37584/37584       Individual::draw_CV(unsigned char*, int, int) [4]
[120]    0.0    0.00    0.00   37584         cv::Scalar_<double>::Scalar_(double, double, double, double) [120]
                0.00    0.00   37584/37584       cv::Vec<double, 4>::Vec() [118]
-----------------------------------------------
                0.00    0.00   37584/37584       Individual::draw_CV(unsigned char*, int, int) [4]
[121]    0.0    0.00    0.00   37584         Colour::get_b() [121]
-----------------------------------------------
                0.00    0.00   37584/37584       Individual::draw_CV(unsigned char*, int, int) [4]
[122]    0.0    0.00    0.00   37584         Colour::get_g() [122]
-----------------------------------------------
                0.00    0.00   37584/37584       Individual::draw_CV(unsigned char*, int, int) [4]
[123]    0.0    0.00    0.00   37584         Colour::get_r() [123]
-----------------------------------------------
                0.00    0.00   37584/37584       Individual::draw_CV(unsigned char*, int, int) [4]
[124]    0.0    0.00    0.00   37584         cv::Mat::clone() const [124]
                0.00    0.00   37584/37584       cv::Mat::Mat() [117]
                0.00    0.00   37584/75169       cv::_OutputArray::_OutputArray(cv::Mat&) [107]
                0.00    0.00   37584/112753      cv::_OutputArray::~_OutputArray() [84]
-----------------------------------------------
                0.00    0.00   28282/28282       std::__detail::_List_node_header::_List_node_header() [126]
[125]    0.0    0.00    0.00   28282         std::__detail::_List_node_header::_M_init() [125]
-----------------------------------------------
                0.00    0.00     504/28282       std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl() [306]
                0.00    0.00   27778/28282       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl() [129]
[126]    0.0    0.00    0.00   28282         std::__detail::_List_node_header::_List_node_header() [126]
                0.00    0.00   28282/28282       std::__detail::_List_node_header::_M_init() [125]
-----------------------------------------------
                0.00    0.00   27778/27778       std::allocator<std::_List_node<Point*> >::allocator() [128]
[127]    0.0    0.00    0.00   27778         __gnu_cxx::new_allocator<std::_List_node<Point*> >::new_allocator() [127]
-----------------------------------------------
                0.00    0.00   27778/27778       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl() [129]
[128]    0.0    0.00    0.00   27778         std::allocator<std::_List_node<Point*> >::allocator() [128]
                0.00    0.00   27778/27778       __gnu_cxx::new_allocator<std::_List_node<Point*> >::new_allocator() [127]
-----------------------------------------------
                0.00    0.00   27778/27778       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_base() [130]
[129]    0.0    0.00    0.00   27778         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl() [129]
                0.00    0.00   27778/27778       std::allocator<std::_List_node<Point*> >::allocator() [128]
                0.00    0.00   27778/28282       std::__detail::_List_node_header::_List_node_header() [126]
-----------------------------------------------
                0.00    0.00   27778/27778       std::__cxx11::list<Point*, std::allocator<Point*> >::list() [131]
[130]    0.0    0.00    0.00   27778         std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_base() [130]
                0.00    0.00   27778/27778       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl() [129]
-----------------------------------------------
                0.00    0.00     160/27778       Polygon::Polygon(Colour*) [345]
                0.00    0.00   27618/27778       Polygon::Polygon(Polygon*) [134]
[131]    0.0    0.00    0.00   27778         std::__cxx11::list<Point*, std::allocator<Point*> >::list() [131]
                0.00    0.00   27778/27778       std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_base() [130]
-----------------------------------------------
                0.00    0.00    2544/27768       std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [212]
                0.00    0.00   25224/27768       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [156]
[132]    0.0    0.00    0.00   27768         std::remove_reference<Polygon*&>::type&& std::move<Polygon*&>(Polygon*&) [132]
-----------------------------------------------
                0.00    0.00   27618/27618       Polygon::Polygon(Polygon*) [134]
[133]    0.0    0.00    0.00   27618         Colour::Colour(Colour*) [133]
-----------------------------------------------
                0.00    0.00      49/27618       Individual::Individual(Individual*) [402]
                0.00    0.00   10050/27618       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
                0.00    0.00   17519/27618       GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [343]
[134]    0.0    0.00    0.00   27618         Polygon::Polygon(Polygon*) [134]
                0.00    0.00  115529/115529      std::_List_iterator<Point*>::operator!=(std::_List_iterator<Point*> const&) const [82]
                0.00    0.00   87911/208197      std::_List_iterator<Point*>::operator*() const [65]
                0.00    0.00   87911/87911       Point::Point(Point*) [99]
                0.00    0.00   87911/87911       std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&) [104]
                0.00    0.00   87911/227247      std::_List_iterator<Point*>::operator++() [64]
                0.00    0.00   27618/27618       Colour::Colour(Colour*) [133]
                0.00    0.00   27618/27778       std::__cxx11::list<Point*, std::allocator<Point*> >::list() [131]
                0.00    0.00   27618/147911      std::__cxx11::list<Point*, std::allocator<Point*> >::begin() [70]
                0.00    0.00   27618/116039      std::__cxx11::list<Point*, std::allocator<Point*> >::end() [81]
-----------------------------------------------
                0.00    0.00       3/26195       Individual::~Individual() [390]
                0.00    0.00      10/26195       Individual::insert_dna(int, Polygon*) [381]
                0.00    0.00      14/26195       Individual::remove_dna(int) [368]
                0.00    0.00     751/26195       Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00   25417/26195       Individual::get_dna(int) [139]
[135]    0.0    0.00    0.00   26195         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [135]
                0.00    0.00   26195/52221       std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [109]
-----------------------------------------------
                0.00    0.00       3/25978       Individual::~Individual() [390]
                0.00    0.00     751/25978       Individual::draw_CV(unsigned char*, int, int) [4]
                0.00    0.00   25224/25978       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [156]
[136]    0.0    0.00    0.00   25978         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end() [136]
                0.00    0.00   25978/52221       std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [109]
-----------------------------------------------
                0.00    0.00      24/25441       void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int) [366]
                0.00    0.00   25417/25441       void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long) [141]
[137]    0.0    0.00    0.00   25441         std::iterator_traits<std::_List_iterator<Polygon*> >::iterator_category std::__iterator_category<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*> const&) [137]
-----------------------------------------------
                0.00    0.00      24/25441       void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int) [366]
                0.00    0.00   25417/25441       void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long) [141]
[138]    0.0    0.00    0.00   25441         void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag) [138]
                0.00    0.00  624600/662331      std::_List_iterator<Polygon*>::operator++() [56]
-----------------------------------------------
                0.00    0.00      49/25417       Individual::Individual(Individual*) [402]
                0.00    0.00     343/25417       Individual::mutate() [15]
                0.00    0.00    7506/25417       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
                0.00    0.00   17519/25417       GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [343]
[139]    0.0    0.00    0.00   25417         Individual::get_dna(int) [139]
                0.00    0.00   25417/25417       std::_List_iterator<Polygon*> std::next<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*>, std::iterator_traits<std::_List_iterator<Polygon*> >::difference_type) [140]
                0.00    0.00   25417/26195       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [135]
                0.00    0.00   25417/63162       std::_List_iterator<Polygon*>::operator*() const [108]
-----------------------------------------------
                0.00    0.00   25417/25417       Individual::get_dna(int) [139]
[140]    0.0    0.00    0.00   25417         std::_List_iterator<Polygon*> std::next<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*>, std::iterator_traits<std::_List_iterator<Polygon*> >::difference_type) [140]
                0.00    0.00   25417/25417       void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long) [141]
-----------------------------------------------
                0.00    0.00   25417/25417       std::_List_iterator<Polygon*> std::next<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*>, std::iterator_traits<std::_List_iterator<Polygon*> >::difference_type) [140]
[141]    0.0    0.00    0.00   25417         void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long) [141]
                0.00    0.00   25417/25441       std::iterator_traits<std::_List_iterator<Polygon*> >::iterator_category std::__iterator_category<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*> const&) [137]
                0.00    0.00   25417/25441       void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag) [138]
-----------------------------------------------
                0.00    0.00      10/25248       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [384]
                0.00    0.00      14/25248       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [376]
                0.00    0.00   25224/25248       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [154]
[142]    0.0    0.00    0.00   25248         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator() [142]
-----------------------------------------------
                0.00    0.00   25234/25234       std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::allocate(std::allocator<std::_List_node<Polygon*> >&, unsigned long) [148]
[143]    0.0    0.00    0.00   25234         __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::allocate(unsigned long, void const*) [143]
                0.00    0.00   25234/25234       __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::max_size() const [144]
-----------------------------------------------
                0.00    0.00   25234/25234       __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::allocate(unsigned long, void const*) [143]
[144]    0.0    0.00    0.00   25234         __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::max_size() const [144]
-----------------------------------------------
                0.00    0.00      10/25234       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [384]
                0.00    0.00   25224/25234       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [154]
[145]    0.0    0.00    0.00   25234         std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*) [145]
                0.00    0.00   25234/25234       std::allocator<std::_List_node<Polygon*> >* std::__addressof<std::allocator<std::_List_node<Polygon*> > >(std::allocator<std::_List_node<Polygon*> >&) [151]
-----------------------------------------------
                0.00    0.00      10/25234       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [384]
                0.00    0.00   25224/25234       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [154]
[146]    0.0    0.00    0.00   25234         std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::~__allocated_ptr() [146]
-----------------------------------------------
                0.00    0.00      10/25234       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [384]
                0.00    0.00   25224/25234       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [154]
[147]    0.0    0.00    0.00   25234         std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::operator=(decltype(nullptr)) [147]
-----------------------------------------------
                0.00    0.00   25234/25234       std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node() [149]
[148]    0.0    0.00    0.00   25234         std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::allocate(std::allocator<std::_List_node<Polygon*> >&, unsigned long) [148]
                0.00    0.00   25234/25234       __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::allocate(unsigned long, void const*) [143]
-----------------------------------------------
                0.00    0.00      10/25234       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [384]
                0.00    0.00   25224/25234       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [154]
[149]    0.0    0.00    0.00   25234         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node() [149]
                0.00    0.00   25234/25234       std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::allocate(std::allocator<std::_List_node<Polygon*> >&, unsigned long) [148]
-----------------------------------------------
                0.00    0.00      10/25234       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [385]
                0.00    0.00   25224/25234       void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&) [155]
[150]    0.0    0.00    0.00   25234         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_inc_size(unsigned long) [150]
-----------------------------------------------
                0.00    0.00   25234/25234       std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*) [145]
[151]    0.0    0.00    0.00   25234         std::allocator<std::_List_node<Polygon*> >* std::__addressof<std::allocator<std::_List_node<Polygon*> > >(std::allocator<std::_List_node<Polygon*> >&) [151]
-----------------------------------------------
                0.00    0.00   25224/25224       void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&) [153]
[152]    0.0    0.00    0.00   25224         void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [152]
                0.00    0.00   25224/109266      Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [85]
                0.00    0.00   25224/117459      operator new(unsigned long, void*) [80]
-----------------------------------------------
                0.00    0.00   25224/25224       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [154]
[153]    0.0    0.00    0.00   25224         void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&) [153]
                0.00    0.00   25224/109266      Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [85]
                0.00    0.00   25224/25224       void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [152]
-----------------------------------------------
                0.00    0.00   25224/25224       void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&) [155]
[154]    0.0    0.00    0.00   25224         std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [154]
                0.00    0.00   25224/25234       std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node() [149]
                0.00    0.00   25224/25248       std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator() [142]
                0.00    0.00   25224/25234       std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*) [145]
                0.00    0.00   25224/109266      Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [85]
                0.00    0.00   25224/88410       std::_List_node<Polygon*>::_M_valptr() [98]
                0.00    0.00   25224/25224       void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&) [153]
                0.00    0.00   25224/25234       std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::operator=(decltype(nullptr)) [147]
                0.00    0.00   25224/25234       std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::~__allocated_ptr() [146]
-----------------------------------------------
                0.00    0.00   25224/25224       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [156]
[155]    0.0    0.00    0.00   25224         void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&) [155]
                0.00    0.00   25224/109266      Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [85]
                0.00    0.00   25224/25224       std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&) [154]
                0.00    0.00   25224/25234       std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_inc_size(unsigned long) [150]
-----------------------------------------------
                0.00    0.00      49/25224       Individual::Individual(Individual*) [402]
                0.00    0.00     150/25224       Individual::Individual(int, int, int, int) [11]
                0.00    0.00    7506/25224       GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
                0.00    0.00   17519/25224       GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [343]
[156]    0.0    0.00    0.00   25224         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [156]
                0.00    0.00   25224/27768       std::remove_reference<Polygon*&>::type&& std::move<Polygon*&>(Polygon*&) [132]
                0.00    0.00   25224/25978       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end() [136]
                0.00    0.00   25224/25224       void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&) [155]
-----------------------------------------------
                0.00    0.00      33/10553       Individual** std::__niter_base<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [361]
                0.00    0.00    1000/10553       bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [315]
                0.00    0.00    1000/10553       bool __gnu_cxx::operator< <Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [316]
                0.00    0.00    2008/10553       bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [281]
                0.00    0.00    2506/10553       void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
                0.00    0.00    4006/10553       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [234]
[157]    0.0    0.00    0.00   10553         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [157]
-----------------------------------------------
                0.00    0.00    1751/9269        Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [255]
                0.00    0.00    7518/9269        Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [219]
[158]    0.0    0.00    0.00    9269         Individual** std::__niter_base<Individual**>(Individual**) [158]
-----------------------------------------------
                0.00    0.00     500/9013        GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [18]
                0.00    0.00    1750/9013        std::vector<Individual*, std::allocator<Individual*> >::_M_range_check(unsigned long) const [259]
                0.00    0.00    1751/9013        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
                0.00    0.00    5012/9013        std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [276]
[159]    0.0    0.00    0.00    9013         std::vector<Individual*, std::allocator<Individual*> >::size() const [159]
-----------------------------------------------
                0.00    0.00    1476/8340        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
                0.00    0.00    1476/8340        __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::difference_type __gnu_cxx::operator-<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [294]
                0.00    0.00    5388/8340        bool __gnu_cxx::operator!=<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [206]
[160]    0.0    0.00    0.00    8340         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const [160]
-----------------------------------------------
                0.00    0.00     500/8261        std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [33]
                0.00    0.00    1751/8261        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
                0.00    0.00    2251/8261        std::vector<Individual*, std::allocator<Individual*> >::~vector() [231]
                0.00    0.00    3759/8261        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
[161]    0.0    0.00    0.00    8261         std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [161]
-----------------------------------------------
                0.00    0.00    2506/5510        std::allocator_traits<std::allocator<Individual*> >::max_size(std::allocator<Individual*> const&) [216]
                0.00    0.00    3004/5510        __gnu_cxx::new_allocator<Individual*>::allocate(unsigned long, void const*) [193]
[162]    0.0    0.00    0.00    5510         __gnu_cxx::new_allocator<Individual*>::max_size() const [162]
-----------------------------------------------
                0.00    0.00    5012/5012        decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>) [165]
[163]    0.0    0.00    0.00    5012         std::move_iterator<Individual**>::base() const [163]
-----------------------------------------------
                0.00    0.00    5012/5012        std::move_iterator<Individual**> std::__make_move_if_noexcept_iterator<Individual*, std::move_iterator<Individual**> >(Individual**) [167]
[164]    0.0    0.00    0.00    5012         std::move_iterator<Individual**>::move_iterator(Individual**) [164]
-----------------------------------------------
                0.00    0.00    5012/5012        Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [223]
[165]    0.0    0.00    0.00    5012         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>) [165]
                0.00    0.00    5012/5012        std::move_iterator<Individual**>::base() const [163]
                0.00    0.00    5012/5012        Individual** std::__miter_base<Individual**>(Individual**) [166]
-----------------------------------------------
                0.00    0.00    5012/5012        decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>) [165]
[166]    0.0    0.00    0.00    5012         Individual** std::__miter_base<Individual**>(Individual**) [166]
-----------------------------------------------
                0.00    0.00    5012/5012        Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&) [222]
[167]    0.0    0.00    0.00    5012         std::move_iterator<Individual**> std::__make_move_if_noexcept_iterator<Individual*, std::move_iterator<Individual**> >(Individual**) [167]
                0.00    0.00    5012/5012        std::move_iterator<Individual**>::move_iterator(Individual**) [164]
-----------------------------------------------
                0.00    0.00    4902/4902        int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [43]
[168]    0.0    0.00    0.00    4902         std::uniform_int_distribution<int>::param_type::a() const [168]
-----------------------------------------------
                0.00    0.00     250/4507        std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const [326]
                0.00    0.00    1751/4507        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
                0.00    0.00    2506/4507        std::vector<Individual*, std::allocator<Individual*> >::max_size() const [214]
[169]    0.0    0.00    0.00    4507         std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const [169]
-----------------------------------------------
                0.00    0.00    4500/4500        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual**> >, std::is_move_constructible<Individual**>, std::is_move_assignable<Individual**> >::value, void>::type std::swap<Individual**>(Individual**&, Individual**&) [29]
[170]    0.0    0.00    0.00    4500         std::remove_reference<Individual**&>::type&& std::move<Individual**&>(Individual**&) [170]
-----------------------------------------------
                0.00    0.00    4428/4428        Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [270]
[171]    0.0    0.00    0.00    4428         Polygon** std::__niter_base<Polygon**>(Polygon**) [171]
-----------------------------------------------
                0.00    0.00    4252/4252        std::allocator<Individual*>::~allocator() [173]
[172]    0.0    0.00    0.00    4252         __gnu_cxx::new_allocator<Individual*>::~new_allocator() [172]
-----------------------------------------------
                0.00    0.00     250/4252        std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [33]
                0.00    0.00    1751/4252        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
                0.00    0.00    2251/4252        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::~_Vector_impl() [229]
[173]    0.0    0.00    0.00    4252         std::allocator<Individual*>::~allocator() [173]
                0.00    0.00    4252/4252        __gnu_cxx::new_allocator<Individual*>::~new_allocator() [172]
-----------------------------------------------
                0.00    0.00     160/4235        Colour::random_alpha() [41]
                0.00    0.00     599/4235        Colour::random_colour() [19]
                0.00    0.00    1624/4235        utils::random() [9]
                0.00    0.00    1852/4235        utils::next_int(int) [14]
[174]    0.0    0.00    0.00    4235         std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [174]
-----------------------------------------------
                0.00    0.00     160/4235        Colour::random_alpha() [41]
                0.00    0.00     599/4235        Colour::random_colour() [19]
                0.00    0.00    1624/4235        utils::random() [9]
                0.00    0.00    1852/4235        utils::next_int(int) [14]
[175]    0.0    0.00    0.00    4235         std::random_device::~random_device() [175]
-----------------------------------------------
                0.00    0.00     160/4235        Colour::random_alpha() [41]
                0.00    0.00     599/4235        Colour::random_colour() [19]
                0.00    0.00    1624/4235        utils::random() [9]
                0.00    0.00    1852/4235        utils::next_int(int) [14]
[176]    0.0    0.00    0.00    4235         std::random_device::operator()() [176]
-----------------------------------------------
                0.00    0.00    4002/4002        std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [178]
[177]    0.0    0.00    0.00    4002         __gnu_cxx::new_allocator<Individual*>::new_allocator(__gnu_cxx::new_allocator<Individual*> const&) [177]
-----------------------------------------------
                0.00    0.00     250/4002        std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const [326]
                0.00    0.00    1751/4002        std::allocator_traits<std::allocator<Individual*> >::select_on_container_copy_construction(std::allocator<Individual*> const&) [251]
                0.00    0.00    2001/4002        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&) [235]
[178]    0.0    0.00    0.00    4002         std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [178]
                0.00    0.00    4002/4002        __gnu_cxx::new_allocator<Individual*>::new_allocator(__gnu_cxx::new_allocator<Individual*> const&) [177]
-----------------------------------------------
                0.00    0.00      11/3780        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [380]
                0.00    0.00     261/3780        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator+(long) const [323]
                0.00    0.00    1754/3780        std::vector<Individual*, std::allocator<Individual*> >::begin() [244]
                0.00    0.00    1754/3780        std::vector<Individual*, std::allocator<Individual*> >::end() [243]
[179]    0.0    0.00    0.00    3780         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [179]
-----------------------------------------------
                0.00    0.00    1253/3759        void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&) [277]
                0.00    0.00    1253/3759        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
                0.00    0.00    1253/3759        void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&) [275]
[180]    0.0    0.00    0.00    3759         Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&) [180]
-----------------------------------------------
                0.00    0.00    3568/3568        double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
[181]    0.0    0.00    0.00    3568         std::uniform_real_distribution<double>::param_type::a() const [181]
-----------------------------------------------
                0.00    0.00    3568/3568        double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [40]
[182]    0.0    0.00    0.00    3568         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min() [182]
-----------------------------------------------
                0.00    0.00    3504/3504        void std::_Destroy<Individual**>(Individual**, Individual**) [185]
[183]    0.0    0.00    0.00    3504         void std::_Destroy_aux<true>::__destroy<Individual**>(Individual**, Individual**) [183]
-----------------------------------------------
                0.00    0.00    1253/3504        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
                0.00    0.00    2251/3504        std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base() [230]
[184]    0.0    0.00    0.00    3504         std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long) [184]
                0.00    0.00    2753/2753        std::allocator_traits<std::allocator<Individual*> >::deallocate(std::allocator<Individual*>&, Individual**, unsigned long) [205]
-----------------------------------------------
                0.00    0.00    3504/3504        void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&) [186]
[185]    0.0    0.00    0.00    3504         void std::_Destroy<Individual**>(Individual**, Individual**) [185]
                0.00    0.00    3504/3504        void std::_Destroy_aux<true>::__destroy<Individual**>(Individual**, Individual**) [183]
-----------------------------------------------
                0.00    0.00    1253/3504        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
                0.00    0.00    2251/3504        std::vector<Individual*, std::allocator<Individual*> >::~vector() [231]
[186]    0.0    0.00    0.00    3504         void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&) [186]
                0.00    0.00    3504/3504        void std::_Destroy<Individual**>(Individual**, Individual**) [185]
-----------------------------------------------
                0.00    0.00    1751/3502        std::vector<Individual*, std::allocator<Individual*> >::begin() const [247]
                0.00    0.00    1751/3502        std::vector<Individual*, std::allocator<Individual*> >::end() const [246]
[187]    0.0    0.00    0.00    3502         __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual* const* const&) [187]
-----------------------------------------------
                0.00    0.00    3502/3502        Individual* const* std::__niter_base<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >) [190]
[188]    0.0    0.00    0.00    3502         __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::base() const [188]
-----------------------------------------------
                0.00    0.00    3502/3502        Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [258]
[189]    0.0    0.00    0.00    3502         __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >) [189]
-----------------------------------------------
                0.00    0.00    3502/3502        Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [255]
[190]    0.0    0.00    0.00    3502         Individual* const* std::__niter_base<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >) [190]
                0.00    0.00    3502/3502        __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::base() const [188]
-----------------------------------------------
                0.00    0.00       3/3178        GeneticAlgorithm::clean_population() [403]
                0.00    0.00      22/3178        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
                0.00    0.00     500/3178        void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [342]
                0.00    0.00     551/3178        bool __gnu_cxx::__ops::_Val_less_iter::operator()<Individual*, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(Individual*&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [300]
                0.00    0.00    1000/3178        bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [317]
                0.00    0.00    1102/3178        void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [320]
[191]    0.0    0.00    0.00    3178         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [191]
-----------------------------------------------
                0.00    0.00      75/3027        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
                0.00    0.00    2952/3027        std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [295]
[192]    0.0    0.00    0.00    3027         std::vector<Polygon*, std::allocator<Polygon*> >::size() const [192]
-----------------------------------------------
                0.00    0.00    3004/3004        std::allocator_traits<std::allocator<Individual*> >::allocate(std::allocator<Individual*>&, unsigned long) [195]
[193]    0.0    0.00    0.00    3004         __gnu_cxx::new_allocator<Individual*>::allocate(unsigned long, void const*) [193]
                0.00    0.00    3004/5510        __gnu_cxx::new_allocator<Individual*>::max_size() const [162]
-----------------------------------------------
                0.00    0.00    1253/3004        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
                0.00    0.00    1751/3004        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_create_storage(unsigned long) [249]
[194]    0.0    0.00    0.00    3004         std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long) [194]
                0.00    0.00    3004/3004        std::allocator_traits<std::allocator<Individual*> >::allocate(std::allocator<Individual*>&, unsigned long) [195]
-----------------------------------------------
                0.00    0.00    3004/3004        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long) [194]
[195]    0.0    0.00    0.00    3004         std::allocator_traits<std::allocator<Individual*> >::allocate(std::allocator<Individual*>&, unsigned long) [195]
                0.00    0.00    3004/3004        __gnu_cxx::new_allocator<Individual*>::allocate(unsigned long, void const*) [193]
-----------------------------------------------
                0.00    0.00    2952/2952        decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>) [198]
[196]    0.0    0.00    0.00    2952         std::move_iterator<Polygon**>::base() const [196]
-----------------------------------------------
                0.00    0.00    2952/2952        std::move_iterator<Polygon**> std::__make_move_if_noexcept_iterator<Polygon*, std::move_iterator<Polygon**> >(Polygon**) [200]
[197]    0.0    0.00    0.00    2952         std::move_iterator<Polygon**>::move_iterator(Polygon**) [197]
-----------------------------------------------
                0.00    0.00    2952/2952        Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [274]
[198]    0.0    0.00    0.00    2952         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>) [198]
                0.00    0.00    2952/2952        Polygon** std::__miter_base<Polygon**>(Polygon**) [199]
                0.00    0.00    2952/2952        std::move_iterator<Polygon**>::base() const [196]
-----------------------------------------------
                0.00    0.00    2952/2952        decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>) [198]
[199]    0.0    0.00    0.00    2952         Polygon** std::__miter_base<Polygon**>(Polygon**) [199]
-----------------------------------------------
                0.00    0.00    2952/2952        Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&) [273]
[200]    0.0    0.00    0.00    2952         std::move_iterator<Polygon**> std::__make_move_if_noexcept_iterator<Polygon*, std::move_iterator<Polygon**> >(Polygon**) [200]
                0.00    0.00    2952/2952        std::move_iterator<Polygon**>::move_iterator(Polygon**) [197]
-----------------------------------------------
                0.00    0.00    2754/2754        std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_node_count() const [202]
[201]    0.0    0.00    0.00    2754         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_size() const [201]
-----------------------------------------------
                0.00    0.00    2754/2754        std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const [203]
[202]    0.0    0.00    0.00    2754         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_node_count() const [202]
                0.00    0.00    2754/2754        std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_size() const [201]
-----------------------------------------------
                0.00    0.00     343/2754        Individual::mutate() [15]
                0.00    0.00    2411/2754        Individual::get_len_dna() [227]
[203]    0.0    0.00    0.00    2754         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const [203]
                0.00    0.00    2754/2754        std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_node_count() const [202]
-----------------------------------------------
                0.00    0.00    2753/2753        std::allocator_traits<std::allocator<Individual*> >::deallocate(std::allocator<Individual*>&, Individual**, unsigned long) [205]
[204]    0.0    0.00    0.00    2753         __gnu_cxx::new_allocator<Individual*>::deallocate(Individual**, unsigned long) [204]
-----------------------------------------------
                0.00    0.00    2753/2753        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long) [184]
[205]    0.0    0.00    0.00    2753         std::allocator_traits<std::allocator<Individual*> >::deallocate(std::allocator<Individual*>&, Individual**, unsigned long) [205]
                0.00    0.00    2753/2753        __gnu_cxx::new_allocator<Individual*>::deallocate(Individual**, unsigned long) [204]
-----------------------------------------------
                0.00    0.00    2694/2694        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
[206]    0.0    0.00    0.00    2694         bool __gnu_cxx::operator!=<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [206]
                0.00    0.00    5388/8340        __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const [160]
-----------------------------------------------
                0.00    0.00    2544/2544        void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [210]
[207]    0.0    0.00    0.00    2544         void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [207]
                0.00    0.00    2544/109266      Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [85]
                0.00    0.00    2544/117459      operator new(unsigned long, void*) [80]
-----------------------------------------------
                0.00    0.00    2544/2544        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
[208]    0.0    0.00    0.00    2544         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator++() [208]
-----------------------------------------------
                0.00    0.00    2544/2544        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
[209]    0.0    0.00    0.00    2544         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator*() const [209]
-----------------------------------------------
                0.00    0.00     738/2544        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
                0.00    0.00    1806/2544        void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [211]
[210]    0.0    0.00    0.00    2544         void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [210]
                0.00    0.00    2544/109266      Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [85]
                0.00    0.00    2544/2544        void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [207]
-----------------------------------------------
                0.00    0.00    2544/2544        std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [212]
[211]    0.0    0.00    0.00    2544         void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [211]
                0.00    0.00    2544/109266      Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [85]
                0.00    0.00    1806/2544        void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [210]
                0.00    0.00     738/888         std::vector<Polygon*, std::allocator<Polygon*> >::end() [284]
                0.00    0.00     738/738         void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
-----------------------------------------------
                0.00    0.00    2544/2544        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
[212]    0.0    0.00    0.00    2544         std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [212]
                0.00    0.00    2544/27768       std::remove_reference<Polygon*&>::type&& std::move<Polygon*&>(Polygon*&) [132]
                0.00    0.00    2544/2544        void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [211]
-----------------------------------------------
                0.00    0.00    2544/2544        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
[213]    0.0    0.00    0.00    2544         std::vector<Polygon*, std::allocator<Polygon*> >::operator[](unsigned long) [213]
-----------------------------------------------
                0.00    0.00    2506/2506        std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [276]
[214]    0.0    0.00    0.00    2506         std::vector<Individual*, std::allocator<Individual*> >::max_size() const [214]
                0.00    0.00    2506/4507        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const [169]
                0.00    0.00    2506/2506        std::allocator_traits<std::allocator<Individual*> >::max_size(std::allocator<Individual*> const&) [216]
-----------------------------------------------
                0.00    0.00    2506/2506        Individual** std::__copy_move_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [218]
[215]    0.0    0.00    0.00    2506         Individual** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [215]
-----------------------------------------------
                0.00    0.00    2506/2506        std::vector<Individual*, std::allocator<Individual*> >::max_size() const [214]
[216]    0.0    0.00    0.00    2506         std::allocator_traits<std::allocator<Individual*> >::max_size(std::allocator<Individual*> const&) [216]
                0.00    0.00    2506/5510        __gnu_cxx::new_allocator<Individual*>::max_size() const [162]
-----------------------------------------------
                0.00    0.00    2506/2506        Individual** std::uninitialized_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [220]
[217]    0.0    0.00    0.00    2506         Individual** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [217]
                0.00    0.00    2506/2506        Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [223]
-----------------------------------------------
                0.00    0.00    2506/2506        Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [219]
[218]    0.0    0.00    0.00    2506         Individual** std::__copy_move_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [218]
                0.00    0.00    2506/2506        Individual** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [215]
-----------------------------------------------
                0.00    0.00    2506/2506        Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [223]
[219]    0.0    0.00    0.00    2506         Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [219]
                0.00    0.00    7518/9269        Individual** std::__niter_base<Individual**>(Individual**) [158]
                0.00    0.00    2506/2506        Individual** std::__copy_move_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [218]
-----------------------------------------------
                0.00    0.00    2506/2506        Individual** std::__uninitialized_copy_a<std::move_iterator<Individual**>, Individual**, Individual*>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**, std::allocator<Individual*>&) [221]
[220]    0.0    0.00    0.00    2506         Individual** std::uninitialized_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [220]
                0.00    0.00    2506/2506        Individual** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [217]
-----------------------------------------------
                0.00    0.00    2506/2506        Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&) [222]
[221]    0.0    0.00    0.00    2506         Individual** std::__uninitialized_copy_a<std::move_iterator<Individual**>, Individual**, Individual*>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**, std::allocator<Individual*>&) [221]
                0.00    0.00    2506/2506        Individual** std::uninitialized_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [220]
-----------------------------------------------
                0.00    0.00    2506/2506        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
[222]    0.0    0.00    0.00    2506         Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&) [222]
                0.00    0.00    5012/5012        std::move_iterator<Individual**> std::__make_move_if_noexcept_iterator<Individual*, std::move_iterator<Individual**> >(Individual**) [167]
                0.00    0.00    2506/2506        Individual** std::__uninitialized_copy_a<std::move_iterator<Individual**>, Individual**, Individual*>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**, std::allocator<Individual*>&) [221]
-----------------------------------------------
                0.00    0.00    2506/2506        Individual** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [217]
[223]    0.0    0.00    0.00    2506         Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [223]
                0.00    0.00    5012/5012        decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>) [165]
                0.00    0.00    2506/2506        Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [219]
-----------------------------------------------
                0.00    0.00    2451/2451        int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [43]
[224]    0.0    0.00    0.00    2451         std::uniform_int_distribution<int>::param_type::b() const [224]
-----------------------------------------------
                0.00    0.00    2451/2451        std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [226]
[225]    0.0    0.00    0.00    2451         std::uniform_int_distribution<int>::param_type::param_type(int, int) [225]
-----------------------------------------------
                0.00    0.00     599/2451        Colour::random_colour() [19]
                0.00    0.00    1852/2451        utils::next_int(int) [14]
[226]    0.0    0.00    0.00    2451         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [226]
                0.00    0.00    2451/2451        std::uniform_int_distribution<int>::param_type::param_type(int, int) [225]
-----------------------------------------------
                0.00    0.00      50/2411        Individual::Individual(Individual*) [402]
                0.00    0.00     250/2411        GeneticAlgorithm::evolve(int) [3]
                0.00    0.00     350/2411        GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [343]
                0.00    0.00    1761/2411        GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
[227]    0.0    0.00    0.00    2411         Individual::get_len_dna() [227]
                0.00    0.00    2411/2754        std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const [203]
-----------------------------------------------
                0.00    0.00     150/2364        std::vector<Polygon*, std::allocator<Polygon*> >::~vector() [355]
                0.00    0.00    2214/2364        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
[228]    0.0    0.00    0.00    2364         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() [228]
-----------------------------------------------
                0.00    0.00    2251/2251        std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base() [230]
[229]    0.0    0.00    0.00    2251         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::~_Vector_impl() [229]
                0.00    0.00    2251/4252        std::allocator<Individual*>::~allocator() [173]
-----------------------------------------------
                0.00    0.00    2251/2251        std::vector<Individual*, std::allocator<Individual*> >::~vector() [231]
[230]    0.0    0.00    0.00    2251         std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base() [230]
                0.00    0.00    2251/3504        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long) [184]
                0.00    0.00    2251/2251        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::~_Vector_impl() [229]
-----------------------------------------------
                0.00    0.00       1/2251        GeneticAlgorithm::clean_population() [403]
                0.00    0.00     250/2251        std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [33]
                0.00    0.00    2000/2251        GeneticAlgorithm::evolve(int) [3]
[231]    0.0    0.00    0.00    2251         std::vector<Individual*, std::allocator<Individual*> >::~vector() [231]
                0.00    0.00    2251/8261        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [161]
                0.00    0.00    2251/2251        std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base() [230]
                0.00    0.00    2251/3504        void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&) [186]
-----------------------------------------------
                0.00    0.00     738/2214        __gnu_cxx::new_allocator<Polygon*>::allocate(unsigned long, void const*) [293]
                0.00    0.00    1476/2214        std::allocator_traits<std::allocator<Polygon*> >::max_size(std::allocator<Polygon*> const&) [267]
[232]    0.0    0.00    0.00    2214         __gnu_cxx::new_allocator<Polygon*>::max_size() const [232]
-----------------------------------------------
                0.00    0.00     510/2061        void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&) [37]
                0.00    0.00     517/2061        std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
                0.00    0.00     517/2061        void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&) [303]
                0.00    0.00     517/2061        void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&) [302]
[233]    0.0    0.00    0.00    2061         Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&) [233]
-----------------------------------------------
                0.00    0.00     250/2003        void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [339]
                0.00    0.00     250/2003        void std::__introsort_loop<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [331]
                0.00    0.00     250/2003        void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [334]
                0.00    0.00    1253/2003        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
[234]    0.0    0.00    0.00    2003         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [234]
                0.00    0.00    4006/10553       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [157]
-----------------------------------------------
                0.00    0.00     250/2001        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(std::allocator<Individual*> const&) [327]
                0.00    0.00    1751/2001        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&) [250]
[235]    0.0    0.00    0.00    2001         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&) [235]
                0.00    0.00    2001/4002        std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [178]
-----------------------------------------------
                0.00    0.00     738/1991        std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [295]
                0.00    0.00    1253/1991        std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [276]
[236]    0.0    0.00    0.00    1991         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [236]
-----------------------------------------------
                0.00    0.00      22/1812        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
                0.00    0.00     750/1812        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual*> >, std::is_move_constructible<Individual*>, std::is_move_assignable<Individual*> >::value, void>::type std::swap<Individual*>(Individual*&, Individual*&) [338]
                0.00    0.00    1040/1812        void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [320]
[237]    0.0    0.00    0.00    1812         std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&) [237]
-----------------------------------------------
                0.00    0.00    1784/1784        double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
[238]    0.0    0.00    0.00    1784         std::uniform_real_distribution<double>::param_type::b() const [238]
-----------------------------------------------
                0.00    0.00    1784/1784        std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [240]
[239]    0.0    0.00    0.00    1784         std::uniform_real_distribution<double>::param_type::param_type(double, double) [239]
-----------------------------------------------
                0.00    0.00     160/1784        Colour::random_alpha() [41]
                0.00    0.00    1624/1784        utils::random() [9]
[240]    0.0    0.00    0.00    1784         std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [240]
                0.00    0.00    1784/1784        std::uniform_real_distribution<double>::param_type::param_type(double, double) [239]
-----------------------------------------------
                0.00    0.00    1784/1784        double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [17]
[241]    0.0    0.00    0.00    1784         std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [241]
-----------------------------------------------
                0.00    0.00     888/1776        std::vector<Polygon*, std::allocator<Polygon*> >::begin() [285]
                0.00    0.00     888/1776        std::vector<Polygon*, std::allocator<Polygon*> >::end() [284]
[242]    0.0    0.00    0.00    1776         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::__normal_iterator(Polygon** const&) [242]
-----------------------------------------------
                0.00    0.00       1/1754        GeneticAlgorithm::clean_population() [403]
                0.00    0.00     500/1754        sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [324]
                0.00    0.00    1253/1754        std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [279]
[243]    0.0    0.00    0.00    1754         std::vector<Individual*, std::allocator<Individual*> >::end() [243]
                0.00    0.00    1754/3780        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [179]
-----------------------------------------------
                0.00    0.00       1/1754        GeneticAlgorithm::clean_population() [403]
                0.00    0.00     500/1754        sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [324]
                0.00    0.00    1253/1754        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
[244]    0.0    0.00    0.00    1754         std::vector<Individual*, std::allocator<Individual*> >::begin() [244]
                0.00    0.00    1754/3780        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [179]
-----------------------------------------------
                0.00    0.00    1751/1751        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
[245]    0.0    0.00    0.00    1751         __gnu_cxx::__alloc_traits<std::allocator<Individual*>, Individual*>::_S_select_on_copy(std::allocator<Individual*> const&) [245]
                0.00    0.00    1751/1751        std::allocator_traits<std::allocator<Individual*> >::select_on_container_copy_construction(std::allocator<Individual*> const&) [251]
-----------------------------------------------
                0.00    0.00    1751/1751        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
[246]    0.0    0.00    0.00    1751         std::vector<Individual*, std::allocator<Individual*> >::end() const [246]
                0.00    0.00    1751/3502        __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual* const* const&) [187]
-----------------------------------------------
                0.00    0.00    1751/1751        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
[247]    0.0    0.00    0.00    1751         std::vector<Individual*, std::allocator<Individual*> >::begin() const [247]
                0.00    0.00    1751/3502        __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual* const* const&) [187]
-----------------------------------------------
                0.00    0.00    1751/1751        Individual** std::__copy_move_a<false, Individual* const*, Individual**>(Individual* const*, Individual* const*, Individual**) [254]
[248]    0.0    0.00    0.00    1751         Individual** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [248]
-----------------------------------------------
                0.00    0.00    1751/1751        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&) [250]
[249]    0.0    0.00    0.00    1751         std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_create_storage(unsigned long) [249]
                0.00    0.00    1751/3004        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long) [194]
-----------------------------------------------
                0.00    0.00    1751/1751        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
[250]    0.0    0.00    0.00    1751         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&) [250]
                0.00    0.00    1751/2001        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&) [235]
                0.00    0.00    1751/1751        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_create_storage(unsigned long) [249]
-----------------------------------------------
                0.00    0.00    1751/1751        __gnu_cxx::__alloc_traits<std::allocator<Individual*>, Individual*>::_S_select_on_copy(std::allocator<Individual*> const&) [245]
[251]    0.0    0.00    0.00    1751         std::allocator_traits<std::allocator<Individual*> >::select_on_container_copy_construction(std::allocator<Individual*> const&) [251]
                0.00    0.00    1751/4002        std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [178]
-----------------------------------------------
                0.00    0.00    1751/1751        Individual** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [256]
[252]    0.0    0.00    0.00    1751         Individual** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [252]
                0.00    0.00    1751/1751        Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [258]
-----------------------------------------------
                0.00    0.00     250/1751        GeneticAlgorithm::evolve(int) [3]
                0.00    0.00    1501/1751        Population::get_individuals() [263]
[253]    0.0    0.00    0.00    1751         std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
                0.00    0.00    1751/4507        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const [169]
                0.00    0.00    1751/1751        __gnu_cxx::__alloc_traits<std::allocator<Individual*>, Individual*>::_S_select_on_copy(std::allocator<Individual*> const&) [245]
                0.00    0.00    1751/9013        std::vector<Individual*, std::allocator<Individual*> >::size() const [159]
                0.00    0.00    1751/1751        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&) [250]
                0.00    0.00    1751/4252        std::allocator<Individual*>::~allocator() [173]
                0.00    0.00    1751/8261        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [161]
                0.00    0.00    1751/1751        std::vector<Individual*, std::allocator<Individual*> >::end() const [246]
                0.00    0.00    1751/1751        std::vector<Individual*, std::allocator<Individual*> >::begin() const [247]
                0.00    0.00    1751/1751        Individual** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, Individual*>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, std::allocator<Individual*>&) [257]
-----------------------------------------------
                0.00    0.00    1751/1751        Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [255]
[254]    0.0    0.00    0.00    1751         Individual** std::__copy_move_a<false, Individual* const*, Individual**>(Individual* const*, Individual* const*, Individual**) [254]
                0.00    0.00    1751/1751        Individual** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [248]
-----------------------------------------------
                0.00    0.00    1751/1751        Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [258]
[255]    0.0    0.00    0.00    1751         Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [255]
                0.00    0.00    3502/3502        Individual* const* std::__niter_base<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >) [190]
                0.00    0.00    1751/9269        Individual** std::__niter_base<Individual**>(Individual**) [158]
                0.00    0.00    1751/1751        Individual** std::__copy_move_a<false, Individual* const*, Individual**>(Individual* const*, Individual* const*, Individual**) [254]
-----------------------------------------------
                0.00    0.00    1751/1751        Individual** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, Individual*>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, std::allocator<Individual*>&) [257]
[256]    0.0    0.00    0.00    1751         Individual** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [256]
                0.00    0.00    1751/1751        Individual** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [252]
-----------------------------------------------
                0.00    0.00    1751/1751        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
[257]    0.0    0.00    0.00    1751         Individual** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, Individual*>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, std::allocator<Individual*>&) [257]
                0.00    0.00    1751/1751        Individual** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [256]
-----------------------------------------------
                0.00    0.00    1751/1751        Individual** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [252]
[258]    0.0    0.00    0.00    1751         Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [258]
                0.00    0.00    3502/3502        __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >) [189]
                0.00    0.00    1751/1751        Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [255]
-----------------------------------------------
                0.00    0.00    1750/1750        std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [260]
[259]    0.0    0.00    0.00    1750         std::vector<Individual*, std::allocator<Individual*> >::_M_range_check(unsigned long) const [259]
                0.00    0.00    1750/9013        std::vector<Individual*, std::allocator<Individual*> >::size() const [159]
-----------------------------------------------
                0.00    0.00     500/1750        GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [18]
                0.00    0.00    1250/1750        GeneticAlgorithm::evolve(int) [3]
[260]    0.0    0.00    0.00    1750         std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [260]
                0.00    0.00    1750/1750        std::vector<Individual*, std::allocator<Individual*> >::_M_range_check(unsigned long) const [259]
                0.00    0.00    1750/1750        std::vector<Individual*, std::allocator<Individual*> >::operator[](unsigned long) [261]
-----------------------------------------------
                0.00    0.00    1750/1750        std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [260]
[261]    0.0    0.00    0.00    1750         std::vector<Individual*, std::allocator<Individual*> >::operator[](unsigned long) [261]
-----------------------------------------------
                0.00    0.00    1544/1544        cv::Mat::Mat(int, int, int, void*, unsigned long) [291]
[262]    0.0    0.00    0.00    1544         cv::MatStep::operator[](int) [262]
-----------------------------------------------
                0.00    0.00       1/1501        GeneticAlgorithm::clean_population() [403]
                0.00    0.00    1500/1501        GeneticAlgorithm::evolve(int) [3]
[263]    0.0    0.00    0.00    1501         Population::get_individuals() [263]
                0.00    0.00    1501/1751        std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&) [253]
-----------------------------------------------
                0.00    0.00    1476/1476        std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const [265]
[264]    0.0    0.00    0.00    1476         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() const [264]
-----------------------------------------------
                0.00    0.00    1476/1476        std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [295]
[265]    0.0    0.00    0.00    1476         std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const [265]
                0.00    0.00    1476/1476        std::allocator_traits<std::allocator<Polygon*> >::max_size(std::allocator<Polygon*> const&) [267]
                0.00    0.00    1476/1476        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() const [264]
-----------------------------------------------
                0.00    0.00    1476/1476        Polygon** std::__copy_move_a<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [269]
[266]    0.0    0.00    0.00    1476         Polygon** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Polygon*>(Polygon* const*, Polygon* const*, Polygon**) [266]
-----------------------------------------------
                0.00    0.00    1476/1476        std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const [265]
[267]    0.0    0.00    0.00    1476         std::allocator_traits<std::allocator<Polygon*> >::max_size(std::allocator<Polygon*> const&) [267]
                0.00    0.00    1476/2214        __gnu_cxx::new_allocator<Polygon*>::max_size() const [232]
-----------------------------------------------
                0.00    0.00    1476/1476        Polygon** std::uninitialized_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [271]
[268]    0.0    0.00    0.00    1476         Polygon** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [268]
                0.00    0.00    1476/1476        Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [274]
-----------------------------------------------
                0.00    0.00    1476/1476        Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [270]
[269]    0.0    0.00    0.00    1476         Polygon** std::__copy_move_a<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [269]
                0.00    0.00    1476/1476        Polygon** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Polygon*>(Polygon* const*, Polygon* const*, Polygon**) [266]
-----------------------------------------------
                0.00    0.00    1476/1476        Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [274]
[270]    0.0    0.00    0.00    1476         Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [270]
                0.00    0.00    4428/4428        Polygon** std::__niter_base<Polygon**>(Polygon**) [171]
                0.00    0.00    1476/1476        Polygon** std::__copy_move_a<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [269]
-----------------------------------------------
                0.00    0.00    1476/1476        Polygon** std::__uninitialized_copy_a<std::move_iterator<Polygon**>, Polygon**, Polygon*>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**, std::allocator<Polygon*>&) [272]
[271]    0.0    0.00    0.00    1476         Polygon** std::uninitialized_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [271]
                0.00    0.00    1476/1476        Polygon** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [268]
-----------------------------------------------
                0.00    0.00    1476/1476        Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&) [273]
[272]    0.0    0.00    0.00    1476         Polygon** std::__uninitialized_copy_a<std::move_iterator<Polygon**>, Polygon**, Polygon*>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**, std::allocator<Polygon*>&) [272]
                0.00    0.00    1476/1476        Polygon** std::uninitialized_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [271]
-----------------------------------------------
                0.00    0.00    1476/1476        void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
[273]    0.0    0.00    0.00    1476         Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&) [273]
                0.00    0.00    2952/2952        std::move_iterator<Polygon**> std::__make_move_if_noexcept_iterator<Polygon*, std::move_iterator<Polygon**> >(Polygon**) [200]
                0.00    0.00    1476/1476        Polygon** std::__uninitialized_copy_a<std::move_iterator<Polygon**>, Polygon**, Polygon*>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**, std::allocator<Polygon*>&) [272]
-----------------------------------------------
                0.00    0.00    1476/1476        Polygon** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [268]
[274]    0.0    0.00    0.00    1476         Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [274]
                0.00    0.00    2952/2952        decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>) [198]
                0.00    0.00    1476/1476        Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**) [270]
-----------------------------------------------
                0.00    0.00    1253/1253        void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&) [277]
[275]    0.0    0.00    0.00    1253         void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&) [275]
                0.00    0.00    1253/3759        Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&) [180]
                0.00    0.00    1253/117459      operator new(unsigned long, void*) [80]
-----------------------------------------------
                0.00    0.00    1253/1253        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
[276]    0.0    0.00    0.00    1253         std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [276]
                0.00    0.00    5012/9013        std::vector<Individual*, std::allocator<Individual*> >::size() const [159]
                0.00    0.00    2506/2506        std::vector<Individual*, std::allocator<Individual*> >::max_size() const [214]
                0.00    0.00    1253/1991        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [236]
-----------------------------------------------
                0.00    0.00    1253/1253        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
[277]    0.0    0.00    0.00    1253         void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&) [277]
                0.00    0.00    1253/3759        Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&) [180]
                0.00    0.00    1253/1253        void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&) [275]
-----------------------------------------------
                0.00    0.00    1253/1253        std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [279]
[278]    0.0    0.00    0.00    1253         void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
                0.00    0.00    3759/8261        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [161]
                0.00    0.00    2506/10553       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [157]
                0.00    0.00    2506/2506        Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&) [222]
                0.00    0.00    1253/1253        std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [276]
                0.00    0.00    1253/1754        std::vector<Individual*, std::allocator<Individual*> >::begin() [244]
                0.00    0.00    1253/2003        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [234]
                0.00    0.00    1253/3004        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long) [194]
                0.00    0.00    1253/3759        Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&) [180]
                0.00    0.00    1253/1253        void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&) [277]
                0.00    0.00    1253/3504        void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&) [186]
                0.00    0.00    1253/3504        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long) [184]
-----------------------------------------------
                0.00    0.00       3/1253        Population::Population(int, int, int, int, int) [12]
                0.00    0.00     500/1253        GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [8]
                0.00    0.00     750/1253        GeneticAlgorithm::evolve(int) [3]
[279]    0.0    0.00    0.00    1253         std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&) [279]
                0.00    0.00    1253/1754        std::vector<Individual*, std::allocator<Individual*> >::end() [243]
                0.00    0.00    1253/1253        void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [278]
-----------------------------------------------
                0.00    0.00     500/1051        void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [341]
                0.00    0.00     551/1051        void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [320]
[280]    0.0    0.00    0.00    1051         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator--() [280]
-----------------------------------------------
                0.00    0.00       4/1004        GeneticAlgorithm::clean_population() [403]
                0.00    0.00     250/1004        void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [339]
                0.00    0.00     750/1004        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
[281]    0.0    0.00    0.00    1004         bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [281]
                0.00    0.00    2008/10553       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [157]
-----------------------------------------------
                0.00    0.00     888/888         void std::_Destroy<Polygon**>(Polygon**, Polygon**) [286]
[282]    0.0    0.00    0.00     888         void std::_Destroy_aux<true>::__destroy<Polygon**>(Polygon**, Polygon**) [282]
-----------------------------------------------
                0.00    0.00     150/888         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base() [353]
                0.00    0.00     738/888         void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
[283]    0.0    0.00    0.00     888         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long) [283]
                0.00    0.00     738/738         std::allocator_traits<std::allocator<Polygon*> >::deallocate(std::allocator<Polygon*>&, Polygon**, unsigned long) [297]
-----------------------------------------------
                0.00    0.00     150/888         GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
                0.00    0.00     738/888         void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [211]
[284]    0.0    0.00    0.00     888         std::vector<Polygon*, std::allocator<Polygon*> >::end() [284]
                0.00    0.00     888/1776        __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::__normal_iterator(Polygon** const&) [242]
-----------------------------------------------
                0.00    0.00     150/888         GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
                0.00    0.00     738/888         void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
[285]    0.0    0.00    0.00     888         std::vector<Polygon*, std::allocator<Polygon*> >::begin() [285]
                0.00    0.00     888/1776        __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::__normal_iterator(Polygon** const&) [242]
-----------------------------------------------
                0.00    0.00     888/888         void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&) [287]
[286]    0.0    0.00    0.00     888         void std::_Destroy<Polygon**>(Polygon**, Polygon**) [286]
                0.00    0.00     888/888         void std::_Destroy_aux<true>::__destroy<Polygon**>(Polygon**, Polygon**) [282]
-----------------------------------------------
                0.00    0.00     150/888         std::vector<Polygon*, std::allocator<Polygon*> >::~vector() [355]
                0.00    0.00     738/888         void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
[287]    0.0    0.00    0.00     888         void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&) [287]
                0.00    0.00     888/888         void std::_Destroy<Polygon**>(Polygon**, Polygon**) [286]
-----------------------------------------------
                0.00    0.00     772/772         cv::Mat::Mat(int, int, int, void*, unsigned long) [291]
[288]    0.0    0.00    0.00     772         cv::MatStep::MatStep() [288]
-----------------------------------------------
                0.00    0.00     772/772         cv::Mat::Mat(int, int, int, void*, unsigned long) [291]
[289]    0.0    0.00    0.00     772         cv::Mat::total() const [289]
-----------------------------------------------
                0.00    0.00       3/753         GeneticAlgorithm::clean_population() [403]
                0.00    0.00     250/753         void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [341]
                0.00    0.00     500/753         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
[290]    0.0    0.00    0.00     753         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++() [290]
-----------------------------------------------
                0.00    0.00     751/751         Individual::draw_CV(unsigned char*, int, int) [4]
[291]    0.0    0.00    0.00     751         cv::Mat::Mat(int, int, int, void*, unsigned long) [291]
                0.00    0.00    1544/1544        cv::MatStep::operator[](int) [262]
                0.00    0.00     772/38357       cv::MatSize::MatSize(int*) [111]
                0.00    0.00     772/772         cv::MatStep::MatStep() [288]
                0.00    0.00     772/772         cv::Mat::total() const [289]
-----------------------------------------------
                0.00    0.00     738/738         std::allocator_traits<std::allocator<Polygon*> >::deallocate(std::allocator<Polygon*>&, Polygon**, unsigned long) [297]
[292]    0.0    0.00    0.00     738         __gnu_cxx::new_allocator<Polygon*>::deallocate(Polygon**, unsigned long) [292]
-----------------------------------------------
                0.00    0.00     738/738         std::allocator_traits<std::allocator<Polygon*> >::allocate(std::allocator<Polygon*>&, unsigned long) [298]
[293]    0.0    0.00    0.00     738         __gnu_cxx::new_allocator<Polygon*>::allocate(unsigned long, void const*) [293]
                0.00    0.00     738/2214        __gnu_cxx::new_allocator<Polygon*>::max_size() const [232]
-----------------------------------------------
                0.00    0.00     738/738         void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
[294]    0.0    0.00    0.00     738         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::difference_type __gnu_cxx::operator-<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [294]
                0.00    0.00    1476/8340        __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const [160]
-----------------------------------------------
                0.00    0.00     738/738         void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
[295]    0.0    0.00    0.00     738         std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [295]
                0.00    0.00    2952/3027        std::vector<Polygon*, std::allocator<Polygon*> >::size() const [192]
                0.00    0.00    1476/1476        std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const [265]
                0.00    0.00     738/1991        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [236]
-----------------------------------------------
                0.00    0.00     738/738         void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
[296]    0.0    0.00    0.00     738         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_allocate(unsigned long) [296]
                0.00    0.00     738/738         std::allocator_traits<std::allocator<Polygon*> >::allocate(std::allocator<Polygon*>&, unsigned long) [298]
-----------------------------------------------
                0.00    0.00     738/738         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long) [283]
[297]    0.0    0.00    0.00     738         std::allocator_traits<std::allocator<Polygon*> >::deallocate(std::allocator<Polygon*>&, Polygon**, unsigned long) [297]
                0.00    0.00     738/738         __gnu_cxx::new_allocator<Polygon*>::deallocate(Polygon**, unsigned long) [292]
-----------------------------------------------
                0.00    0.00     738/738         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_allocate(unsigned long) [296]
[298]    0.0    0.00    0.00     738         std::allocator_traits<std::allocator<Polygon*> >::allocate(std::allocator<Polygon*>&, unsigned long) [298]
                0.00    0.00     738/738         __gnu_cxx::new_allocator<Polygon*>::allocate(unsigned long, void const*) [293]
-----------------------------------------------
                0.00    0.00     738/738         void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&) [211]
[299]    0.0    0.00    0.00     738         void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&) [299]
                0.00    0.00    2214/2364        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() [228]
                0.00    0.00    1476/8340        __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const [160]
                0.00    0.00    1476/1476        Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&) [273]
                0.00    0.00     738/738         std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [295]
                0.00    0.00     738/888         std::vector<Polygon*, std::allocator<Polygon*> >::begin() [285]
                0.00    0.00     738/738         __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::difference_type __gnu_cxx::operator-<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [294]
                0.00    0.00     738/738         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_allocate(unsigned long) [296]
                0.00    0.00     738/109266      Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&) [85]
                0.00    0.00     738/2544        void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [210]
                0.00    0.00     738/888         void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&) [287]
                0.00    0.00     738/888         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long) [283]
-----------------------------------------------
                0.00    0.00     551/551         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [320]
[300]    0.0    0.00    0.00     551         bool __gnu_cxx::__ops::_Val_less_iter::operator()<Individual*, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(Individual*&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [300]
                0.00    0.00     551/3178        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [191]
-----------------------------------------------
                0.00    0.00       7/517         Individual::mutate() [15]
                0.00    0.00     510/517         Polygon::random_polygon(int, int, int) [10]
[301]    0.0    0.00    0.00     517         Point::Point(int, int) [301]
-----------------------------------------------
                0.00    0.00     517/517         void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&) [303]
[302]    0.0    0.00    0.00     517         void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&) [302]
                0.00    0.00     517/2061        Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&) [233]
                0.00    0.00     517/117459      operator new(unsigned long, void*) [80]
-----------------------------------------------
                0.00    0.00     517/517         std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&) [30]
[303]    0.0    0.00    0.00     517         void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&) [303]
                0.00    0.00     517/2061        Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&) [233]
                0.00    0.00     517/517         void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&) [302]
-----------------------------------------------
                0.00    0.00     504/504         std::allocator<std::_List_node<Polygon*> >::allocator() [305]
[304]    0.0    0.00    0.00     504         __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::new_allocator() [304]
-----------------------------------------------
                0.00    0.00     504/504         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl() [306]
[305]    0.0    0.00    0.00     504         std::allocator<std::_List_node<Polygon*> >::allocator() [305]
                0.00    0.00     504/504         __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::new_allocator() [304]
-----------------------------------------------
                0.00    0.00     504/504         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_base() [307]
[306]    0.0    0.00    0.00     504         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl() [306]
                0.00    0.00     504/504         std::allocator<std::_List_node<Polygon*> >::allocator() [305]
                0.00    0.00     504/28282       std::__detail::_List_node_header::_List_node_header() [126]
-----------------------------------------------
                0.00    0.00     504/504         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list() [308]
[307]    0.0    0.00    0.00     504         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_base() [307]
                0.00    0.00     504/504         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl() [306]
-----------------------------------------------
                0.00    0.00       1/504         Individual::Individual(Individual*) [402]
                0.00    0.00       3/504         Individual::Individual(int, int, int, int) [11]
                0.00    0.00     500/504         GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [8]
[308]    0.0    0.00    0.00     504         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list() [308]
                0.00    0.00     504/504         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_base() [307]
-----------------------------------------------
                0.00    0.00     501/501         std::allocator<Individual*>::allocator() [310]
[309]    0.0    0.00    0.00     501         __gnu_cxx::new_allocator<Individual*>::new_allocator() [309]
-----------------------------------------------
                0.00    0.00     501/501         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl() [311]
[310]    0.0    0.00    0.00     501         std::allocator<Individual*>::allocator() [310]
                0.00    0.00     501/501         __gnu_cxx::new_allocator<Individual*>::new_allocator() [309]
-----------------------------------------------
                0.00    0.00     501/501         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base() [312]
[311]    0.0    0.00    0.00     501         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl() [311]
                0.00    0.00     501/501         std::allocator<Individual*>::allocator() [310]
-----------------------------------------------
                0.00    0.00     501/501         std::vector<Individual*, std::allocator<Individual*> >::vector() [313]
[312]    0.0    0.00    0.00     501         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base() [312]
                0.00    0.00     501/501         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl() [311]
-----------------------------------------------
                0.00    0.00       1/501         Population::Population(int, int, int, int, int) [12]
                0.00    0.00     250/501         GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [8]
                0.00    0.00     250/501         GeneticAlgorithm::evolve(int) [3]
[313]    0.0    0.00    0.00     501         std::vector<Individual*, std::allocator<Individual*> >::vector() [313]
                0.00    0.00     501/501         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base() [312]
-----------------------------------------------
                0.00    0.00     500/500         GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [8]
[314]    0.0    0.00    0.00     500         Individual::Individual(int, int, int, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [314]
-----------------------------------------------
                0.00    0.00     250/500         void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [341]
                0.00    0.00     250/500         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
[315]    0.0    0.00    0.00     500         bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [315]
                0.00    0.00    1000/10553       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [157]
-----------------------------------------------
                0.00    0.00     500/500         void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [341]
[316]    0.0    0.00    0.00     500         bool __gnu_cxx::operator< <Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [316]
                0.00    0.00    1000/10553       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [157]
-----------------------------------------------
                0.00    0.00     500/500         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
[317]    0.0    0.00    0.00     500         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [317]
                0.00    0.00    1000/3178        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [191]
-----------------------------------------------
                0.00    0.00     250/500         Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >) [32]
                0.00    0.00     250/500         std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&) [34]
[318]    0.0    0.00    0.00     500         std::remove_reference<std::vector<Individual*, std::allocator<Individual*> >&>::type&& std::move<std::vector<Individual*, std::allocator<Individual*> >&>(std::vector<Individual*, std::allocator<Individual*> >&) [318]
-----------------------------------------------
                0.00    0.00     489/489         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
[319]    0.0    0.00    0.00     489         __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [319]
-----------------------------------------------
                0.00    0.00     489/489         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
[320]    0.0    0.00    0.00     489         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [320]
                0.00    0.00    1102/3178        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [191]
                0.00    0.00    1040/1812        std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&) [237]
                0.00    0.00     551/1051        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator--() [280]
                0.00    0.00     551/551         bool __gnu_cxx::__ops::_Val_less_iter::operator()<Individual*, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(Individual*&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [300]
-----------------------------------------------
                0.00    0.00      37/317         Individual::mutate() [15]
                0.00    0.00     280/317         Polygon::move(int, int) [44]
[321]    0.0    0.00    0.00     317         Point::set_x(int) [321]
-----------------------------------------------
                0.00    0.00      31/311         Individual::mutate() [15]
                0.00    0.00     280/311         Polygon::move(int, int) [44]
[322]    0.0    0.00    0.00     311         Point::set_y(int) [322]
-----------------------------------------------
                0.00    0.00     261/261         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
[323]    0.0    0.00    0.00     261         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator+(long) const [323]
                0.00    0.00     261/3780        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [179]
-----------------------------------------------
                0.00    0.00     250/250         GeneticAlgorithm::evolve(int) [3]
[324]    0.0    0.00    0.00     250         sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [324]
                0.00    0.00     500/1754        std::vector<Individual*, std::allocator<Individual*> >::end() [243]
                0.00    0.00     500/1754        std::vector<Individual*, std::allocator<Individual*> >::begin() [244]
                0.00    0.00     250/250         void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [337]
                0.00    0.00     250/250         void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [340]
-----------------------------------------------
                0.00    0.00     250/250         void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [337]
[325]    0.0    0.00    0.00     250         __gnu_cxx::__ops::__iter_less_iter() [325]
-----------------------------------------------
                0.00    0.00     250/250         std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [33]
[326]    0.0    0.00    0.00     250         std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const [326]
                0.00    0.00     250/4507        std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const [169]
                0.00    0.00     250/4002        std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [178]
-----------------------------------------------
                0.00    0.00     250/250         std::vector<Individual*, std::allocator<Individual*> >::vector(std::allocator<Individual*> const&) [328]
[327]    0.0    0.00    0.00     250         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(std::allocator<Individual*> const&) [327]
                0.00    0.00     250/2001        std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&) [235]
-----------------------------------------------
                0.00    0.00     250/250         std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [33]
[328]    0.0    0.00    0.00     250         std::vector<Individual*, std::allocator<Individual*> >::vector(std::allocator<Individual*> const&) [328]
                0.00    0.00     250/250         std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(std::allocator<Individual*> const&) [327]
-----------------------------------------------
                0.00    0.00     250/250         std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [33]
[329]    0.0    0.00    0.00     250         void std::__alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&) [329]
                0.00    0.00     250/250         void std::__do_alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&, std::integral_constant<bool, true>) [332]
-----------------------------------------------
                0.00    0.00     250/250         void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [334]
[330]    0.0    0.00    0.00     250         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
                0.00    0.00     750/1004        bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [281]
                0.00    0.00     500/500         bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [317]
                0.00    0.00     500/753         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++() [290]
                0.00    0.00     489/489         __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [319]
                0.00    0.00     489/489         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter) [320]
                0.00    0.00     261/261         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator+(long) const [323]
                0.00    0.00     250/500         bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [315]
                0.00    0.00      22/3178        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [191]
                0.00    0.00      22/1812        std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&) [237]
                0.00    0.00      11/11          __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [378]
-----------------------------------------------
                0.00    0.00     250/250         void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [339]
[331]    0.0    0.00    0.00     250         void std::__introsort_loop<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [331]
                0.00    0.00     250/2003        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [234]
-----------------------------------------------
                0.00    0.00     250/250         void std::__alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&) [329]
[332]    0.0    0.00    0.00     250         void std::__do_alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&, std::integral_constant<bool, true>) [332]
                0.00    0.00     250/250         std::remove_reference<std::allocator<Individual*>&>::type&& std::move<std::allocator<Individual*>&>(std::allocator<Individual*>&) [336]
-----------------------------------------------
                0.00    0.00     250/250         void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [340]
[333]    0.0    0.00    0.00     250         std::iterator_traits<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [333]
-----------------------------------------------
                0.00    0.00     250/250         void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [339]
[334]    0.0    0.00    0.00     250         void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [334]
                0.00    0.00     250/2003        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [234]
                0.00    0.00     250/250         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
-----------------------------------------------
                0.00    0.00     250/250         void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [339]
[335]    0.0    0.00    0.00     250         std::__lg(long) [335]
-----------------------------------------------
                0.00    0.00     250/250         void std::__do_alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&, std::integral_constant<bool, true>) [332]
[336]    0.0    0.00    0.00     250         std::remove_reference<std::allocator<Individual*>&>::type&& std::move<std::allocator<Individual*>&>(std::allocator<Individual*>&) [336]
-----------------------------------------------
                0.00    0.00     250/250         sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [324]
[337]    0.0    0.00    0.00     250         void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [337]
                0.00    0.00     250/250         __gnu_cxx::__ops::__iter_less_iter() [325]
                0.00    0.00     250/250         void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [339]
-----------------------------------------------
                0.00    0.00     250/250         void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [342]
[338]    0.0    0.00    0.00     250         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual*> >, std::is_move_constructible<Individual*>, std::is_move_assignable<Individual*> >::value, void>::type std::swap<Individual*>(Individual*&, Individual*&) [338]
                0.00    0.00     750/1812        std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&) [237]
-----------------------------------------------
                0.00    0.00     250/250         void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [337]
[339]    0.0    0.00    0.00     250         void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [339]
                0.00    0.00     250/1004        bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [281]
                0.00    0.00     250/2003        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [234]
                0.00    0.00     250/250         std::__lg(long) [335]
                0.00    0.00     250/250         void std::__introsort_loop<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [331]
                0.00    0.00     250/250         void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [334]
-----------------------------------------------
                0.00    0.00     250/250         sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [324]
[340]    0.0    0.00    0.00     250         void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [340]
                0.00    0.00     250/250         std::iterator_traits<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [333]
                0.00    0.00     250/250         void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [341]
-----------------------------------------------
                0.00    0.00     250/250         void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [340]
[341]    0.0    0.00    0.00     250         void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [341]
                0.00    0.00     500/1051        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator--() [280]
                0.00    0.00     500/500         bool __gnu_cxx::operator< <Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [316]
                0.00    0.00     250/500         bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [315]
                0.00    0.00     250/250         void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [342]
                0.00    0.00     250/753         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++() [290]
-----------------------------------------------
                0.00    0.00     250/250         void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag) [341]
[342]    0.0    0.00    0.00     250         void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [342]
                0.00    0.00     500/3178        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [191]
                0.00    0.00     250/250         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual*> >, std::is_move_constructible<Individual*>, std::is_move_assignable<Individual*> >::value, void>::type std::swap<Individual*>(Individual*&, Individual*&) [338]
-----------------------------------------------
                0.00    0.00     175/175         GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [8]
[343]    0.0    0.00    0.00     175         GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [343]
                0.00    0.00   17519/25417       Individual::get_dna(int) [139]
                0.00    0.00   17519/27618       Polygon::Polygon(Polygon*) [134]
                0.00    0.00   17519/25224       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [156]
                0.00    0.00     350/2411        Individual::get_len_dna() [227]
-----------------------------------------------
                0.00    0.00     160/160         Polygon::random_polygon(int, int, int) [10]
[344]    0.0    0.00    0.00     160         Colour::Colour(unsigned char, unsigned char, unsigned char, double) [344]
-----------------------------------------------
                0.00    0.00     160/160         Polygon::random_polygon(int, int, int) [10]
[345]    0.0    0.00    0.00     160         Polygon::Polygon(Colour*) [345]
                0.00    0.00     160/27778       std::__cxx11::list<Point*, std::allocator<Point*> >::list() [131]
-----------------------------------------------
                0.00    0.00     150/150         std::allocator<Polygon*>::allocator() [348]
[346]    0.0    0.00    0.00     150         __gnu_cxx::new_allocator<Polygon*>::new_allocator() [346]
-----------------------------------------------
                0.00    0.00     150/150         std::allocator<Polygon*>::~allocator() [349]
[347]    0.0    0.00    0.00     150         __gnu_cxx::new_allocator<Polygon*>::~new_allocator() [347]
-----------------------------------------------
                0.00    0.00     150/150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::_Vector_impl() [350]
[348]    0.0    0.00    0.00     150         std::allocator<Polygon*>::allocator() [348]
                0.00    0.00     150/150         __gnu_cxx::new_allocator<Polygon*>::new_allocator() [346]
-----------------------------------------------
                0.00    0.00     150/150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::~_Vector_impl() [351]
[349]    0.0    0.00    0.00     150         std::allocator<Polygon*>::~allocator() [349]
                0.00    0.00     150/150         __gnu_cxx::new_allocator<Polygon*>::~new_allocator() [347]
-----------------------------------------------
                0.00    0.00     150/150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_base() [352]
[350]    0.0    0.00    0.00     150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::_Vector_impl() [350]
                0.00    0.00     150/150         std::allocator<Polygon*>::allocator() [348]
-----------------------------------------------
                0.00    0.00     150/150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base() [353]
[351]    0.0    0.00    0.00     150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::~_Vector_impl() [351]
                0.00    0.00     150/150         std::allocator<Polygon*>::~allocator() [349]
-----------------------------------------------
                0.00    0.00     150/150         std::vector<Polygon*, std::allocator<Polygon*> >::vector() [354]
[352]    0.0    0.00    0.00     150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_base() [352]
                0.00    0.00     150/150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::_Vector_impl() [350]
-----------------------------------------------
                0.00    0.00     150/150         std::vector<Polygon*, std::allocator<Polygon*> >::~vector() [355]
[353]    0.0    0.00    0.00     150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base() [353]
                0.00    0.00     150/888         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long) [283]
                0.00    0.00     150/150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::~_Vector_impl() [351]
-----------------------------------------------
                0.00    0.00     150/150         GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
[354]    0.0    0.00    0.00     150         std::vector<Polygon*, std::allocator<Polygon*> >::vector() [354]
                0.00    0.00     150/150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_base() [352]
-----------------------------------------------
                0.00    0.00     150/150         GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
[355]    0.0    0.00    0.00     150         std::vector<Polygon*, std::allocator<Polygon*> >::~vector() [355]
                0.00    0.00     150/2364        std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() [228]
                0.00    0.00     150/150         std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base() [353]
                0.00    0.00     150/888         void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&) [287]
-----------------------------------------------
                0.00    0.00      75/75          GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
[356]    0.0    0.00    0.00      75         int const& std::max<int>(int const&, int const&) [356]
-----------------------------------------------
                0.00    0.00      75/75          GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [45]
[357]    0.0    0.00    0.00      75         int const& std::min<int>(int const&, int const&) [357]
-----------------------------------------------
                0.00    0.00      43/43          Individual::mutate() [15]
[358]    0.0    0.00    0.00      43         Colour::set_g(int) [358]
-----------------------------------------------
                0.00    0.00      39/39          Individual::mutate() [15]
[359]    0.0    0.00    0.00      39         Colour::set_r(int) [359]
-----------------------------------------------
                0.00    0.00      37/37          Individual::mutate() [15]
[360]    0.0    0.00    0.00      37         Colour::set_b(int) [360]
-----------------------------------------------
                0.00    0.00      33/33          __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [380]
[361]    0.0    0.00    0.00      33         Individual** std::__niter_base<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [361]
                0.00    0.00      33/10553       __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [157]
-----------------------------------------------
                0.00    0.00      31/31          Individual::mutate() [15]
[362]    0.0    0.00    0.00      31         Colour::set_a(double) [362]
-----------------------------------------------
                0.00    0.00      10/30          std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [384]
                0.00    0.00      10/30          void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&) [383]
                0.00    0.00      10/30          void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&) [382]
[363]    0.0    0.00    0.00      30         Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&) [363]
-----------------------------------------------
                0.00    0.00      10/24          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [385]
                0.00    0.00      14/24          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>) [375]
[364]    0.0    0.00    0.00      24         std::_List_const_iterator<Polygon*>::_M_const_cast() const [364]
                0.00    0.00      24/52221       std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [109]
-----------------------------------------------
                0.00    0.00      10/24          Individual::insert_dna(int, Polygon*) [381]
                0.00    0.00      14/24          Individual::remove_dna(int) [368]
[365]    0.0    0.00    0.00      24         std::_List_const_iterator<Polygon*>::_List_const_iterator(std::_List_iterator<Polygon*> const&) [365]
-----------------------------------------------
                0.00    0.00      10/24          Individual::insert_dna(int, Polygon*) [381]
                0.00    0.00      14/24          Individual::remove_dna(int) [368]
[366]    0.0    0.00    0.00      24         void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int) [366]
                0.00    0.00      24/25441       std::iterator_traits<std::_List_iterator<Polygon*> >::iterator_category std::__iterator_category<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*> const&) [137]
                0.00    0.00      24/25441       void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag) [138]
-----------------------------------------------
                0.00    0.00      22/22          __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [378]
[367]    0.0    0.00    0.00      22         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [367]
-----------------------------------------------
                0.00    0.00      14/14          Individual::mutate() [15]
[368]    0.0    0.00    0.00      14         Individual::remove_dna(int) [368]
                0.00    0.00      14/26195       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [135]
                0.00    0.00      14/63162       std::_List_iterator<Polygon*>::operator*() const [108]
                0.00    0.00      14/24          void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int) [366]
                0.00    0.00      14/14          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>) [375]
                0.00    0.00      14/24          std::_List_const_iterator<Polygon*>::_List_const_iterator(std::_List_iterator<Polygon*> const&) [365]
-----------------------------------------------
                0.00    0.00      14/14          std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::deallocate(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*, unsigned long) [371]
[369]    0.0    0.00    0.00      14         __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::deallocate(std::_List_node<Polygon*>*, unsigned long) [369]
-----------------------------------------------
                0.00    0.00      14/14          void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::destroy<Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**) [372]
[370]    0.0    0.00    0.00      14         void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::destroy<Polygon*>(Polygon**) [370]
-----------------------------------------------
                0.00    0.00      14/14          std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_put_node(std::_List_node<Polygon*>*) [374]
[371]    0.0    0.00    0.00      14         std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::deallocate(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*, unsigned long) [371]
                0.00    0.00      14/14          __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::deallocate(std::_List_node<Polygon*>*, unsigned long) [369]
-----------------------------------------------
                0.00    0.00      14/14          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [376]
[372]    0.0    0.00    0.00      14         void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::destroy<Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**) [372]
                0.00    0.00      14/14          void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::destroy<Polygon*>(Polygon**) [370]
-----------------------------------------------
                0.00    0.00      14/14          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [376]
[373]    0.0    0.00    0.00      14         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_dec_size(unsigned long) [373]
-----------------------------------------------
                0.00    0.00      14/14          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [376]
[374]    0.0    0.00    0.00      14         std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_put_node(std::_List_node<Polygon*>*) [374]
                0.00    0.00      14/14          std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::deallocate(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*, unsigned long) [371]
-----------------------------------------------
                0.00    0.00      14/14          Individual::remove_dna(int) [368]
[375]    0.0    0.00    0.00      14         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>) [375]
                0.00    0.00      14/52221       std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [109]
                0.00    0.00      14/24          std::_List_const_iterator<Polygon*>::_M_const_cast() const [364]
                0.00    0.00      14/14          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [376]
-----------------------------------------------
                0.00    0.00      14/14          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>) [375]
[376]    0.0    0.00    0.00      14         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>) [376]
                0.00    0.00      14/14          std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_dec_size(unsigned long) [373]
                0.00    0.00      14/88410       std::_List_node<Polygon*>::_M_valptr() [98]
                0.00    0.00      14/25248       std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator() [142]
                0.00    0.00      14/14          void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::destroy<Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**) [372]
                0.00    0.00      14/14          std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_put_node(std::_List_node<Polygon*>*) [374]
-----------------------------------------------
                0.00    0.00      11/11          Individual** std::__copy_move_backward_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [379]
[377]    0.0    0.00    0.00      11         Individual** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Individual*>(Individual* const*, Individual* const*, Individual**) [377]
-----------------------------------------------
                0.00    0.00      11/11          void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter) [330]
[378]    0.0    0.00    0.00      11         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [378]
                0.00    0.00      22/22          __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [367]
                0.00    0.00      11/11          __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [380]
-----------------------------------------------
                0.00    0.00      11/11          __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [380]
[379]    0.0    0.00    0.00      11         Individual** std::__copy_move_backward_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [379]
                0.00    0.00      11/11          Individual** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Individual*>(Individual* const*, Individual* const*, Individual**) [377]
-----------------------------------------------
                0.00    0.00      11/11          __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [378]
[380]    0.0    0.00    0.00      11         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [380]
                0.00    0.00      33/33          Individual** std::__niter_base<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) [361]
                0.00    0.00      11/11          Individual** std::__copy_move_backward_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**) [379]
                0.00    0.00      11/3780        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [179]
-----------------------------------------------
                0.00    0.00      10/10          Individual::mutate() [15]
[381]    0.0    0.00    0.00      10         Individual::insert_dna(int, Polygon*) [381]
                0.00    0.00      10/26195       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [135]
                0.00    0.00      10/24          void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int) [366]
                0.00    0.00      10/24          std::_List_const_iterator<Polygon*>::_List_const_iterator(std::_List_iterator<Polygon*> const&) [365]
                0.00    0.00      10/10          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [385]
-----------------------------------------------
                0.00    0.00      10/10          void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&) [383]
[382]    0.0    0.00    0.00      10         void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&) [382]
                0.00    0.00      10/30          Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&) [363]
                0.00    0.00      10/117459      operator new(unsigned long, void*) [80]
-----------------------------------------------
                0.00    0.00      10/10          std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [384]
[383]    0.0    0.00    0.00      10         void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&) [383]
                0.00    0.00      10/30          Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&) [363]
                0.00    0.00      10/10          void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&) [382]
-----------------------------------------------
                0.00    0.00      10/10          std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [385]
[384]    0.0    0.00    0.00      10         std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [384]
                0.00    0.00      10/25234       std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node() [149]
                0.00    0.00      10/25248       std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator() [142]
                0.00    0.00      10/25234       std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*) [145]
                0.00    0.00      10/30          Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&) [363]
                0.00    0.00      10/88410       std::_List_node<Polygon*>::_M_valptr() [98]
                0.00    0.00      10/10          void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&) [383]
                0.00    0.00      10/25234       std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::operator=(decltype(nullptr)) [147]
                0.00    0.00      10/25234       std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::~__allocated_ptr() [146]
-----------------------------------------------
                0.00    0.00      10/10          Individual::insert_dna(int, Polygon*) [381]
[385]    0.0    0.00    0.00      10         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&) [385]
                0.00    0.00      10/10          std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&) [384]
                0.00    0.00      10/24          std::_List_const_iterator<Polygon*>::_M_const_cast() const [364]
                0.00    0.00      10/25234       std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_inc_size(unsigned long) [150]
                0.00    0.00      10/52221       std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [109]
-----------------------------------------------
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<cvflann::anyimpl::empty_any>::~typed_base_any_policy() [407]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<char const*>::~typed_base_any_policy() [411]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<int>::~typed_base_any_policy() [414]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<float>::~typed_base_any_policy() [413]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<bool>::~typed_base_any_policy() [412]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<cvflann::flann_algorithm_t>::~typed_base_any_policy() [408]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<cvflann::flann_centers_init_t>::~typed_base_any_policy() [409]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<unsigned int>::~typed_base_any_policy() [415]
                0.00    0.00       1/9           cvflann::anyimpl::typed_base_any_policy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~typed_base_any_policy() [410]
[386]    0.0    0.00    0.00       9         cvflann::anyimpl::base_any_policy::~base_any_policy() [386]
-----------------------------------------------
                0.00    0.00       7/7           std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&) [47]
[387]    0.0    0.00    0.00       7         std::_List_const_iterator<Point*>::_M_const_cast() const [387]
                0.00    0.00       7/263964      std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [62]
-----------------------------------------------
                0.00    0.00       7/7           Polygon::insert_point(int, Point*) [46]
[388]    0.0    0.00    0.00       7         std::_List_const_iterator<Point*>::_List_const_iterator(std::_List_iterator<Point*> const&) [388]
-----------------------------------------------
                0.00    0.00       7/7           Polygon::insert_point(int, Point*) [46]
[389]    0.0    0.00    0.00       7         void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int) [389]
                0.00    0.00       7/120293      std::iterator_traits<std::_List_iterator<Point*> >::iterator_category std::__iterator_category<std::_List_iterator<Point*> >(std::_List_iterator<Point*> const&) [71]
                0.00    0.00       7/120293      void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag) [72]
-----------------------------------------------
                0.00    0.00       3/3           GeneticAlgorithm::clean_population() [403]
[390]    0.0    0.00    0.00       3         Individual::~Individual() [390]
                0.00    0.00     150/38485       std::_List_iterator<Polygon*>::operator!=(std::_List_iterator<Polygon*> const&) const [110]
                0.00    0.00     147/63162       std::_List_iterator<Polygon*>::operator*() const [108]
                0.00    0.00     147/662331      std::_List_iterator<Polygon*>::operator++() [56]
                0.00    0.00       3/26195       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin() [135]
                0.00    0.00       3/25978       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end() [136]
-----------------------------------------------
                0.00    0.00       2/2           void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag) [72]
[391]    0.0    0.00    0.00       2         std::_List_iterator<Point*>::operator--() [391]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [586]
[392]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN10IndividualC2EiiiPNSt7__cxx114listIP7PolygonSaIS3_EEE [392]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [400]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [586]
[393]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN16GeneticAlgorithmC2EPhii [393]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [399]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [586]
[394]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7Polygon14random_polygonEiii [394]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [401]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [586]
[395]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7Problem3runEPN2cv3MatEi [395]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [398]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [586]
[396]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [396]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [397]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [396]
[397]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [397]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7Problem3runEPN2cv3MatEi [395]
[398]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [398]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN16GeneticAlgorithmC2EPhii [393]
[399]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [399]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN10IndividualC2EiiiPNSt7__cxx114listIP7PolygonSaIS3_EEE [392]
[400]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [400]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7Polygon14random_polygonEiii [394]
[401]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [401]
-----------------------------------------------
                0.00    0.00       1/1           GeneticAlgorithm::evolve(int) [3]
[402]    0.0    0.00    0.00       1         Individual::Individual(Individual*) [402]
                0.00    0.00      50/2411        Individual::get_len_dna() [227]
                0.00    0.00      49/25417       Individual::get_dna(int) [139]
                0.00    0.00      49/27618       Polygon::Polygon(Polygon*) [134]
                0.00    0.00      49/25224       std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&) [156]
                0.00    0.00       1/504         std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list() [308]
-----------------------------------------------
                0.00    0.00       1/1           GeneticAlgorithm::evolve(int) [3]
[403]    0.0    0.00    0.00       1         GeneticAlgorithm::clean_population() [403]
                0.00    0.00       4/1004        bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [281]
                0.00    0.00       3/3178        __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [191]
                0.00    0.00       3/3           Individual::~Individual() [390]
                0.00    0.00       3/753         __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++() [290]
                0.00    0.00       1/1501        Population::get_individuals() [263]
                0.00    0.00       1/1754        std::vector<Individual*, std::allocator<Individual*> >::begin() [244]
                0.00    0.00       1/1754        std::vector<Individual*, std::allocator<Individual*> >::end() [243]
                0.00    0.00       1/2251        std::vector<Individual*, std::allocator<Individual*> >::~vector() [231]
-----------------------------------------------
                0.00    0.00       1/1           cv::Mat::Mat(int, int, int) [405]
[404]    0.0    0.00    0.00       1         cv::Mat::create(int, int, int) [404]
-----------------------------------------------
                0.00    0.00       1/1           Problem::run(cv::Mat*, int) [2]
[405]    0.0    0.00    0.00       1         cv::Mat::Mat(int, int, int) [405]
                0.00    0.00       1/38357       cv::MatSize::MatSize(int*) [111]
                0.00    0.00       1/37585       cv::MatStep::MatStep(unsigned long) [113]
                0.00    0.00       1/1           cv::Mat::create(int, int, int) [404]
-----------------------------------------------
                0.00    0.00       1/1           cv::MatSize::operator()() const [419]
[406]    0.0    0.00    0.00       1         cv::Size_<int>::Size_(int, int) [406]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::big_any_policy<cvflann::anyimpl::empty_any>::~big_any_policy() [447]
[407]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<cvflann::anyimpl::empty_any>::~typed_base_any_policy() [407]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [386]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::big_any_policy<cvflann::flann_algorithm_t>::~big_any_policy() [456]
[408]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<cvflann::flann_algorithm_t>::~typed_base_any_policy() [408]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [386]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::big_any_policy<cvflann::flann_centers_init_t>::~big_any_policy() [465]
[409]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<cvflann::flann_centers_init_t>::~typed_base_any_policy() [409]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [386]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::big_any_policy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~big_any_policy() [474]
[410]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~typed_base_any_policy() [410]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [386]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::small_any_policy<char const*>::~small_any_policy() [484]
[411]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<char const*>::~typed_base_any_policy() [411]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [386]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::small_any_policy<bool>::~small_any_policy() [493]
[412]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<bool>::~typed_base_any_policy() [412]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [386]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::small_any_policy<float>::~small_any_policy() [502]
[413]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<float>::~typed_base_any_policy() [413]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [386]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::small_any_policy<int>::~small_any_policy() [511]
[414]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<int>::~typed_base_any_policy() [414]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [386]
-----------------------------------------------
                0.00    0.00       1/1           cvflann::anyimpl::small_any_policy<unsigned int>::~small_any_policy() [520]
[415]    0.0    0.00    0.00       1         cvflann::anyimpl::typed_base_any_policy<unsigned int>::~typed_base_any_policy() [415]
                0.00    0.00       1/9           cvflann::anyimpl::base_any_policy::~base_any_policy() [386]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::allocator() [420]
[416]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::new_allocator() [416]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::~allocator() [421]
[417]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::~new_allocator() [417]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, int) [431]
[418]    0.0    0.00    0.00       1         int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [418]
                0.00    0.00       1/1           __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::_Save_errno() [435]
                0.00    0.00       1/1           __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Range_chk::_S_chk(long, std::integral_constant<bool, true>) [434]
                0.00    0.00       1/1           __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::~_Save_errno() [436]
-----------------------------------------------
                0.00    0.00       1/1           Problem::run(cv::Mat*, int) [2]
[419]    0.0    0.00    0.00       1         cv::MatSize::operator()() const [419]
                0.00    0.00       1/1           cv::Size_<int>::Size_(int, int) [406]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [423]
[420]    0.0    0.00    0.00       1         std::allocator<int>::allocator() [420]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::new_allocator() [416]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [424]
[421]    0.0    0.00    0.00       1         std::allocator<int>::~allocator() [421]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::~new_allocator() [417]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [432]
[422]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [422]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [427]
[423]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [423]
                0.00    0.00       1/1           std::allocator<int>::allocator() [420]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [428]
[424]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [424]
                0.00    0.00       1/1           std::allocator<int>::~allocator() [421]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [428]
[425]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [425]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [430]
[426]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [426]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [429]
[427]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [427]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [423]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [430]
[428]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [428]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [425]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [424]
-----------------------------------------------
                0.00    0.00       1/1           Problem::run(cv::Mat*, int) [2]
[429]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector() [429]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [427]
-----------------------------------------------
                0.00    0.00       1/1           Problem::run(cv::Mat*, int) [2]
[430]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::~vector() [430]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [426]
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [433]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [428]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[431]    0.0    0.00    0.00       1         std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, int) [431]
                0.00    0.00       1/1           int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [418]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [433]
[432]    0.0    0.00    0.00       1         void std::_Destroy<int*>(int*, int*) [432]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [422]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::~vector() [430]
[433]    0.0    0.00    0.00       1         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [433]
                0.00    0.00       1/1           void std::_Destroy<int*>(int*, int*) [432]
-----------------------------------------------
                0.00    0.00       1/1           int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [418]
[434]    0.0    0.00    0.00       1         __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Range_chk::_S_chk(long, std::integral_constant<bool, true>) [434]
-----------------------------------------------
                0.00    0.00       1/1           int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [418]
[435]    0.0    0.00    0.00       1         __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::_Save_errno() [435]
-----------------------------------------------
                0.00    0.00       1/1           int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [418]
[436]    0.0    0.00    0.00       1         __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::~_Save_errno() [436]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [392] _GLOBAL__sub_I__ZN10IndividualC2EiiiPNSt7__cxx114listIP7PolygonSaIS3_EEE [289] cv::Mat::total() const [279] std::vector<Individual*, std::allocator<Individual*> >::push_back(Individual* const&)
 [393] _GLOBAL__sub_I__ZN16GeneticAlgorithmC2EPhii [419] cv::MatSize::operator()() const [328] std::vector<Individual*, std::allocator<Individual*> >::vector(std::allocator<Individual*> const&)
 [394] _GLOBAL__sub_I__ZN7Polygon14random_polygonEiii [162] __gnu_cxx::new_allocator<Individual*>::max_size() const [253] std::vector<Individual*, std::allocator<Individual*> >::vector(std::vector<Individual*, std::allocator<Individual*> > const&)
 [395] _GLOBAL__sub_I__ZN7Problem3runEPN2cv3MatEi [232] __gnu_cxx::new_allocator<Polygon*>::max_size() const [313] std::vector<Individual*, std::allocator<Individual*> >::vector()
 [396] _GLOBAL__sub_I_main    [87] __gnu_cxx::new_allocator<std::_List_node<Point*> >::max_size() const [231] std::vector<Individual*, std::allocator<Individual*> >::~vector()
 [324] sortByFitness(std::vector<Individual*, std::allocator<Individual*> >) [144] __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::max_size() const [34] std::vector<Individual*, std::allocator<Individual*> >::operator=(std::vector<Individual*, std::allocator<Individual*> >&&)
 [397] __static_initialization_and_destruction_0(int, int) [188] __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::base() const [261] std::vector<Individual*, std::allocator<Individual*> >::operator[](unsigned long)
 [398] __static_initialization_and_destruction_0(int, int) [157] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::base() const [211] void std::vector<Polygon*, std::allocator<Polygon*> >::emplace_back<Polygon*>(Polygon*&&)
 [399] __static_initialization_and_destruction_0(int, int) [191] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator*() const [299] void std::vector<Polygon*, std::allocator<Polygon*> >::_M_realloc_insert<Polygon*>(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >, Polygon*&&)
 [400] __static_initialization_and_destruction_0(int, int) [323] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator+(long) const [284] std::vector<Polygon*, std::allocator<Polygon*> >::end()
 [401] __static_initialization_and_destruction_0(int, int) [160] __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::base() const [285] std::vector<Polygon*, std::allocator<Polygon*> >::begin()
 [381] Individual::insert_dna(int, Polygon*) [209] __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator*() const [212] std::vector<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&)
 [368] Individual::remove_dna(int) [300] bool __gnu_cxx::__ops::_Val_less_iter::operator()<Individual*, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(Individual*&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [354] std::vector<Polygon*, std::allocator<Polygon*> >::vector()
 [227] Individual::get_len_dna() [317] bool __gnu_cxx::__ops::_Iter_less_iter::operator()<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >) const [355] std::vector<Polygon*, std::allocator<Polygon*> >::~vector()
  [15] Individual::mutate()  [326] std::_Vector_base<Individual*, std::allocator<Individual*> >::get_allocator() const [213] std::vector<Polygon*, std::allocator<Polygon*> >::operator[](unsigned long)
   [4] Individual::draw_CV(unsigned char*, int, int) [169] std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() const [429] std::vector<int, std::allocator<int> >::vector()
 [139] Individual::get_dna(int) [264] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() const [430] std::vector<int, std::allocator<int> >::~vector()
 [402] Individual::Individual(Individual*) [163] std::move_iterator<Individual**>::base() const [129] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_impl::_List_impl()
 [314] Individual::Individual(int, int, int, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [196] std::move_iterator<Polygon**>::base() const [92] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_node()
  [11] Individual::Individual(int, int, int, int) [65] std::_List_iterator<Point*>::operator*() const [93] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_inc_size(unsigned long)
 [390] Individual::~Individual() [82] std::_List_iterator<Point*>::operator!=(std::_List_iterator<Point*> const&) const [94] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_Node_allocator()
 [263] Population::get_individuals() [108] std::_List_iterator<Polygon*>::operator*() const [130] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_List_base()
  [32] Population::set_individuals(std::vector<Individual*, std::allocator<Individual*> >) [110] std::_List_iterator<Polygon*>::operator!=(std::_List_iterator<Polygon*> const&) const [306] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_impl::_List_impl()
  [12] Population::Population(int, int, int, int, int) [387] std::_List_const_iterator<Point*>::_M_const_cast() const [373] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_dec_size(unsigned long)
 [343] GeneticAlgorithm::cloneParents(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [364] std::_List_const_iterator<Polygon*>::_M_const_cast() const [149] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_node()
 [403] GeneticAlgorithm::clean_population() [168] std::uniform_int_distribution<int>::param_type::a() const [150] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_inc_size(unsigned long)
  [45] GeneticAlgorithm::twoPointCrossover(Individual*, Individual*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*, std::__cxx11::list<Polygon*, std::allocator<Polygon*> >*) [224] std::uniform_int_distribution<int>::param_type::b() const [374] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_put_node(std::_List_node<Polygon*>*)
  [18] GeneticAlgorithm::fps(std::vector<Individual*, std::allocator<Individual*> >, double) [181] std::uniform_real_distribution<double>::param_type::a() const [142] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_Node_allocator()
   [8] GeneticAlgorithm::mate(Individual*, Individual*, int, int, int) [238] std::uniform_real_distribution<double>::param_type::b() const [307] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_List_base()
   [3] GeneticAlgorithm::evolve(int) [276] std::vector<Individual*, std::allocator<Individual*> >::_M_check_len(unsigned long, char const*) const [30] std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point* const&>(Point* const&)
  [13] GeneticAlgorithm::GeneticAlgorithm(unsigned char*, int, int) [259] std::vector<Individual*, std::allocator<Individual*> >::_M_range_check(unsigned long) const [102] std::_List_node<Point*>* std::__cxx11::list<Point*, std::allocator<Point*> >::_M_create_node<Point*>(Point*&&)
  [58] cv::_InputArray::init(int, void const*) [246] std::vector<Individual*, std::allocator<Individual*> >::end() const [81] std::__cxx11::list<Point*, std::allocator<Point*> >::end()
  [83] cv::_InputArray::_InputArray() [159] std::vector<Individual*, std::allocator<Individual*> >::size() const [70] std::__cxx11::list<Point*, std::allocator<Point*> >::begin()
 [106] cv::_InputArray::_InputArray(cv::Mat const&) [247] std::vector<Individual*, std::allocator<Individual*> >::begin() const [47] std::__cxx11::list<Point*, std::allocator<Point*> >::insert(std::_List_const_iterator<Point*>, Point* const&)
  [66] cv::_InputArray::~_InputArray() [214] std::vector<Individual*, std::allocator<Individual*> >::max_size() const [37] void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point* const&>(std::_List_iterator<Point*>, Point* const&)
 [107] cv::_OutputArray::_OutputArray(cv::Mat&) [295] std::vector<Polygon*, std::allocator<Polygon*> >::_M_check_len(unsigned long, char const*) const [103] void std::__cxx11::list<Point*, std::allocator<Point*> >::_M_insert<Point*>(std::_List_iterator<Point*>, Point*&&)
 [114] cv::_OutputArray::_OutputArray() [192] std::vector<Polygon*, std::allocator<Polygon*> >::size() const [104] std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point*&&)
  [84] cv::_OutputArray::~_OutputArray() [265] std::vector<Polygon*, std::allocator<Polygon*> >::max_size() const [38] std::__cxx11::list<Point*, std::allocator<Point*> >::push_back(Point* const&)
 [115] cv::_InputOutputArray::_InputOutputArray(cv::Mat&) [24] std::__cxx11::_List_base<Point*, std::allocator<Point*> >::_M_get_size() const [131] std::__cxx11::list<Point*, std::allocator<Point*> >::list()
 [116] cv::_InputOutputArray::~_InputOutputArray() [201] std::__cxx11::_List_base<Polygon*, std::allocator<Polygon*> >::_M_get_size() const [384] std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon* const&>(Polygon* const&)
 [404] cv::Mat::create(int, int, int) [25] std::__cxx11::list<Point*, std::allocator<Point*> >::_M_node_count() const [154] std::_List_node<Polygon*>* std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_create_node<Polygon*>(Polygon*&&)
  [69] cv::Mat::release()     [26] std::__cxx11::list<Point*, std::allocator<Point*> >::size() const [136] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::end()
 [117] cv::Mat::Mat()        [202] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_node_count() const [135] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::begin()
 [405] cv::Mat::Mat(int, int, int) [203] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::size() const [375] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::erase(std::_List_const_iterator<Polygon*>)
 [291] cv::Mat::Mat(int, int, int, void*, unsigned long) [178] std::allocator<Individual*>::allocator(std::allocator<Individual*> const&) [385] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::insert(std::_List_const_iterator<Polygon*>, Polygon* const&)
 [112] cv::Mat::~Mat()       [310] std::allocator<Individual*>::allocator() [376] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_erase(std::_List_iterator<Polygon*>)
 [118] cv::Vec<double, 4>::Vec() [173] std::allocator<Individual*>::~allocator() [155] void std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::_M_insert<Polygon*>(std::_List_iterator<Polygon*>, Polygon*&&)
 [119] cv::Matx<double, 4, 1>::Matx() [348] std::allocator<Polygon*>::allocator() [156] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::push_back(Polygon*&&)
 [406] cv::Size_<int>::Size_(int, int) [349] std::allocator<Polygon*>::~allocator() [308] std::__cxx11::list<Polygon*, std::allocator<Polygon*> >::list()
  [67] cv::Size_<int>::Size_() [128] std::allocator<std::_List_node<Point*> >::allocator() [431] std::__cxx11::stoi(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long*, int)
  [78] cv::Point_<int>::Point_(int, int) [305] std::allocator<std::_List_node<Polygon*> >::allocator() [125] std::__detail::_List_node_header::_M_init()
  [68] cv::Point_<int>::Point_() [420] std::allocator<int>::allocator() [126] std::__detail::_List_node_header::_List_node_header()
  [79] cv::Point_<int>::operator=(cv::Point_<int>&&) [421] std::allocator<int>::~allocator() [55] std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long)
 [111] cv::MatSize::MatSize(int*) [61] std::_List_node<Point*>::_M_valptr() [21] std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long)
 [113] cv::MatStep::MatStep(unsigned long) [98] std::_List_node<Polygon*>::_M_valptr() [20] unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long)
 [288] cv::MatStep::MatStep() [248] Individual** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [22] unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long)
 [262] cv::MatStep::operator[](int) [215] Individual** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Individual*>(Individual* const*, Individual* const*, Individual**) [241] std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
 [120] cv::Scalar_<double>::Scalar_(double, double, double, double) [266] Polygon** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Polygon*>(Polygon* const*, Polygon* const*, Polygon**) [39] std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()()
  [76] Point::get_x()        [183] void std::_Destroy_aux<true>::__destroy<Individual**>(Individual**, Individual**) [95] std::allocator<std::_List_node<Point*> >* std::__addressof<std::allocator<std::_List_node<Point*> > >(std::allocator<std::_List_node<Point*> >&)
  [77] Point::get_y()        [282] void std::_Destroy_aux<true>::__destroy<Polygon**>(Polygon**, Polygon**) [151] std::allocator<std::_List_node<Polygon*> >* std::__addressof<std::allocator<std::_List_node<Polygon*> > >(std::allocator<std::_List_node<Polygon*> >&)
 [321] Point::set_x(int)     [422] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [189] __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >)
 [322] Point::set_y(int)     [194] std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_allocate(unsigned long) [367] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__miter_base<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  [99] Point::Point(Point*)   [31] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_M_swap_data(std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl&) [165] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Individual**>(std::move_iterator<Individual**>)
 [301] Point::Point(int, int) [235] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl(std::allocator<Individual*> const&) [166] Individual** std::__miter_base<Individual**>(Individual**)
   [5] utils::diff(unsigned char const*, unsigned char const*, int, int) [311] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::_Vector_impl() [198] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Polygon**>(std::move_iterator<Polygon**>)
   [9] utils::random()       [229] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_impl::~_Vector_impl() [199] Polygon** std::__miter_base<Polygon**>(Polygon**)
  [14] utils::next_int(int)  [184] std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_deallocate(Individual**, unsigned long) [190] Individual* const* std::__niter_base<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >)
  [41] Colour::random_alpha() [249] std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_create_storage(unsigned long) [158] Individual** std::__niter_base<Individual**>(Individual**)
  [19] Colour::random_colour() [161] std::_Vector_base<Individual*, std::allocator<Individual*> >::_M_get_Tp_allocator() [361] Individual** std::__niter_base<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
  [23] Colour::get_a()       [327] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(std::allocator<Individual*> const&) [171] Polygon** std::__niter_base<Polygon**>(Polygon**)
 [121] Colour::get_b()       [250] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base(unsigned long, std::allocator<Individual*> const&) [254] Individual** std::__copy_move_a<false, Individual* const*, Individual**>(Individual* const*, Individual* const*, Individual**)
 [122] Colour::get_g()       [312] std::_Vector_base<Individual*, std::allocator<Individual*> >::_Vector_base() [218] Individual** std::__copy_move_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
 [123] Colour::get_r()       [230] std::_Vector_base<Individual*, std::allocator<Individual*> >::~_Vector_base() [269] Polygon** std::__copy_move_a<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**)
 [362] Colour::set_a(double) [296] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_allocate(unsigned long) [378] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::move_backward<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
 [360] Colour::set_b(int)    [350] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::_Vector_impl() [255] Individual** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
 [358] Colour::set_g(int)    [351] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_impl::~_Vector_impl() [219] Individual** std::__copy_move_a2<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
 [359] Colour::set_r(int)    [283] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_deallocate(Polygon**, unsigned long) [270] Polygon** std::__copy_move_a2<true, Polygon**, Polygon**>(Polygon**, Polygon**, Polygon**)
 [133] Colour::Colour(Colour*) [228] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_M_get_Tp_allocator() [329] void std::__alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&)
 [344] Colour::Colour(unsigned char, unsigned char, unsigned char, double) [352] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::_Vector_base() [330] void std::__insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
  [46] Polygon::insert_point(int, Point*) [353] std::_Vector_base<Polygon*, std::allocator<Polygon*> >::~_Vector_base() [331] void std::__introsort_loop<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
  [48] Polygon::remove_point() [423] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [332] void std::__do_alloc_on_move<std::allocator<Individual*> >(std::allocator<Individual*>&, std::allocator<Individual*>&, std::integral_constant<bool, true>)
  [10] Polygon::random_polygon(int, int, int) [424] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [40] double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
  [35] Polygon::get_points_length() [425] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [256] Individual** std::uninitialized_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
  [44] Polygon::move(int, int) [426] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [220] Individual** std::uninitialized_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**)
  [36] Polygon::add_point(Point*) [427] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [271] Polygon** std::uninitialized_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**)
  [73] Polygon::get_point(int) [428] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [333] std::iterator_traits<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >::iterator_category std::__iterator_category<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&)
 [345] Polygon::Polygon(Colour*) [164] std::move_iterator<Individual**>::move_iterator(Individual**) [71] std::iterator_traits<std::_List_iterator<Point*> >::iterator_category std::__iterator_category<std::_List_iterator<Point*> >(std::_List_iterator<Point*> const&)
 [134] Polygon::Polygon(Polygon*) [197] std::move_iterator<Polygon**>::move_iterator(Polygon**) [137] std::iterator_traits<std::_List_iterator<Polygon*> >::iterator_category std::__iterator_category<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*> const&)
   [2] Problem::run(cv::Mat*, int) [174] std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [379] Individual** std::__copy_move_backward_a<true, Individual**, Individual**>(Individual**, Individual**, Individual**)
 [386] cvflann::anyimpl::base_any_policy::~base_any_policy() [175] std::random_device::~random_device() [334] void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [407] cvflann::anyimpl::typed_base_any_policy<cvflann::anyimpl::empty_any>::~typed_base_any_policy() [176] std::random_device::operator()() [257] Individual** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, Individual*>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**, std::allocator<Individual*>&)
 [408] cvflann::anyimpl::typed_base_any_policy<cvflann::flann_algorithm_t>::~typed_base_any_policy() [62] std::_List_iterator<Point*>::_List_iterator(std::__detail::_List_node_base*) [221] Individual** std::__uninitialized_copy_a<std::move_iterator<Individual**>, Individual**, Individual*>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**, std::allocator<Individual*>&)
 [409] cvflann::anyimpl::typed_base_any_policy<cvflann::flann_centers_init_t>::~typed_base_any_policy() [391] std::_List_iterator<Point*>::operator--() [272] Polygon** std::__uninitialized_copy_a<std::move_iterator<Polygon**>, Polygon**, Polygon*>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**, std::allocator<Polygon*>&)
 [410] cvflann::anyimpl::typed_base_any_policy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~typed_base_any_policy() [64] std::_List_iterator<Point*>::operator++() [380] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > std::__copy_move_backward_a2<true, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
 [411] cvflann::anyimpl::typed_base_any_policy<char const*>::~typed_base_any_policy() [109] std::_List_iterator<Polygon*>::_List_iterator(std::__detail::_List_node_base*) [320] void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Val_less_iter)
 [412] cvflann::anyimpl::typed_base_any_policy<bool>::~typed_base_any_policy() [56] std::_List_iterator<Polygon*>::operator++() [167] std::move_iterator<Individual**> std::__make_move_if_noexcept_iterator<Individual*, std::move_iterator<Individual**> >(Individual**)
 [413] cvflann::anyimpl::typed_base_any_policy<float>::~typed_base_any_policy() [88] std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::__allocated_ptr(std::allocator<std::_List_node<Point*> >&, std::_List_node<Point*>*) [200] std::move_iterator<Polygon**> std::__make_move_if_noexcept_iterator<Polygon*, std::move_iterator<Polygon**> >(Polygon**)
 [414] cvflann::anyimpl::typed_base_any_policy<int>::~typed_base_any_policy() [89] std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::~__allocated_ptr() [222] Individual** std::__uninitialized_move_if_noexcept_a<Individual**, Individual**, std::allocator<Individual*> >(Individual**, Individual**, Individual**, std::allocator<Individual*>&)
 [415] cvflann::anyimpl::typed_base_any_policy<unsigned int>::~typed_base_any_policy() [90] std::__allocated_ptr<std::allocator<std::_List_node<Point*> > >::operator=(decltype(nullptr)) [273] Polygon** std::__uninitialized_move_if_noexcept_a<Polygon**, Polygon**, std::allocator<Polygon*> >(Polygon**, Polygon**, Polygon**, std::allocator<Polygon*>&)
 [204] __gnu_cxx::new_allocator<Individual*>::deallocate(Individual**, unsigned long) [145] std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::__allocated_ptr(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*) [356] int const& std::max<int>(int const&, int const&)
 [193] __gnu_cxx::new_allocator<Individual*>::allocate(unsigned long, void const*) [146] std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::~__allocated_ptr() [236] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [275] void __gnu_cxx::new_allocator<Individual*>::construct<Individual*, Individual* const&>(Individual**, Individual* const&) [147] std::__allocated_ptr<std::allocator<std::_List_node<Polygon*> > >::operator=(decltype(nullptr)) [357] int const& std::min<int>(int const&, int const&)
 [177] __gnu_cxx::new_allocator<Individual*>::new_allocator(__gnu_cxx::new_allocator<Individual*> const&) [205] std::allocator_traits<std::allocator<Individual*> >::deallocate(std::allocator<Individual*>&, Individual**, unsigned long) [335] std::__lg(long)
 [309] __gnu_cxx::new_allocator<Individual*>::new_allocator() [251] std::allocator_traits<std::allocator<Individual*> >::select_on_container_copy_construction(std::allocator<Individual*> const&) [258] Individual** std::copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**)
 [172] __gnu_cxx::new_allocator<Individual*>::~new_allocator() [195] std::allocator_traits<std::allocator<Individual*> >::allocate(std::allocator<Individual*>&, unsigned long) [223] Individual** std::copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**)
 [292] __gnu_cxx::new_allocator<Polygon*>::deallocate(Polygon**, unsigned long) [216] std::allocator_traits<std::allocator<Individual*> >::max_size(std::allocator<Individual*> const&) [274] Polygon** std::copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**)
 [293] __gnu_cxx::new_allocator<Polygon*>::allocate(unsigned long, void const*) [277] void std::allocator_traits<std::allocator<Individual*> >::construct<Individual*, Individual* const&>(std::allocator<Individual*>&, Individual**, Individual* const&) [237] std::remove_reference<Individual*&>::type&& std::move<Individual*&>(Individual*&)
 [207] void __gnu_cxx::new_allocator<Polygon*>::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [297] std::allocator_traits<std::allocator<Polygon*> >::deallocate(std::allocator<Polygon*>&, Polygon**, unsigned long) [105] std::remove_reference<Point*&>::type&& std::move<Point*&>(Point*&)
 [346] __gnu_cxx::new_allocator<Polygon*>::new_allocator() [298] std::allocator_traits<std::allocator<Polygon*> >::allocate(std::allocator<Polygon*>&, unsigned long) [132] std::remove_reference<Polygon*&>::type&& std::move<Polygon*&>(Polygon*&)
 [347] __gnu_cxx::new_allocator<Polygon*>::~new_allocator() [267] std::allocator_traits<std::allocator<Polygon*> >::max_size(std::allocator<Polygon*> const&) [170] std::remove_reference<Individual**&>::type&& std::move<Individual**&>(Individual**&)
  [86] __gnu_cxx::new_allocator<std::_List_node<Point*> >::allocate(unsigned long, void const*) [210] void std::allocator_traits<std::allocator<Polygon*> >::construct<Polygon*, Polygon*>(std::allocator<Polygon*>&, Polygon**, Polygon*&&) [336] std::remove_reference<std::allocator<Individual*>&>::type&& std::move<std::allocator<Individual*>&>(std::allocator<Individual*>&)
 [302] void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point* const&>(Point**, Point* const&) [91] std::allocator_traits<std::allocator<std::_List_node<Point*> > >::allocate(std::allocator<std::_List_node<Point*> >&, unsigned long) [318] std::remove_reference<std::vector<Individual*, std::allocator<Individual*> >&>::type&& std::move<std::vector<Individual*, std::allocator<Individual*> >&>(std::vector<Individual*, std::allocator<Individual*> >&)
 [100] void __gnu_cxx::new_allocator<std::_List_node<Point*> >::construct<Point*, Point*>(Point**, Point*&&) [303] void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point* const&>(std::allocator<std::_List_node<Point*> >&, Point**, Point* const&) [63] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [127] __gnu_cxx::new_allocator<std::_List_node<Point*> >::new_allocator() [101] void std::allocator_traits<std::allocator<std::_List_node<Point*> > >::construct<Point*, Point*>(std::allocator<std::_List_node<Point*> >&, Point**, Point*&&) [74] std::_List_iterator<Point*> std::next<std::_List_iterator<Point*> >(std::_List_iterator<Point*>, std::iterator_traits<std::_List_iterator<Point*> >::difference_type)
 [369] __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::deallocate(std::_List_node<Polygon*>*, unsigned long) [371] std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::deallocate(std::allocator<std::_List_node<Polygon*> >&, std::_List_node<Polygon*>*, unsigned long) [140] std::_List_iterator<Polygon*> std::next<std::_List_iterator<Polygon*> >(std::_List_iterator<Polygon*>, std::iterator_traits<std::_List_iterator<Polygon*> >::difference_type)
 [370] void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::destroy<Polygon*>(Polygon**) [372] void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::destroy<Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**) [337] void std::sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
 [143] __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::allocate(unsigned long, void const*) [148] std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::allocate(std::allocator<std::_List_node<Polygon*> >&, unsigned long) [338] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual*> >, std::is_move_constructible<Individual*>, std::is_move_assignable<Individual*> >::value, void>::type std::swap<Individual*>(Individual*&, Individual*&)
 [382] void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon* const&>(Polygon**, Polygon* const&) [383] void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon* const&>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon* const&) [29] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Individual**> >, std::is_move_constructible<Individual**>, std::is_move_assignable<Individual**> >::value, void>::type std::swap<Individual**>(Individual**&, Individual**&)
 [152] void __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::construct<Polygon*, Polygon*>(Polygon**, Polygon*&&) [153] void std::allocator_traits<std::allocator<std::_List_node<Polygon*> > >::construct<Polygon*, Polygon*>(std::allocator<std::_List_node<Polygon*> >&, Polygon**, Polygon*&&) [339] void std::__sort<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__ops::_Iter_less_iter)
 [304] __gnu_cxx::new_allocator<std::_List_node<Polygon*> >::new_allocator() [388] std::_List_const_iterator<Point*>::_List_const_iterator(std::_List_iterator<Point*> const&) [389] void std::advance<std::_List_iterator<Point*>, int>(std::_List_iterator<Point*>&, int)
 [416] __gnu_cxx::new_allocator<int>::new_allocator() [365] std::_List_const_iterator<Polygon*>::_List_const_iterator(std::_List_iterator<Polygon*> const&) [75] void std::advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long)
 [417] __gnu_cxx::new_allocator<int>::~new_allocator() [377] Individual** std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Individual*>(Individual* const*, Individual* const*, Individual**) [366] void std::advance<std::_List_iterator<Polygon*>, int>(std::_List_iterator<Polygon*>&, int)
 [245] __gnu_cxx::__alloc_traits<std::allocator<Individual*>, Individual*>::_S_select_on_copy(std::allocator<Individual*> const&) [252] Individual** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**>(__gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >, Individual**) [141] void std::advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long)
  [59] __gnu_cxx::__aligned_membuf<Point*>::_M_ptr() [217] Individual** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Individual**>, Individual**>(std::move_iterator<Individual**>, std::move_iterator<Individual**>, Individual**) [57] Point*&& std::forward<Point*>(std::remove_reference<Point*>::type&)
  [60] __gnu_cxx::__aligned_membuf<Point*>::_M_addr() [268] Polygon** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Polygon**>, Polygon**>(std::move_iterator<Polygon**>, std::move_iterator<Polygon**>, Polygon**) [85] Polygon*&& std::forward<Polygon*>(std::remove_reference<Polygon*>::type&)
  [96] __gnu_cxx::__aligned_membuf<Polygon*>::_M_ptr() [28] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [180] Individual* const& std::forward<Individual* const&>(std::remove_reference<Individual* const&>::type&)
  [97] __gnu_cxx::__aligned_membuf<Polygon*>::_M_addr() [182] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min() [233] Point* const& std::forward<Point* const&>(std::remove_reference<Point* const&>::type&)
 [187] __gnu_cxx::__normal_iterator<Individual* const*, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual* const* const&) [6] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [363] Polygon* const& std::forward<Polygon* const&>(std::remove_reference<Polygon* const&>::type&)
 [179] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::__normal_iterator(Individual** const&) [7] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long) [340] void std::reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
 [280] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator--() [27] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [185] void std::_Destroy<Individual**>(Individual**, Individual**)
 [290] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::operator++() [225] std::uniform_int_distribution<int>::param_type::param_type(int, int) [186] void std::_Destroy<Individual**, Individual*>(Individual**, Individual**, std::allocator<Individual*>&)
 [242] __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::__normal_iterator(Polygon** const&) [226] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [286] void std::_Destroy<Polygon**>(Polygon**, Polygon**)
 [208] __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::operator++() [42] int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [287] void std::_Destroy<Polygon**, Polygon*>(Polygon**, Polygon**, std::allocator<Polygon*>&)
 [319] __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) [43] int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [432] void std::_Destroy<int*>(int*, int*)
 [325] __gnu_cxx::__ops::__iter_less_iter() [239] std::uniform_real_distribution<double>::param_type::param_type(double, double) [433] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
 [418] int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [240] std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [72] void std::__advance<std::_List_iterator<Point*>, long>(std::_List_iterator<Point*>&, long, std::bidirectional_iterator_tag)
 [315] bool __gnu_cxx::operator==<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [16] double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&) [138] void std::__advance<std::_List_iterator<Polygon*>, long>(std::_List_iterator<Polygon*>&, long, std::bidirectional_iterator_tag)
 [316] bool __gnu_cxx::operator< <Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [17] double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&) [341] void std::__reverse<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, std::random_access_iterator_tag)
 [234] __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >::difference_type __gnu_cxx::operator-<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [33] std::vector<Individual*, std::allocator<Individual*> >::_M_move_assign(std::vector<Individual*, std::allocator<Individual*> >&&, std::integral_constant<bool, true>) [342] void std::iter_swap<__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >)
 [294] __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >::difference_type __gnu_cxx::operator-<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [278] void std::vector<Individual*, std::allocator<Individual*> >::_M_realloc_insert<Individual* const&>(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > >, Individual* const&) [434] __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Range_chk::_S_chk(long, std::integral_constant<bool, true>)
 [281] bool __gnu_cxx::operator!=<Individual**, std::vector<Individual*, std::allocator<Individual*> > >(__gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&, __gnu_cxx::__normal_iterator<Individual**, std::vector<Individual*, std::allocator<Individual*> > > const&) [260] std::vector<Individual*, std::allocator<Individual*> >::at(unsigned long) [435] __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::_Save_errno()
 [206] bool __gnu_cxx::operator!=<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > >(__gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&, __gnu_cxx::__normal_iterator<Polygon**, std::vector<Polygon*, std::allocator<Polygon*> > > const&) [243] std::vector<Individual*, std::allocator<Individual*> >::end() [436] __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)::_Save_errno::~_Save_errno()
 [124] cv::Mat::clone() const [244] std::vector<Individual*, std::allocator<Individual*> >::begin() [80] operator new(unsigned long, void*)
